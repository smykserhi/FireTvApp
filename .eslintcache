[{"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\index.tsx":"1","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\reportWebVitals.ts":"2","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\App.tsx":"3","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx":"4","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx":"5","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx":"6","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx":"7","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\constants.ts":"8","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\api.ts":"9","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\store.ts":"10","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\logInReduser.ts":"11","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\dataReducer.ts":"12","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\actions.ts":"13","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx":"14","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx":"15","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx":"16","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx":"17","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx":"18"},{"size":748,"mtime":1610570901801,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1608570118383,"results":"21","hashOfConfig":"20"},{"size":840,"mtime":1610657283812,"results":"22","hashOfConfig":"20"},{"size":14149,"mtime":1610745587981,"results":"23","hashOfConfig":"20"},{"size":3866,"mtime":1610570481447,"results":"24","hashOfConfig":"20"},{"size":134,"mtime":1609778454097,"results":"25","hashOfConfig":"20"},{"size":140,"mtime":1609778454099,"results":"26","hashOfConfig":"20"},{"size":838,"mtime":1610656852091,"results":"27","hashOfConfig":"20"},{"size":1859,"mtime":1610814121958,"results":"28","hashOfConfig":"20"},{"size":442,"mtime":1609883477036,"results":"29","hashOfConfig":"20"},{"size":454,"mtime":1609778454110,"results":"30","hashOfConfig":"20"},{"size":449,"mtime":1610570878352,"results":"31","hashOfConfig":"20"},{"size":320,"mtime":1610562680656,"results":"32","hashOfConfig":"20"},{"size":2762,"mtime":1610742078217,"results":"33","hashOfConfig":"20"},{"size":2913,"mtime":1610742116821,"results":"34","hashOfConfig":"20"},{"size":560,"mtime":1610570598446,"results":"35","hashOfConfig":"20"},{"size":397,"mtime":1610657634870,"results":"36","hashOfConfig":"20"},{"size":981,"mtime":1610745411231,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"x0en0y",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\index.tsx",[],["76","77"],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\reportWebVitals.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\App.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx",["78","79"],"import React, { useEffect, useState } from \"react\"\r\nimport { useSelector } from 'react-redux';\r\nimport { StorageType } from \"../../store/types\"\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport api from \"../../api\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Showcase from \"./Showcase\";\r\nimport Normal from \"./Normal\"\r\nimport { LOGIN, PAGES, VIDEO, MYLIST } from \"../../constants\"\r\nimport {Loading} from \"../Loading\"\r\nimport moment from 'moment';\r\n\r\nconst MainBox = styled.div`\r\n  margin: 0 1rem;\r\n`\r\nconst MenuBox = styled.div`\r\n  display: flex;\r\n  height: 2.5rem;  \r\n`\r\nconst MenuElement = styled.div`\r\n  margin-right: 20px;\r\n  font-size: 1.7em;\r\n  font-weight: bold;\r\n`\r\nconst SelectedMenuElement = styled(MenuElement)`  \r\n  border-bottom: #ff0000 5px solid;\r\n`\r\nconst MainDis = styled.div`\r\n  display: block;  \r\n  position: relative;\r\n  min-height: 400px;\r\n`\r\nconst VideoDis = styled.div`\r\n  align-self: center;\r\n  min-height: 350px;\r\n  height: 30vh;\r\n  width: 90%;\r\n  display: contents;\r\n`\r\nconst ImageDis = styled.div`\r\n  align-self: center;   \r\n  width: 35vw;\r\n  position: absolute;\r\n  top: -30px;\r\n  right: 30px;\r\n  z-index: -1;  \r\n  box-shadow: 0px 0px 60px #d03939;\r\n  border-radius: 10px;  \r\n`\r\nconst DisH2 = styled.h2`\r\n  font-size: 2.5em;\r\n  margin-bottom: 20px;\r\n  margin-top: 15px;\r\n`\r\nconst TimeBox = styled.div`\r\n  font-size: 2em;\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n  color: #37c237;\r\n`\r\nconst DiscriptionBox = styled.div`\r\n  white-space: normal;\r\n  width: 60%;\r\n  font-size: 1.5em;\r\n`\r\nconst LiveBox = styled.div`\r\n  display: inline-block;\r\n  background-color: red;\r\n  color: white;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  padding: 5px 10px 5px 10px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n`\r\nconst ReplayBox = styled.div`\r\n  display: inline-block;\r\n  background-color: orange;\r\n  color: white;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  padding: 5px 10px 5px 10px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;  \r\n`\r\n\r\nconst CategoryBox = styled.div`\r\n  display: flex;  \r\n  flex-direction: column;\r\n`\r\nconst DiscriptionText = styled.div`\r\n  white-space: normal;\r\n  width: 70%;\r\n  display: inline;\r\n`\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n`\r\n\r\nexport interface pageCategoriesType {\r\n  description: string,\r\n  id: number,\r\n  name: string,\r\n  total: number,\r\n  type: string,\r\n}\r\nexport interface page {\r\n  default: boolean,\r\n  id: string,\r\n  name: string,\r\n}\r\n\r\ninterface videoDisListType {\r\n  description: string\r\n  id: number\r\n  image: string\r\n  mediumImage: string\r\n  metadata: metadataType\r\n  smallImage: string\r\n  title: string\r\n  type: string\r\n\r\n}\r\nexport interface videoDisType {\r\n  id: number,\r\n  list: videoDisListType[]\r\n}\r\ninterface metadataType {\r\n  duration: null | number\r\n  facility: facilityType\r\n  live: false\r\n  producer: producerType\r\n  start_time: string\r\n  state: string\r\n  timezone: string\r\n  timezoneIANA: string\r\n}\r\ninterface facilityType {\r\n  name: string,\r\n  logo: string,\r\n  slug: string\r\n}\r\ninterface producerType {\r\n  logo: string\r\n  name: string\r\n  slug: string\r\n}\r\ninterface matchParamsType {\r\n  id: string\r\n}\r\ninterface Props extends RouteComponentProps<matchParamsType> {\r\n  pageId: string\r\n}\r\n\r\nconst Home: React.FC<Props> = ({ history, match, pageId }) => {\r\n  const selectToken = (state: StorageType) => state.logIn.token\r\n  const Token = useSelector(selectToken) //token \r\n  //let myHistory = useHistory();\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n  let topMenuLength = 10 //how many pages would be displayed in top menu\r\n  const [pages, setPages] = useState<page[]>([])\r\n  const [categories, setCategories] = useState<pageCategoriesType[]>([])\r\n  const [categoriesContent, setCategoriesContent] = useState<videoDisType[]>([])\r\n  const [selectedRow, setSelectedRow] = useState<number>(0)\r\n  const [selectedCol, setSelectedCol] = useState<number>(0)\r\n\r\n  const sortContent = (categor: pageCategoriesType[], content: videoDisType[]) => {\r\n    let result: videoDisType[] = []\r\n    for (let i = 0; i < categor.length; i++) {\r\n      for (let j = 0; j < content.length; j++) {\r\n        if (categor[i].id === content[j].id) {\r\n          result.push(content[j])\r\n        }\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  //Functions\r\n  //add listners\r\n  useEffect(() => {\r\n    addListeners()\r\n    return () => {\r\n      //component will unmount\r\n      removeListeners()\r\n    }\r\n  })\r\n  //update all page or redirect to LOGIN page\r\n  useEffect(() => {\r\n    //console.log(\"in loading\")\r\n    if (!Token) history.push(LOGIN)\r\n    else if (loading) {\r\n      api.getPages()\r\n        .then((res) => {\r\n          let pagesData: page[] = res\r\n          api.getPageContent(pageId)\r\n            .then((res) => {\r\n              const categoriesContents: videoDisType[] = []\r\n              const pageCategories: pageCategoriesType[] = res\r\n              let list: any[] = []\r\n              pageCategories.map((el) => {\r\n                list.push(\r\n                  api.getCategoriContent(el.id)\r\n                    .then((res) => {\r\n                      categoriesContents.push({ id: el.id, list: res })\r\n                    })\r\n                )\r\n                return true\r\n              })\r\n              Promise.all(list).then(() => {\r\n                const sortedContent = sortContent(pageCategories, categoriesContents)\r\n                setSelectedCol(0)\r\n                setSelectedRow(0)\r\n                setPages(pagesData.filter(el => el.id != pageId))//skip current page from list\r\n                setCategories(pageCategories)\r\n                setCategoriesContent(sortedContent)\r\n                setLoading(false)\r\n              })\r\n            })\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [loading, Token, history, pageId]) //run this effect only if this variebles changed  \r\n\r\n  //console.log(\"match\", match.params)\r\n  //console.log(\"pages\", pages)\r\n  //console.log(\"categories\", categories)\r\n  //console.log(\"categoriesContent\", categoriesContent)\r\n  //console.log(\"selectedRow \", selectedRow, \" selectedCol\", selectedCol)\r\n  const uploadCategories = () => {\r\n    if (categories.length !== 0 && (categories.length - selectedRow) < 5) {\r\n      const offset = categories.length\r\n      console.log(\"offset\", offset)\r\n      api.getPageContent(pageId, 10, offset)\r\n        .then((newCategiry) => {\r\n          const categoriesContents: videoDisType[] = []\r\n          const pageCategories: pageCategoriesType[] = newCategiry\r\n          let list: any[] = []\r\n          pageCategories.forEach((el) => {\r\n            list.push(\r\n              api.getCategoriContent(el.id)\r\n                .then((res) => {\r\n                  categoriesContents.push({ id: el.id, list: res })\r\n                })\r\n            )\r\n          })\r\n          Promise.all(list).then(() => {\r\n            let tempCategoriesContent = categoriesContent\r\n            let tempCategories = categories\r\n            categoriesContents.forEach(el => tempCategoriesContent.push(el))\r\n            pageCategories.forEach(el => tempCategories.push(el))\r\n            const uniqCategory = Array.from(new Map(tempCategories.map((item: pageCategoriesType) => [item.id, item])).values());\r\n            const uniqContent = Array.from(new Map(tempCategoriesContent.map((item: videoDisType) => [item.id, item])).values());\r\n            const sortedContent = sortContent(uniqCategory, uniqContent)\r\n            setCategories(uniqCategory)\r\n            setCategoriesContent(sortedContent)\r\n            console.log(\"add categories to page \", pageId)\r\n          })\r\n        })\r\n    }\r\n  }\r\n  const uploadCategoiesContent = (category: pageCategoriesType) => {\r\n    if (category.total > categoriesContent[selectedRow].list.length && (categoriesContent[selectedRow].list.length - selectedCol) < 10) {\r\n      const offset = categoriesContent[selectedRow].list.length\r\n      api.getCategoriContent(category.id, 10, offset).then(res => {\r\n        let tempCategoriesContent = categoriesContent\r\n        res.forEach((el: videoDisListType) => tempCategoriesContent[selectedRow].list.push(el))\r\n        setCategoriesContent(tempCategoriesContent)\r\n        console.log(`Add data to category ${tempCategoriesContent[selectedRow].id}`)\r\n      })\r\n    }\r\n  }\r\n  const addListeners = () => {\r\n    document.addEventListener(\"keydown\", handleKeyDown, true);\r\n    document.addEventListener(\"keyup\", handleKeyUp, true);\r\n  }\r\n\r\n  const removeListeners = () => {\r\n    document.removeEventListener(\"keydown\", handleKeyDown, true);\r\n    document.removeEventListener(\"keyup\", handleKeyUp, true);\r\n  }\r\n  const handleKeyUp = (e: KeyboardEvent) => {\r\n    removeListeners();\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        handleEnter()\r\n        break;\r\n      default:\r\n        addListeners()\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    removeListeners();\r\n    switch (e.key) {\r\n      case 'ArrowRight':\r\n        handleArrowRight()\r\n        break;\r\n      case 'ArrowLeft':\r\n        hendleArrowLeft()\r\n        break;\r\n      case 'ArrowUp':\r\n        handleArrowUp()\r\n        break;\r\n      case 'ArrowDown':\r\n        handleArrowDown()\r\n        break;\r\n      default:\r\n        addListeners()\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleEnter = () => {\r\n    if (selectedRow === -1) {\r\n      if (selectedCol <= topMenuLength - 1) {\r\n        const selectedPageId = pages[selectedCol].id\r\n        console.log(\"Menu item\", selectedPageId)\r\n        history.push(`${PAGES}/${selectedPageId}`)\r\n        setLoading(true)\r\n      } else {\r\n        history.push(MYLIST)\r\n      }\r\n    } else {\r\n      console.log(\"Video\", currentVideo())\r\n      history.push(`${VIDEO}/${currentVideo().id}`)\r\n    }\r\n  }\r\n\r\n  const handleArrowUp = () => {\r\n    if (selectedRow > -1) {\r\n      setSelectedCol(0)\r\n      setSelectedRow(selectedRow - 1)\r\n    } else {\r\n      addListeners()\r\n    }\r\n  }\r\n  const handleArrowDown = () => {\r\n    uploadCategories()\r\n    if (selectedRow < categoriesContent.length - 1) {\r\n      setSelectedCol(0)\r\n      setSelectedRow(selectedRow + 1)\r\n    } else addListeners()\r\n  }\r\n  const hendleArrowLeft = () => {\r\n    if (selectedCol > 0) {\r\n      setSelectedCol(selectedCol - 1)\r\n    } else {\r\n      console.log(\"left more 0 Open side menu\")\r\n      addListeners()\r\n    }\r\n  }\r\n  const handleArrowRight = () => {\r\n    //top menu selector topMenuLength\r\n    if (selectedRow === -1 && selectedCol < topMenuLength) { //specified length + My List\r\n      setSelectedCol(selectedCol + 1)\r\n      //main content selector\r\n    } else {\r\n      if (categoriesContent.length > 0) {\r\n        uploadCategoiesContent(categories[selectedRow])\r\n        if (selectedCol < categoriesContent[selectedRow].list.length - 1) { //if not end of the row\r\n          setSelectedCol(selectedCol + 1)\r\n        } else addListeners()\r\n      } else addListeners()\r\n    }\r\n  }\r\n  const currentVideo = (): videoDisListType => {\r\n    if (selectedRow > 0 && categoriesContent.length > 0) {\r\n      return categoriesContent[selectedRow].list[selectedCol]\r\n    } else {\r\n      return categoriesContent[0].list[0]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MainBox>\r\n      {loading ? <Loading/>:\r\n        <div>\r\n          <MenuBox>\r\n            {pages.map((el, topMenuIndex) => {\r\n              if (topMenuIndex < topMenuLength) {\r\n                if (selectedRow === -1 && topMenuIndex === selectedCol) {\r\n                  return (<SelectedMenuElement key={topMenuIndex}>{el.name}</SelectedMenuElement>)\r\n                }\r\n                else {\r\n                  return (<MenuElement key={topMenuIndex}>{el.name}</MenuElement>)\r\n                }\r\n              } else return false\r\n            }\r\n            )}\r\n            {selectedRow === -1 && topMenuLength === selectedCol\r\n              ?\r\n              <SelectedMenuElement>MyList</SelectedMenuElement>\r\n              :\r\n              <MenuElement>MyList</MenuElement>\r\n            }\r\n          </MenuBox>\r\n          <MainDis>\r\n            <VideoDis>\r\n              <DisH2>{currentVideo() ? currentVideo().title : \"\"}</DisH2>\r\n              <TimeBox>\r\n                {currentVideo().metadata.live ?\r\n                  moment(currentVideo().metadata.start_time).format(\"hh:mm A dddd MMMM D, YYYY\") :\r\n                  moment(currentVideo().metadata.start_time).format(\"dddd MMMM D, YYYY\")}\r\n              </TimeBox>\r\n              <DiscriptionBox>\r\n                {currentVideo().metadata.live\r\n                  ? <LiveBox>Live</LiveBox>\r\n                  : <ReplayBox>Replay</ReplayBox>\r\n                }\r\n                <DiscriptionText>\r\n                  {currentVideo().description}\r\n                </DiscriptionText>\r\n              </DiscriptionBox>\r\n            </VideoDis>\r\n            <ImageDis>\r\n              <Image src={currentVideo().smallImage} alt=\"Imag\"></Image>\r\n            </ImageDis>\r\n          </MainDis>\r\n          <CategoryBox>\r\n            {categories.map((catEl, sellIndex) => {\r\n              if (sellIndex >= selectedRow) { //skip content after move\r\n                if (catEl.type === \"showcase\") {\r\n                  return (\r\n                    <Showcase\r\n                      key={catEl.id}\r\n                      sellIndex={sellIndex}\r\n                      categories={categories}\r\n                      categoriesContent={categoriesContent}\r\n                      selectedCol={selectedCol}\r\n                      selectedRow={selectedRow}\r\n                    />\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <Normal\r\n                      key={catEl.id}\r\n                      sellIndex={sellIndex}\r\n                      categories={categories}\r\n                      categoriesContent={categoriesContent}\r\n                      selectedCol={selectedCol}\r\n                      selectedRow={selectedRow}\r\n                    />\r\n                  )\r\n                }\r\n              } else return false\r\n            }\r\n            )}\r\n          </CategoryBox>\r\n        </div>\r\n      }\r\n    </MainBox>\r\n  )\r\n}\r\n\r\nexport default withRouter(Home)","C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\constants.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\api.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\store.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\logInReduser.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\dataReducer.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\store\\actions.ts",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx",[],"C:\\Users\\asmyc\\Riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":6,"column":18,"nodeType":"86","messageId":"87","endLine":6,"endColumn":27},{"ruleId":"88","severity":1,"message":"89","line":215,"column":55,"nodeType":"90","messageId":"91","endLine":215,"endColumn":57},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'keyframes' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]