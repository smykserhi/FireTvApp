[{"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx":"1","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts":"2","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts":"3","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx":"4","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts":"5","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts":"6","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts":"7","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx":"8","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx":"9","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx":"10","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx":"11","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx":"12","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx":"13","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx":"14","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts":"15","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts":"16","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx":"17","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx":"18","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx":"19","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx":"20","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx":"21","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx":"22","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx":"23","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx":"24","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\More.tsx":"25"},{"size":748,"mtime":1613504667833,"results":"26","hashOfConfig":"27"},{"size":440,"mtime":1613504624495,"results":"28","hashOfConfig":"27"},{"size":442,"mtime":1613504667836,"results":"29","hashOfConfig":"27"},{"size":1273,"mtime":1614882626425,"results":"30","hashOfConfig":"27"},{"size":939,"mtime":1615487017787,"results":"31","hashOfConfig":"27"},{"size":813,"mtime":1614807697417,"results":"32","hashOfConfig":"27"},{"size":2282,"mtime":1615349496426,"results":"33","hashOfConfig":"27"},{"size":7795,"mtime":1615578209359,"results":"34","hashOfConfig":"27"},{"size":16910,"mtime":1615491704884,"results":"35","hashOfConfig":"27"},{"size":6697,"mtime":1615420126177,"results":"36","hashOfConfig":"27"},{"size":30055,"mtime":1615576709320,"results":"37","hashOfConfig":"27"},{"size":559,"mtime":1614882172001,"results":"38","hashOfConfig":"27"},{"size":140,"mtime":1613504624491,"results":"39","hashOfConfig":"27"},{"size":5110,"mtime":1615578267217,"results":"40","hashOfConfig":"27"},{"size":4636,"mtime":1614880238890,"results":"41","hashOfConfig":"27"},{"size":906,"mtime":1615487110141,"results":"42","hashOfConfig":"27"},{"size":2883,"mtime":1615578020642,"results":"43","hashOfConfig":"27"},{"size":24098,"mtime":1615577435847,"results":"44","hashOfConfig":"27"},{"size":2973,"mtime":1615578324023,"results":"45","hashOfConfig":"27"},{"size":1089,"mtime":1615394866376,"results":"46","hashOfConfig":"27"},{"size":5641,"mtime":1614982420264,"results":"47","hashOfConfig":"27"},{"size":4188,"mtime":1615351265049,"results":"48","hashOfConfig":"27"},{"size":4566,"mtime":1615350476692,"results":"49","hashOfConfig":"27"},{"size":21112,"mtime":1615356289679,"results":"50","hashOfConfig":"27"},{"size":3143,"mtime":1615408374262,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"11q4qkh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx",[],["108","109"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx",["110","111","112"],"import React, { useState, useEffect } from \"react\"\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logOut, clearData } from \"../../store/actions\"\r\nimport { StorageType } from \"../../store/types\"\r\nimport { LOGIN, colors, hexToRGBA } from \"../../constants\"\r\nimport { Loading } from \"../Loading\"\r\nimport api from \"../../api\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { AddCircleOutline } from \"@styled-icons/material/AddCircleOutline\"\r\nimport { RemoveCircleOutline } from \"@styled-icons/material/RemoveCircleOutline\"\r\nimport { Play } from \"@styled-icons/ionicons-solid/Play\"\r\nimport { VideoCamera } from \"@styled-icons/heroicons-solid/VideoCamera\"\r\nimport { LocationPin } from \"@styled-icons/entypo/LocationPin\"\r\nimport { metadataType } from \"../Home\"\r\nimport moment from 'moment';\r\nimport VideoPlayer from \"./VideoPlayer\"\r\nimport { ArrowBack } from \"@styled-icons/ionicons-sharp/ArrowBack\"\r\n\r\n\r\ninterface MainProps {\r\n    bgImage: string\r\n}\r\ninterface ButtonProps {\r\n    selected: boolean\r\n}\r\n\r\ninterface NumberProps {\r\n    anime?: boolean\r\n}\r\n\r\nconst ShowItemAnime = keyframes`\r\n\r\n    0% {\r\n      transform: rotateX(0deg);\r\n      background: ${colors.counterColour};\r\n    }   \r\n    50% {\r\n        transform: rotateX(90deg);\r\n        background: ${colors.primary};\r\n    }\r\n    100% {\r\n        transform: rotateX(0deg);\r\n        background: ${colors.counterColour};\r\n    }  \r\n`\r\nconst MainBox = styled.div<MainProps>`\r\n    background: url(\"${props => props.bgImage}\") no-repeat ;    \r\n    /*mask-image: linear-gradient(90deg, rgba(255,255,255,0) 10%, ${colors.bgPrimary} 25%) ;    */\r\n    background-size: 100% 100%;\r\n    background-position: 100%;    \r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    z-index:-1;\r\n`\r\nconst MenuBox = styled.div`    \r\n    position: absolute;\r\n    top: 30%;\r\n    width: 17vw;\r\n    padding-left: 10rem;\r\n`\r\nconst DisBox = styled.div`\r\n    background-color: ${hexToRGBA(colors.bgPrimary, 0.9)};\r\n    height: 35vh;\r\n    position: absolute;\r\n    top: 65%;\r\n    /*width: 100vw;  */\r\n    padding: 0 4vh;\r\n    \r\n`\r\nconst TitleBox = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 4rem;\r\n    opacity: 1;\r\n`\r\nconst Dis = styled.div`\r\n    margin: 0 4rem;\r\n    opacity: 1;\r\n`\r\nconst Buttons = styled.div<ButtonProps>`\r\n    width: 100%;\r\n    height: 2.5rem;\r\n    background-color: ${props => props.selected ? colors.bgPrimary : colors.textPrimary};\r\n    color: ${props => props.selected ? colors.textPrimary : \"black\"};\r\n    border: ${props => props.selected ? `solid ${colors.textPrimary} 2px` : \"\"} ;\r\n    border-radius: 5px;\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 0.5rem;\r\n    font-weight: 700;\r\n    /*animation: ${ShowItemAnime} 0.4s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;    */\r\n`\r\nconst StyledAdd = styled(AddCircleOutline)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n\r\n`\r\nconst StyledRemove = styled(RemoveCircleOutline)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledPlay = styled(Play)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledCameraMovie = styled(VideoCamera)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledLocation = styled(LocationPin)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledArrowBack = styled(ArrowBack)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst LiveBox = styled.div`\r\n    position: absolute;\r\n    left: 40%;\r\n    top: 30%;\r\n    background-color: ${hexToRGBA(colors.bgPrimary, 0.7)};\r\n    /*width: 20vw;*/\r\n    /*height: 4rem;*/\r\n    padding: 0 10px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n`\r\nconst LiveH1 = styled.h1`\r\n    color: ${colors.primary};\r\n    font-size: xxx-large;\r\n`\r\nconst DisTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst StyledTime = styled.h2`\r\n    color: ${colors.primary};\r\n    margin-right: 1rem;\r\n`\r\nconst Counter = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst NumberContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\nconst NumberBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0 7px\r\n`\r\nconst NumbersElement = styled.div<NumberProps>`    \r\n    background: ${colors.counterColour};\r\n    margin: 0 2px;\r\n    font-weight: 700;\r\n    display: flex;\r\n    font-size: xxx-large;\r\n    justify-content: center;\r\n    border-radius: 5px;\r\n    padding: 0 8px;\r\n    align-items: center; \r\n    animation: ${ShowItemAnime} 0.5s ease-in-out both reverse  ;\r\n`\r\n\r\nconst AnimeNumber = styled(NumbersElement)`\r\n    animation: ${ShowItemAnime} 0.5s ease-in-out both  ;\r\n`\r\n\r\nconst NumberText = styled.div`\r\n    font-size: larger;\r\n    font-weight: 700;\r\n    margin-bottom: 2rem;\r\n`\r\nconst MessageBox = styled(LiveBox)`\r\n    top: 5%;   \r\n`\r\nconst SupportMessageBox = styled(MessageBox)`\r\n    top: 15%;\r\n`\r\n// const WeatingMessageBox = styled(LiveBox)`\r\n//     top:40%   \r\n// `\r\nconst Span = styled.span`\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n`\r\nconst VideoBox = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n`\r\n\r\ninterface matchParamsType {\r\n    id: string\r\n}\r\n\r\ninterface VideoDosType {\r\n    viewerState: string,\r\n    videoState: string,\r\n    startTime: string,\r\n    videoID: string,\r\n    key: string,\r\n    url: string,\r\n    message: null | string,\r\n    supportMessage: string,\r\n    saved: boolean,\r\n    description: string,\r\n    id: number,\r\n    image: string,\r\n    mediumImage: string,\r\n    metadata: metadataType,\r\n    smallImage: string,\r\n    title: string,\r\n    type: string,\r\n}\r\n\r\ntype MenuItemType = \"play\" | \"list\" | \"location\" | \"producer\" | \"back\"\r\ninterface Timer {\r\n    days: number,\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number\r\n}\r\n\r\n\r\nconst Video: React.FC<RouteComponentProps<matchParamsType>> = ({ history, match }) => {\r\n    //redux\r\n    const selectToken = (state: StorageType) => state.logIn.token\r\n    const selectUserId = (state: StorageType) => state.logIn.userName\r\n    const selectVideo = (state: StorageType) => state.data.videoDetails\r\n    const dispatch = useDispatch()\r\n    const videoDisRedux = useSelector(selectVideo)\r\n    const Token = useSelector(selectToken) //token \r\n    const userId = useSelector(selectUserId) // user Id \r\n\r\n    //main variables\r\n    const videoId = match.params.id // video ID\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [videoDis, setVideoDis] = useState<VideoDosType>()\r\n    const [menuItem, setMenuItem] = useState<MenuItemType>(\"play\")\r\n    const [timer, setTimer] = useState<Timer>({ days: 365, hours: 59, minutes: 59, seconds: 59 })\r\n    const [liveIn, setLiveIn] = useState<boolean>(false)\r\n    const [showPlay, setShowPlay] = useState<boolean>(false)\r\n    const [min5Loop, setMin5Loop] = useState<boolean>(true)\r\n    const [min5LoopCounter, setmin5LoopCounter] = useState<number>(0)\r\n    const [sec15Loop, setSec15Loop] = useState<boolean>(false)\r\n    const [sec15LoopCounter, setSec15LoopCounter] = useState<number>(0)\r\n    const [videoPlay, setVideoPlay] = useState<boolean>(false)\r\n    const [eventWaitingMesage, setEwentWeatingMessage] = useState<string>(\"\")\r\n    const [magpieReportCall, setMagpieReportCall] = useState<boolean>(false)\r\n    let timeOut5min: any\r\n    let timeOut15sec: any\r\n    let menueInterval: any\r\n\r\n    //buttons\r\n    const [play_pause, setPlay_pause] = useState<boolean>(false)\r\n    const [speedUp, setSpeedup] = useState<boolean>(true)\r\n    const [speedDown, setSpeedDown] = useState<boolean>(true)\r\n    const [plus10s, setPlus10s] = useState<boolean>(true)\r\n    const [minus10s, setMinus10s] = useState<boolean>(true)\r\n    const [showVideoMenue, setShowVideoMenue] = useState<boolean>(true)\r\n\r\n    //animations \r\n    const [animateSec, setAnimateSec] = useState<number>(0)\r\n    const [animateMin, setAnimateMin] = useState<number>(0)\r\n    const [animateHour, setAnimateHour] = useState<number>(0)\r\n    const [animateDays, setAnimateDays] = useState<number>(0)\r\n    const [animateSecS, setAnimateSecS] = useState<number>(0)\r\n    const [animateMinS, setAnimateMinS] = useState<number>(0)\r\n    const [animateHourS, setAnimateHourS] = useState<number>(0)\r\n    const [animateDaysS, setAnimateDaysS] = useState<number>(0)\r\n    \r\n\r\n\r\n\r\n    //keyboard  events\r\n    useEffect(() => {\r\n        addListeners()\r\n        //if (timer.hours === 0) setSatrtUpdatingLoop(true)\r\n        return () => {\r\n            removeListeners()\r\n        }\r\n    })\r\n    //timet animarion triger\r\n    useEffect(() => {\r\n        if (Math.floor(timer.days / 10) !== animateDays) setAnimateDays(Math.floor(timer.days / 10))\r\n        if (timer.days % 10 !== animateDaysS) setAnimateDaysS(timer.days % 10)\r\n\r\n        if (Math.floor(timer.hours / 10) !== animateHour) setAnimateHour(Math.floor(timer.hours / 10))\r\n        if (timer.hours % 10 !== animateHourS) setAnimateHourS(timer.hours % 10)\r\n\r\n        if (Math.floor(timer.minutes / 10) !== animateMin) setAnimateMin(Math.floor(timer.minutes / 10))\r\n        if (timer.minutes % 10 !== animateMinS) setAnimateMinS(timer.minutes % 10)\r\n\r\n        if (Math.floor(timer.seconds / 10) !== animateSec) setAnimateSec(Math.floor(timer.seconds / 10))\r\n        if (timer.seconds % 10 !== animateSecS) setAnimateSecS(timer.seconds % 10)\r\n    }, [timer, animateDays, animateDaysS, animateHour, animateHourS, animateMin, animateMinS, animateSec, animateSecS])\r\n\r\n    //update data every 5 min\r\n    useEffect(() => {\r\n        //console.log(\"Start 5min loop\", min5Loop)\r\n        clearTimeout(timeOut5min)\r\n        timeOut5min = setTimeout(function () {\r\n            if (!min5Loop) {\r\n                clearTimeout(timeOut5min)\r\n            } else {\r\n                reloadData()\r\n                setmin5LoopCounter(min5LoopCounter + 1)\r\n            }\r\n\r\n\r\n        }, 300000)\r\n        return () => clearTimeout(timeOut5min)\r\n    }, [min5Loop, min5LoopCounter])\r\n    //Update data every 15sec\r\n    useEffect(() => {\r\n        //console.log(\"Start 15s loop\", sec15Loop,)\r\n        clearTimeout(timeOut15sec)\r\n        timeOut15sec = setTimeout(function () {\r\n            if (!sec15Loop) {\r\n                clearTimeout(timeOut15sec)\r\n            } else {\r\n                reloadData()\r\n                setSec15LoopCounter(sec15LoopCounter + 1)\r\n            }\r\n\r\n        }, 15000)\r\n        return () => clearTimeout(timeOut15sec)\r\n    }, [sec15Loop, sec15LoopCounter])\r\n    //timer\r\n    useEffect(() => {\r\n        if (liveIn) {\r\n            // const countDownDate = moment(videoDisRedux?.metadata?.start_time)\r\n            const countDownDate = moment(videoDis?.startTime)\r\n            // const locationTimeOfset = (): number => {\r\n            //     const daylySavingTime = moment().isDST() ? -60 : 0 //if DST subtract 60min\r\n            //     if (videoDis?.metadata.timezone === \"Eastern\") return -300 - daylySavingTime\r\n            //     else if (videoDis?.metadata.timezone === \"Central\") return -360 - daylySavingTime\r\n            //     else if (videoDis?.metadata.timezone === \"Mountian\") return -420 - daylySavingTime\r\n            //     else return -480 - daylySavingTime\r\n            // }\r\n            //const timeOfset = new Date().getTimezoneOffset() + locationTimeOfset()\r\n            var timerLoop = setInterval(function () {\r\n                const now = moment()\r\n                // Find the distance between now and the count down date            \r\n                let distance = countDownDate.diff(now) //- (timeOfset * 60000)\r\n                // Time calculations for days, hours, minutes and seconds\r\n                const time = {\r\n                    days: Math.floor(distance / (1000 * 60 * 60 * 24)),\r\n                    hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                    minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\r\n                    seconds: Math.floor((distance % (1000 * 60)) / 1000),\r\n                }\r\n                // time.hours = 0\r\n                // distance = -1\r\n                // const test = {\r\n                //     days: countDownDate.startOf('day').fromNow(),\r\n                //     hours: countDownDate.startOf('hour').fromNow(),\r\n                //     minutes: countDownDate.startOf('minute').fromNow(),\r\n                //     seconds: countDownDate.startOf('second').fromNow(),\r\n                // }\r\n                // console.log(\"distance\", distance, \"countDownDate.fromNow()\",test )\r\n                if (time.hours === 0) {\r\n                    setMin5Loop(false) //stop updating very 5min\r\n                    setSec15Loop(true) //start updating every 15sec\r\n                }\r\n                if (distance < 0) {\r\n                    clearInterval(timerLoop)\r\n                    //console.log(\"Stop Timer\")\r\n                    if (liveIn) setLiveIn(false)\r\n                    setShowPlay(true)\r\n                    setEwentWeatingMessage(\"Event will start soon\")\r\n                }\r\n                setTimer(time)\r\n            }, 1000)\r\n        }\r\n\r\n        return () => clearInterval(timerLoop);\r\n    }, [liveIn, videoDisRedux?.metadata?.start_time, videoDis?.metadata.timezone, showPlay])\r\n\r\n\r\n\r\n    //main content loading\r\n    useEffect(() => {\r\n        if (!Token) history.push(LOGIN)\r\n        else if (loading) {\r\n            api.getVideoItemNoLock(Token, videoDisRedux.id)\r\n                .then(res => {\r\n                    // res.supportMessage = \"Support Message Test\"\r\n                    // res.message = \"Test MEssage\"\r\n                    console.log(videoDisRedux, res)\r\n                    setVideoDis({ ...videoDisRedux, ...res })\r\n                    if (res.viewerState === \"watch\") {\r\n                        //if starts in the future                    \r\n                        if (((new Date(videoDisRedux.metadata.start_time).getTime()) - (new Date().getTime()) > 0) && (res.videoState === \"scheduled\" || res.videoState === \"upcoming\")) {\r\n                            setLiveIn(true) //start counter\r\n                            setMenuItem(\"list\") //selevt list item in menue\r\n                        } else if (res.videoState === \"available\") setShowPlay(true) // show play button\r\n                    }\r\n                    if (res.videoState === \"delist\") {\r\n                        //console.log(\"Go Back !!! videoState:\", res.videoState)\r\n                        history.goBack()\r\n                    }\r\n                    setLoading(false)\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }, [Token, history, loading, videoDisRedux])\r\n\r\n    const handleLogOut = () => {\r\n        api.logout(Token)\r\n        dispatch(logOut())\r\n        dispatch(clearData())\r\n        localStorage.clear()\r\n        history.push(LOGIN)\r\n    }\r\n\r\n    //update data after add ar remove from myList\r\n    const reloadData = () => {\r\n        //console.log(\"Updating data...\", videoPlay)\r\n        //change api depend on playing video or not\r\n        const apiCall = videoPlay ? api.getVideoItemState(Token, videoDisRedux.id) : api.getVideoItemNoLock(Token, videoDisRedux.id)\r\n        apiCall.then(res => {\r\n            console.log(\"new data: \", videoDis, res)\r\n            if (videoDis) setVideoDis({ ...videoDisRedux, ...res })\r\n            if (res.viewerState === \"watch\") {\r\n                if (res.videoState === \"live\") { // show paly \r\n                    //if (showPlay) setShowPlay(true)\r\n                    if (liveIn) setLiveIn(false) // hide counter and show play mutton\r\n                    if (showPlay) setShowPlay(true) //show play button\r\n                    if (setMenuItem) setMenuItem(\"play\") //select play button\r\n                }\r\n            } else if (res.viewerState === \"logout\") { //invalid token\r\n                handleLogOut()\r\n            } else {\r\n                setVideoPlay(false) //close video \r\n                setShowPlay(false) //hide play button\r\n            }\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n//show menue when video is playing and hide it in 10s\r\n    const setMenueHideInterwal = ()=>{\r\n        clearTimeout(menueInterval)\r\n        setShowVideoMenue(true)\r\n        menueInterval = setTimeout(()=>{setShowVideoMenue(false)},10000)\r\n    }\r\n\r\n    const addListeners = () => {\r\n        //document.addEventListener(\"keydown\", handleKeyUp, true);\r\n        document.addEventListener(\"keyup\", handleKeyUp, true);\r\n    }\r\n\r\n    const removeListeners = () => {\r\n        //document.removeEventListener(\"keydown\", handleKeyUp, true);\r\n        document.removeEventListener(\"keyup\", handleKeyUp, true);\r\n    }\r\n\r\n    const handleKeyUp = (e: KeyboardEvent) => {\r\n        removeListeners();\r\n        console.log(\"Listner\")\r\n        switch (e.key) {\r\n            case 'Enter':\r\n                handleEnter()\r\n                break;\r\n            case 'ArrowUp':\r\n                handleArrowUp()\r\n                break;\r\n            case 'ArrowDown':\r\n                handleArrowDown()\r\n                break;\r\n            case 'ArrowRight':\r\n                handleArrowRight()\r\n                break;\r\n            case 'ArrowLeft':\r\n                hendleArrowLeft()\r\n                break;\r\n            case 'MediaPlayPause':\r\n                hendMediaPlayPause()\r\n                break;\r\n            case 'MediaFastForward':\r\n                hendleMediaFastForward()\r\n                break;\r\n            case 'MediaRewind':\r\n                hendleMediaRewind()\r\n                break;\r\n            // case 'GoBack':\r\n            //     hendleBack()\r\n            //     break;\r\n            case 'GoBack':\r\n            case 'Backspace':\r\n                hendleBack()\r\n                break;\r\n            default:\r\n                addListeners()\r\n        }\r\n        e.preventDefault();\r\n    }\r\n    //console.log(\"videoPlay\",videoPlay)\r\n    const hendleBack = () => {\r\n        console.log(\"Video backHandler\",videoPlay )\r\n        if (videoPlay) {\r\n            console.log(\"Video back\")\r\n            handleCloseVideo()\r\n            setMagpieReportCall(!magpieReportCall)            \r\n        } else {\r\n            console.log(\"History Back\")\r\n            history.goBack()\r\n        }\r\n    }\r\n    const hendleMediaFastForward = () => {\r\n        //console.log(\"Hendled\")\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setSpeedup(!speedUp)\r\n        } else addListeners()\r\n    }\r\n    const hendleMediaRewind = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setSpeedDown(!speedDown)\r\n        } else addListeners()\r\n    }\r\n\r\n    const handleCloseVideo = () => {\r\n        console.log(\"close\")\r\n        setVideoPlay(false)\r\n    }\r\n    const hendMediaPlayPause = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setPlay_pause(!play_pause)\r\n        } else addListeners()\r\n    }\r\n    const handleArrowRight = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setPlus10s(!plus10s)\r\n        } else {\r\n            addListeners()\r\n        }\r\n\r\n    }\r\n\r\n    const hendleArrowLeft = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setMinus10s(!minus10s)\r\n        } else {\r\n            addListeners()\r\n        }\r\n    }\r\n    const handleArrowUp = () => {\r\n        if (videoPlay) {\r\n            //console.log(\"up\")\r\n            setMenueHideInterwal()\r\n        } else {\r\n            if (menuItem === \"back\") setMenuItem(\"producer\")\r\n            else if (menuItem === \"producer\") setMenuItem(\"location\")\r\n            else if (menuItem === \"location\") setMenuItem(\"list\")\r\n            else if (menuItem === \"list\" && (!liveIn || showPlay)) setMenuItem(\"play\")\r\n            else addListeners()\r\n        }\r\n\r\n    }\r\n    const handleArrowDown = () => {\r\n        if (videoPlay) {\r\n            //console.log(\"down\")\r\n            setMenueHideInterwal()\r\n        } else {\r\n            if (menuItem === \"play\") setMenuItem(\"list\")\r\n            else if (menuItem === \"list\") setMenuItem(\"location\")\r\n            else if (menuItem === \"location\") setMenuItem(\"producer\")\r\n            else if (menuItem === \"producer\") setMenuItem(\"back\")\r\n            else addListeners()\r\n        }\r\n    }\r\n    const handleEnter = () => {\r\n        if (videoPlay) { //playing video \r\n            setMenueHideInterwal() \r\n            setPlay_pause(!play_pause)\r\n        } else { //in details mode\r\n            if (menuItem === \"play\") {\r\n                console.log(\"play\")\r\n                clearTimeout(timeOut5min)\r\n                clearTimeout(timeOut15sec)\r\n                setMin5Loop(false) //stop updating very 5min\r\n                setSec15Loop(false) //stop updating every 15sec          \r\n                api.getVideoItem(Token, videoDisRedux.id)\r\n                    .then(res => {\r\n                        console.log(\"Play res\", res)\r\n                        api.timorLogs(userId, videoId, \"info\", `${res.url}`).catch((err) => console.log(err.message))\r\n                        if (videoDis) setVideoDis({ ...videoDisRedux, ...res })\r\n                        if (res.videoState === \"live\") { // show paly                             \r\n                            \r\n                            setLiveIn(false) // hide counter and show play mutton\r\n                            if (setMenuItem) setMenuItem(\"play\")\r\n                        } else if (res.viewerState === \"logout\") { //invalid token\r\n                            handleLogOut()\r\n                        }\r\n                        removeListeners();\r\n                        setVideoPlay(true)// start playing  \r\n                        setSec15Loop(true)  //start update every 15s\r\n                        setMenueHideInterwal()// hide menue\r\n\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            }\r\n            else if (menuItem === \"list\") {\r\n                if (videoDis?.saved) {\r\n                    //console.log(\"remove\")\r\n                    api.removeFromMyList(Token, videoId)\r\n                        .then(() => reloadData())\r\n                        .catch(error => console.log(error));\r\n                }\r\n                else {\r\n                    api.addToMyList(Token, videoId)\r\n                        .then(() => reloadData())\r\n                        .catch(error => console.log(error));\r\n                }\r\n            }\r\n            else if (menuItem === \"location\") {\r\n                console.log(\"Location\")\r\n            }\r\n            else if (menuItem === \"producer\") {\r\n                console.log(\"producer\")\r\n            }\r\n            else if (menuItem === \"back\") {\r\n                hendleBack()\r\n            }\r\n            addListeners()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {loading ? <Loading /> :\r\n                <>\r\n                    {videoPlay\r\n                        ?\r\n                        <VideoBox>\r\n                            <VideoPlayer\r\n                                closeVideo={handleCloseVideo}\r\n                                // url=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\r\n                                url={videoDis ? videoDis.url : \"httpsDisFacility://media.w3.org/2010/05/sintel/trailer_hd.mp4\"}\r\n                                play_pause={play_pause}\r\n                                speedUp={speedUp}\r\n                                speedDown={speedDown}\r\n                                plus10s={plus10s}\r\n                                minus10s={minus10s}\r\n                                showVideoMenue={showVideoMenue}\r\n                                userId={userId}\r\n                                videoId={videoDis ? videoDis.videoID : \"0\"}\r\n                                keyId={videoDis ? videoDis.key : \"0\"}\r\n                                magpieReportCall={magpieReportCall}\r\n                            />\r\n                        </VideoBox>\r\n                        :\r\n                        <MainBox bgImage={videoDisRedux.mediumImage}>\r\n                            <MenuBox>\r\n                                {showPlay ? <Buttons selected={menuItem === \"play\"} ><StyledPlay /> Play</Buttons> : \"\"}\r\n                                <Buttons selected={menuItem === \"list\"} > {videoDis?.saved ? <><StyledRemove />Remove from My List </> : <><StyledAdd /> Add to My List</>}</Buttons>\r\n                                <Buttons selected={menuItem === \"location\"}><StyledLocation /> <Span>{videoDis?.metadata.facility.name}</Span></Buttons>\r\n                                <Buttons selected={menuItem === \"producer\"}><StyledCameraMovie /> <Span>{videoDis?.metadata.producer.name}</Span></Buttons>\r\n                                <Buttons selected={menuItem === \"back\"}><StyledArrowBack /> Go Back</Buttons>\r\n                            </MenuBox>\r\n                            {eventWaitingMesage !== \"\" ?\r\n                                <SupportMessageBox>\r\n                                    <h2>{eventWaitingMesage}</h2>\r\n                                </SupportMessageBox>\r\n                                : \"\"}\r\n                            {videoDis?.supportMessage ?\r\n                                <SupportMessageBox>\r\n                                    <h2>{videoDis.supportMessage}</h2>\r\n                                </SupportMessageBox>\r\n                                : \"\"}\r\n                            {videoDis?.message ?\r\n                                <MessageBox>\r\n                                    <h2>{videoDis.message}</h2>\r\n                                </MessageBox>\r\n                                : \"\"}\r\n                            {liveIn\r\n                                ? <LiveBox>\r\n                                    {videoDis?.metadata.live && <LiveH1>Live In</LiveH1>}\r\n                                    <Counter>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {Math.floor(timer.days / 100) > 0 ? animateDays !== Math.floor(timer.days / 100) ? <NumbersElement >{Math.floor(timer.days / 100)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.days / 100)}</AnimeNumber> : \"\"}\r\n                                                {animateDays !== Math.floor(timer.days / 10) ? <NumbersElement >{Math.floor(timer.days / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.days / 10)}</AnimeNumber>}\r\n                                                {animateDaysS !== timer.days % 10 ? <NumbersElement >{timer.days % 10}</NumbersElement> : <AnimeNumber >{timer.days % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Days</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateHour !== Math.floor(timer.hours / 10) ? <NumbersElement >{Math.floor(timer.hours / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.hours / 10)}</AnimeNumber>}\r\n                                                {animateHourS !== timer.hours % 10 ? <NumbersElement >{timer.hours % 10}</NumbersElement> : <AnimeNumber >{timer.hours % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Hours</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateMin !== Math.floor(timer.minutes / 10) ? <NumbersElement >{Math.floor(timer.minutes / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.minutes / 10)}</AnimeNumber>}\r\n                                                {animateMinS !== timer.minutes % 10 ? <NumbersElement >{timer.minutes % 10}</NumbersElement> : <AnimeNumber >{timer.minutes % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Minutes</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateSec !== Math.floor(timer.seconds / 10) ? <NumbersElement >{Math.floor(timer.seconds / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.seconds / 10)}</AnimeNumber>}\r\n                                                {animateSecS !== timer.seconds % 10 ? <NumbersElement >{timer.seconds % 10}</NumbersElement> : <AnimeNumber >{timer.seconds % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Seconds</NumberText>\r\n                                        </NumberContainer>\r\n                                    </Counter>\r\n                                </LiveBox> : \"\"}\r\n                            <DisBox>\r\n                                <TitleBox>\r\n                                    <h2>{videoDis?.title}</h2>\r\n                                    <DisTimeBox>\r\n                                        <StyledTime>{moment.parseZone(videoDis?.metadata.start_time).format(\"hh:mm a\")} {videoDis?.metadata.timezone}</StyledTime>\r\n                                        <h2>{moment(videoDis?.startTime).format(\"ll\")}</h2>\r\n                                    </DisTimeBox>\r\n                                </TitleBox>\r\n                                <Dis>\r\n                                    <h2>{videoDis?.description}</h2>\r\n                                </Dis>\r\n                            </DisBox>\r\n                        </MainBox>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Video)","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx",["113"],"import React, { useEffect, useState } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { StorageType } from \"../../store/types\"\r\nimport { addVideo } from \"../../store/actions\"\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport api from \"../../api\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport Showcase from \"./Showcase\";\r\nimport Normal from \"./Normal\"\r\nimport Guide from \"./Guide\"\r\nimport Full from \"./Full\"\r\nimport MorePages from \"./More\"\r\nimport { LOGIN, PAGES, VIDEO, MYLIST, topMenuLength, colors, SEARCH, SETTINGS, HOME } from \"../../constants\"\r\nimport { Loading } from \"../Loading\"\r\nimport { SideMenu } from \"../SideMenu\"\r\nimport moment from 'moment';\r\nimport { hexToRGBA } from \"../../constants\"\r\n//import * as CSSTransitionGroup  from 'react-transition-group'\r\nvar CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup')\r\n\r\ninterface ImageProps {\r\n  url: any\r\n}\r\n\r\ninterface MenueElementProps {\r\n  selected?: boolean\r\n}\r\nconst menuItem = keyframes`\r\n    from{        \r\n        opacity:0.5 ;\r\n    }\r\n    to{        \r\n        opacity: 1;        \r\n    }    \r\n`\r\n// const moreList = keyframes`\r\n//   0% {\r\n//     transform: translateZ(0) rotateY(0);\r\n//     opacity: 1;\r\n//   }\r\n//   54% {\r\n//     transform: translateZ(-160px) rotateY(87deg);\r\n//     opacity: 1;\r\n//   }\r\n//   100% {\r\n//     transform: translateZ(-800px) rotateY(90deg);\r\n//     opacity: 0;\r\n//   }\r\n// `\r\nconst MainBox = styled.div`\r\n  margin: 0 0 0 5rem;\r\n  padding: 4vh 0vw 0vh 6vw;\r\n  \r\n`\r\nconst MenuBox = styled.div`\r\n  display: flex;\r\n  height: 5rem;\r\n   \r\n`\r\nconst MenuElement = styled.div<MenueElementProps>`\r\n  margin-right: 20px;\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n  margin-top: 5px;\r\n  z-index: 5;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  max-width: 15ch;\r\n  color: ${props => props.selected ? colors.primary : \"\"}\r\n`\r\nconst SelectedMenuElement = styled(MenuElement)`  \r\n  border-bottom: ${colors.primary} 5px solid;  \r\n  padding-bottom: 45px;\r\n  color: ${colors.primary};\r\n  animation: ${menuItem}  0.3s ease-in-out ;  \r\n`\r\nconst MainDis = styled.div`\r\n  display: block;  \r\n  position: relative;\r\n  min-height: 400px;\r\n  z-index:0;\r\n`\r\nconst VideoDis = styled.div`\r\n  align-self: center;\r\n  min-height: 350px;\r\n  height: 30vh;\r\n  width: 90%;\r\n  display: contents;\r\n`\r\nconst ImageDis = styled.div<ImageProps>`\r\n  align-self: center;   \r\n  width: 35vw;\r\n  position: absolute;\r\n  top: -20%;\r\n  right: 10%;\r\n  z-index: -1;  \r\n  /*box-shadow: 0px 0px 60px ${colors.borderPrimary};*/\r\n  border-radius: 10px;  \r\n  /*mask-image: linear-gradient(0deg, rgba(255,255,255,0) 0%, ${colors.bgPrimary} 15%) ;*/  \r\n\r\n  \r\n  /*background: right / contain no-repeat url(${props => props.url}}) ;*/\r\n  background: linear-gradient(to left, rgba(255,255,255,0) 70%, ${hexToRGBA(colors.bgPrimary, 1)}) 95%, linear-gradient(to bottom, rgba(255,255,255,0) 60%, ${hexToRGBA(colors.bgPrimary, 1)}) 95%,url(${props => props.url}})  right / contain no-repeat;\r\n  height: 100%;\r\n  transform: scale(1.5);\r\n  margin-top: 3rem;\r\n  \r\n`\r\nconst DisH2 = styled.h2`\r\n  font-size: 2.5rem;\r\n  margin-bottom: 20px;\r\n  margin-top: 15px;\r\n  /*width: 60%;*/\r\n`\r\nconst TimeBox = styled.div`\r\n  font-size: 2em;\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n  color: ${colors.textFocus};\r\n`\r\nconst DiscriptionBox = styled.div`\r\n  white-space: normal;\r\n  width: 55%;\r\n  word-break: break-word;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;    \r\n  -webkit-line-clamp: 4;\r\n  -webkit-box-orient: vertical;\r\n  /*font-size: 1.1em;*/\r\n`\r\nconst LiveBox = styled.div`\r\n  display: inline-block;\r\n  background-color: ${colors.primary};\r\n  color: ${colors.textPrimary};\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  padding: 5px 10px 5px 10px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  /*text-shadow: 2px 2px #54462387;*/\r\n  float: left;\r\n`\r\nconst ReplayBox = styled.div`\r\n  display: inline-block;\r\n  background-color: ${colors.atention};\r\n  color: ${colors.bgPrimary};\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  padding: 5px 10px 5px 10px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  /*text-shadow: 2px 2px #54462387;  */\r\n  float: left;\r\n`\r\n\r\nconst CategoryBox = styled.div`\r\n  display: flex;  \r\n  flex-direction: column;\r\n  margin-top: 3rem;\r\n \r\n`\r\nconst DiscriptionText = styled.div`\r\n  white-space: normal;\r\n  /*width: 70%;*/\r\n  display: inline;\r\n  line-height: 1.4;\r\n  letter-spacing: 1px;\r\n  font-size: 2.5rem;\r\n  \r\n  \r\n  \r\n`\r\n\r\n// const Image = styled.img`\r\n//   width: 100%;\r\n//   border-radius: 10px;\r\n//   mask-image: linear-gradient(90deg, rgba(255,255,255,0) 0%, ${colors.bgPrimary} 25%) ;\r\n\r\n//   /*transform: scale(1.4);*/\r\n// `\r\n\r\n// const MoreList = styled.div`\r\n//   position: absolute;\r\n//   top: 30%;\r\n//   left: 30%;\r\n//   background: red;\r\n//   width: 30vw;\r\n//   height: 40vh;\r\n//   z-index: 5;\r\n//   &.more-enter.more-enter-active {   \r\n//     animation: ${moreList}  0.5s ease-in-out reverse;            \r\n//   }     \r\n//   &.more-leave.more-leave-active {   \r\n//       animation: ${moreList}  0.6s ease-in-out ;     \r\n//   }\r\n// `\r\nexport type ListProps = {\r\n  sellIndex: number,\r\n  categories: pageCategoriesType[],\r\n  categoriesContent: videoDisType[],\r\n  selectedCol: number,\r\n  selectedRow: number\r\n\r\n}\r\n\r\nexport interface pageCategoriesType {\r\n  description: string,\r\n  id: number,\r\n  name: string,\r\n  total: number,\r\n  type: string,\r\n}\r\nexport interface page {\r\n  default: boolean,\r\n  id: string,\r\n  name: string,\r\n}\r\n\r\nexport interface videoDisListType {\r\n  description: string\r\n  id: number\r\n  image: string\r\n  mediumImage: string\r\n  metadata: metadataType\r\n  smallImage: string\r\n  title: string\r\n  type: string\r\n\r\n}\r\nexport interface videoDisType {\r\n  id: number,\r\n  list: videoDisListType[]\r\n}\r\nexport interface metadataType {\r\n  duration: null | number\r\n  facility: facilityType\r\n  live: false\r\n  producer: producerType\r\n  start_time: string\r\n  state: string\r\n  timezone: string\r\n  timezoneIANA: string\r\n}\r\ninterface facilityType {\r\n  name: string,\r\n  logo: string,\r\n  slug: string\r\n  city: string\r\n  label: string\r\n  state: string\r\n}\r\ninterface producerType {\r\n  logo: string\r\n  name: string\r\n  slug: string\r\n}\r\ninterface matchParamsType {\r\n  id: string\r\n}\r\ninterface Props extends RouteComponentProps<matchParamsType> {\r\n  pageId: string\r\n}\r\n\r\nexport type sideMenuType = \"home\" | \"search\" | \"settings\" | \"myList\" | null\r\n\r\nconst Home: React.FC<Props> = ({ history, match, pageId }) => {\r\n  const selectToken = (state: StorageType) => state.logIn.token\r\n  const Token = useSelector(selectToken) //token \r\n  const dispatch = useDispatch()\r\n  //let myHistory = useHistory();\r\n  const [loading, setLoading] = useState<boolean>(true) // main content loading\r\n  const [categiryContentLoading, setCategiryContentLoading] = useState<boolean>(false) // categiry Content Loading\r\n  const [categoryesloading, setCategoryesloading] = useState<boolean>(false) // main content loading  \r\n  const [pages, setPages] = useState<page[]>([])\r\n  const [categories, setCategories] = useState<pageCategoriesType[]>([])\r\n  const [categoriesContent, setCategoriesContent] = useState<videoDisType[]>([])\r\n  const [selectedRow, setSelectedRow] = useState<number>(0)\r\n  const [selectedCol, setSelectedCol] = useState<number>(0)\r\n  const [expandSideMenue, setExpandSideMenue] = useState<boolean>(false)\r\n  const [sideMenuItem, setSideMenuItem] = useState<sideMenuType>(null)\r\n  const [moreOpen, setMoreOpen] = useState<boolean>(false)\r\n  const [moreIndex, setMoreIndex] = useState<number>(topMenuLength)\r\n\r\n\r\n  //sort content by categories\r\n  const sortContent = (categor: pageCategoriesType[], content: videoDisType[]) => {\r\n    return categor.map(el => {\r\n      const elemnt = content.filter(cont => cont.id === el.id).flat()\r\n      return elemnt[0]\r\n    })\r\n  }\r\n\r\n  //Functions\r\n  //add listners\r\n  useEffect(() => {\r\n    addListeners()\r\n    return () => {\r\n      //component will unmount\r\n      removeListeners()\r\n    }\r\n  })\r\n  //update all page or redirect to LOGIN page\r\n  useEffect(() => {\r\n    console.log(\"in loading\")\r\n    if (!Token) history.push(LOGIN)\r\n    else if (loading) {\r\n      console.log(\"loading\")\r\n      api.getPages()\r\n        .then((res) => {\r\n          let pagesData: page[] = res\r\n          const defaultPage = res.filter((el: page) => el.default === true)\r\n          const pageIdLoad = pageId === HOME ? defaultPage[0].id : pageId\r\n          api.getPageContent(pageIdLoad, pageIdLoad)\r\n            .then((res) => {\r\n              const categoriesContents: videoDisType[] = []\r\n              const pageCategories: pageCategoriesType[] = res\r\n              let list: any[] = []\r\n              pageCategories.map((el) => {\r\n                list.push(\r\n                  api.getCategoriContent(el.id)\r\n                    .then((res) => {\r\n                      categoriesContents.push({ id: el.id, list: res })\r\n                    })\r\n                )\r\n                return true\r\n              })\r\n              Promise.all(list).then(() => {\r\n                const sortedContent = sortContent(pageCategories, categoriesContents)\r\n                //console.log(\"sorted data\", pageCategories, sortedContent)\r\n                setSelectedCol(0)\r\n                setSelectedRow(0)\r\n                //console.log(\"pagesData\", pagesData, \"pageId\", pageId)\r\n                setPages(pagesData.filter((el: page) => el.id !== pageId))//skip current page from list\r\n                setCategories(pageCategories)\r\n                setCategoriesContent(sortedContent)\r\n                setLoading(false)\r\n              })\r\n            })\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [loading, Token, history, pageId]) //run this effect only if this variebles changed  \r\n\r\n  //console.log(\"match\", pageId)\r\n  // console.log(\"pages\", pages)\r\n  // console.log(\"categories\", categories)\r\n  // console.log(\"categoriesContent\", categoriesContent)\r\n  // console.log(\"selectedRow \", selectedRow, \" selectedCol\", selectedCol)\r\n  const uploadCategories = () => {\r\n    if (categories.length !== 0 && (categories.length - selectedRow) < 10 && !categoryesloading && categories[selectedRow]?.type !== \"guide\") {\r\n      setCategoryesloading(true)\r\n      const offset = categories.length\r\n      console.log(\"Categories offset\", offset)\r\n      api.getPageContent(pageId, 20, offset)\r\n        .then((newCategiry) => {\r\n          const categoriesContents: videoDisType[] = []\r\n          const pageCategories: pageCategoriesType[] = newCategiry\r\n          let list: any[] = []\r\n          pageCategories.forEach((el) => {\r\n            list.push(\r\n              api.getCategoriContent(el.id)\r\n                .then((res) => {\r\n                  categoriesContents.push({ id: el.id, list: res })\r\n                })\r\n            )\r\n          })\r\n          Promise.all(list).then(() => {\r\n            let tempCategoriesContent = categoriesContent\r\n            let tempCategories = categories\r\n            categoriesContents.forEach(el => tempCategoriesContent.push(el))\r\n            pageCategories.forEach(el => tempCategories.push(el))\r\n            const uniqCategory = Array.from(new Map(tempCategories.map((item: pageCategoriesType) => [item.id, item])).values());\r\n            const uniqContent = Array.from(new Map(tempCategoriesContent.map((item: videoDisType) => [item.id, item])).values());\r\n            console.log('unic', uniqCategory, uniqContent)\r\n            const sortedContent = sortContent(uniqCategory, uniqContent)\r\n            if (categories) setCategories(uniqCategory)\r\n            if (categoriesContent) setCategoriesContent(sortedContent)\r\n            setCategoryesloading(false)\r\n            console.log(\"add categories to page \", pageId)\r\n          })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  }\r\n  const uploadCategoiesContent = (category: pageCategoriesType) => {\r\n    console.log(\"uploadCategoiesContent\")\r\n    if (category.total > categoriesContent[selectedRow].list.length && (categoriesContent[selectedRow].list.length - selectedCol) < 20 && !categiryContentLoading) {\r\n      console.log(\"offset uploadCategoiesContent\")\r\n      setCategiryContentLoading(true)\r\n      const offset = categoriesContent[selectedRow].list.length\r\n      console.log(\"offset uploadCategoiesContent\", offset)\r\n      api.getCategoriContent(category.id, 10, offset).then(res => {\r\n        let tempCategoriesContent = categoriesContent\r\n        res.forEach((el: videoDisListType) => tempCategoriesContent[selectedRow].list.push(el))\r\n        if (categoriesContent) setCategoriesContent(tempCategoriesContent)\r\n        setCategiryContentLoading(false)\r\n        console.log(`Add data to category ${tempCategoriesContent[selectedRow].id}`)\r\n      })\r\n        .catch(error => console.log(error));\r\n    }\r\n  }\r\n  const addListeners = () => {\r\n    document.addEventListener(\"keydown\", handleKeyDown, true);\r\n    document.addEventListener(\"keyup\", handleKeyUp, true);\r\n\r\n  }\r\n\r\n  const removeListeners = () => {\r\n    document.removeEventListener(\"keydown\", handleKeyDown, true);\r\n    document.removeEventListener(\"keyup\", handleKeyUp, true);\r\n\r\n  }\r\n  const handleKeyUp = (e: KeyboardEvent) => {\r\n    removeListeners();\r\n    switch (e.key) {\r\n      case 'Enter':\r\n        handleEnter()\r\n        break;\r\n      default:\r\n        addListeners()\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  const handleKeyDown = (e: KeyboardEvent) => {\r\n    removeListeners();\r\n    switch (e.key) {\r\n      case 'ArrowRight':\r\n        handleArrowRight()\r\n        break;\r\n      case 'ArrowLeft':\r\n        hendleArrowLeft()\r\n        break;\r\n      case 'ArrowUp':\r\n        handleArrowUp()\r\n        break;\r\n      case 'ArrowDown':\r\n        handleArrowDown()\r\n        break;\r\n      case 'GoBack':\r\n      case 'Backspace':\r\n        hendleBack()\r\n        break;\r\n      default:\r\n        addListeners()\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  const hendleBack = () => {\r\n    if (moreOpen) {\r\n      setMoreOpen(false)\r\n    } else {\r\n      history.push(`${PAGES}/${HOME}`)\r\n      setLoading(true)\r\n    }\r\n\r\n  }\r\n  const handleEnter = () => {\r\n    if (expandSideMenue) {\r\n      if (sideMenuItem === \"home\") {\r\n        history.push(`${PAGES}/${HOME}`)\r\n        setLoading(true)\r\n        setSideMenuItem(null)\r\n        setExpandSideMenue(false)\r\n      }\r\n      else if (sideMenuItem === \"search\") history.push(SEARCH)\r\n      else if (sideMenuItem === \"settings\") history.push(SETTINGS)\r\n      else if (sideMenuItem === \"myList\") history.push(MYLIST)\r\n    } else if (moreOpen) {\r\n      console.log(\"More Enter\", pages[moreIndex])\r\n      history.push(`${PAGES}/${pages[moreIndex].id}`)\r\n      setMoreOpen(false)\r\n      setLoading(true)\r\n     \r\n\r\n    } else {\r\n      if (selectedRow === -1) {\r\n        if (selectedCol <= topMenuLength - 1) {\r\n          const selectedPageId = pages[selectedCol].id\r\n          console.log(\"Menu item\", selectedPageId)\r\n          history.push(`${PAGES}/${selectedPageId}`)\r\n          setLoading(true)\r\n        } else {\r\n          console.log(\"More list\")\r\n          setMoreOpen(!moreOpen)\r\n          //addListeners()\r\n          //history.push(MYLIST)\r\n        }\r\n      } else {\r\n        //console.log(\"Video\", currentVideo())\r\n        dispatch(addVideo(currentVideo()))\r\n        //setLoading(true)\r\n        history.push(`${VIDEO}/${currentVideo()?.id}`)\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const handleArrowUp = () => {\r\n    if (expandSideMenue) {\r\n      console.log(\"side up\")\r\n      if (sideMenuItem === \"search\") setSideMenuItem(\"home\")\r\n      else if (sideMenuItem === \"myList\") setSideMenuItem(\"search\")\r\n      else if (sideMenuItem === \"settings\") setSideMenuItem(\"myList\")\r\n      else addListeners()\r\n    } else if (moreOpen) {\r\n      if (moreIndex > 0) setMoreIndex(moreIndex - 1)\r\n      else addListeners()\r\n    } else {\r\n      if (categories[selectedRow]?.type === \"guide\" && selectedCol !== 0) { //inside guide category\r\n        setSelectedCol(selectedCol - 1)\r\n      } else if (categories[selectedRow]?.type === \"full\" && selectedCol > 4) { //inside full category\r\n        setSelectedCol(selectedCol - 5)\r\n      } else {\r\n        if (selectedRow > -1) {\r\n          setSelectedRow(selectedRow - 1) //set previous row\r\n          if (selectedRow > 0 && categories[selectedRow - 1]?.type === \"full\") { //if previous category type full         \r\n            setSelectedCol(categoriesContent[selectedRow - 1].list.length - 1)  // select the last item in the list\r\n          } else {\r\n            setSelectedCol(0)\r\n          }\r\n        } else {\r\n          addListeners()\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  const handleArrowDown = () => {\r\n    if (expandSideMenue) {\r\n      console.log(\"side down\")\r\n      if (sideMenuItem === \"home\") setSideMenuItem(\"search\")\r\n      else if (sideMenuItem === \"search\") setSideMenuItem(\"myList\")\r\n      else if (sideMenuItem === \"myList\") setSideMenuItem(\"settings\")\r\n      else addListeners()\r\n    } else if (moreOpen) {\r\n      if (moreIndex < pages.length - 1) setMoreIndex(moreIndex + 1)\r\n      else addListeners()\r\n    } else {\r\n      if (categories[selectedRow]?.type === \"guide\") { //inside guide category\r\n        if (selectedCol < categoriesContent[selectedRow].list.length - 1) setSelectedCol(selectedCol + 1)\r\n        uploadCategoiesContent(categories[selectedRow])\r\n      } else if (categories[selectedRow]?.type === \"full\" && selectedCol < categoriesContent[selectedRow].list.length - 5) { //inside full category\r\n        if (selectedCol < categoriesContent[selectedRow].list.length - 5) setSelectedCol(selectedCol + 5)\r\n        uploadCategoiesContent(categories[selectedRow])\r\n      } else {\r\n        uploadCategories()\r\n        if (selectedRow < categoriesContent.length - 1) {\r\n          setSelectedCol(0)\r\n          setSelectedRow(selectedRow + 1)\r\n        } else addListeners()\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  const hendleArrowLeft = () => {\r\n    if (moreOpen) {\r\n      addListeners()\r\n    } else if (selectedCol > 0 && (categories[selectedRow]?.type !== \"guide\" || selectedRow === -1)) {\r\n      setSelectedCol(selectedCol - 1)\r\n    } else {\r\n      console.log(\"left more 0 Open side menu\")\r\n      if (!expandSideMenue) {\r\n        setSideMenuItem(\"search\")\r\n        setExpandSideMenue(true)\r\n      } else addListeners()\r\n\r\n      //addListeners()\r\n    }\r\n  }\r\n  const handleArrowRight = () => {\r\n    if (expandSideMenue) {\r\n      setExpandSideMenue(false)\r\n      setSideMenuItem(null)\r\n    } else if (moreOpen) {\r\n      addListeners()\r\n    } else {\r\n      //top menu selector topMenuLength\r\n      if (selectedRow === -1 && selectedCol < topMenuLength) { //specified length + My List\r\n        setSelectedCol(selectedCol + 1)\r\n        //main content selector\r\n      } else {\r\n        if (categoriesContent.length > 0 && selectedRow > -1) {\r\n          uploadCategoiesContent(categories[selectedRow])\r\n          if (selectedCol < categoriesContent[selectedRow].list.length - 1 && categories[selectedRow]?.type !== \"guide\") { //if not end of the row\r\n            setSelectedCol(selectedCol + 1)\r\n          } else addListeners()\r\n        } else addListeners()\r\n      }\r\n    }\r\n\r\n  }\r\n  const currentVideo = (): videoDisListType => {\r\n    if (selectedRow >= 0 && categoriesContent.length > 0) {\r\n      return categoriesContent[selectedRow].list[selectedCol]\r\n    } else {\r\n      return categoriesContent[0]?.list[0]\r\n    }\r\n  }\r\n  //console.log(currentVideo())\r\n  return (\r\n    <MainBox>\r\n      {loading ? <Loading /> :\r\n        <div>\r\n          <CSSTransitionGroup\r\n            transitionName=\"more\"\r\n            transitionEnterTimeout={500}\r\n            transitionLeaveTimeout={500}>\r\n            {moreOpen ? <MorePages pages={pages} selected={moreIndex} /> : \"\"}\r\n          </CSSTransitionGroup>\r\n\r\n          <SideMenu expand={expandSideMenue} selected={sideMenuItem} />\r\n          <MenuBox>\r\n            {pages.map((el, topMenuIndex) => {\r\n              if (topMenuIndex < topMenuLength) {\r\n                if (selectedRow === -1 && topMenuIndex === selectedCol) {\r\n                  return (<SelectedMenuElement key={topMenuIndex}>{el.name}</SelectedMenuElement>)\r\n                }\r\n                else {\r\n                  return (<MenuElement selected={el.id == pageId} key={topMenuIndex}>{el.name}</MenuElement>)\r\n                }\r\n              } else return false\r\n            }\r\n            )}\r\n            {selectedRow === -1 && topMenuLength === selectedCol\r\n              ?\r\n              <SelectedMenuElement>More...</SelectedMenuElement>\r\n              :\r\n              <MenuElement >More...</MenuElement>\r\n            }\r\n          </MenuBox>\r\n          <MainDis>\r\n            <VideoDis>\r\n              <DisH2>{currentVideo() ? currentVideo().title : \"\"}</DisH2>\r\n              <TimeBox>\r\n                {currentVideo().metadata?.live ?\r\n                  `${moment.parseZone(currentVideo().metadata.start_time).format(\"hh:mm A\")} ${currentVideo().metadata.timezone} ${moment.parseZone(currentVideo().metadata.start_time).format(\"dddd MMMM D, YYYY\")} ` :\r\n                  moment.parseZone(currentVideo().metadata.start_time).format(\"dddd MMMM D, YYYY\")}\r\n              </TimeBox>\r\n              <DiscriptionBox>\r\n                {currentVideo().metadata.live\r\n                  ? <LiveBox>LIVE</LiveBox>\r\n                  : <ReplayBox>REPLAY</ReplayBox>\r\n                }\r\n                <DiscriptionText>\r\n                  {currentVideo().description}\r\n                </DiscriptionText>\r\n              </DiscriptionBox>\r\n            </VideoDis>\r\n            <ImageDis url={currentVideo().mediumImage}>\r\n              {/* <Image src={currentVideo().mediumImage} alt=\"Imag\"></Image> */}\r\n            </ImageDis>\r\n          </MainDis>\r\n          <CSSTransitionGroup\r\n            component={CategoryBox}\r\n            transitionName=\"category\"\r\n            transitionEnterTimeout={300}\r\n            transitionLeaveTimeout={300}>\r\n            {categories.map((catEl, sellIndex) => {\r\n              if (sellIndex >= selectedRow) { //skip content after move\r\n                if (catEl.type === \"showcase\") {\r\n                  console.log(\"sellIndex\", sellIndex)\r\n                  return (\r\n                    <Showcase\r\n                      key={sellIndex}\r\n                      sellIndex={sellIndex}\r\n                      categories={categories}\r\n                      categoriesContent={categoriesContent}\r\n                      selectedCol={selectedCol}\r\n                      selectedRow={selectedRow}\r\n                    />\r\n                  )\r\n                } else if (catEl.type === \"guide\") {\r\n                  return (\r\n                    <Guide\r\n                      key={catEl.id}\r\n                      sellIndex={sellIndex}\r\n                      categories={categories}\r\n                      categoriesContent={categoriesContent}\r\n                      selectedCol={selectedCol}\r\n                      selectedRow={selectedRow}\r\n                    />\r\n                  )\r\n                } else if (catEl.type === \"full\") {\r\n                  return (\r\n                    <Full\r\n                      key={catEl.id}\r\n                      sellIndex={sellIndex}\r\n                      categories={categories}\r\n                      categoriesContent={categoriesContent}\r\n                      selectedCol={selectedCol}\r\n                      selectedRow={selectedRow}\r\n                    />\r\n                  )\r\n                } else {\r\n                  return (\r\n                    <Normal\r\n                      key={catEl.id}\r\n                      sellIndex={sellIndex}\r\n                      categories={categories}\r\n                      categoriesContent={categoriesContent}\r\n                      selectedCol={selectedCol}\r\n                      selectedRow={selectedRow}\r\n                    />\r\n                  )\r\n                }\r\n              } else return false\r\n            }\r\n            )}\r\n          </CSSTransitionGroup>\r\n        </div>\r\n      }\r\n    </MainBox>\r\n  )\r\n}\r\n\r\nexport default withRouter(Home)","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx",[],["114","115"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx",["116","117","118","119","120","121","122","123","124"],"import React, { useRef, useState, useEffect } from \"react\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Forward10 } from \"@styled-icons/material/Forward10\"\r\nimport { Replay10 } from \"@styled-icons/material/Replay10\"\r\nimport { Forward2 } from \"@styled-icons/icomoon/Forward2\"\r\nimport { Backward } from \"@styled-icons/icomoon/Backward\"\r\nimport { PlayCircle } from \"@styled-icons/fa-regular/PlayCircle\"\r\nimport { PauseCircle } from \"@styled-icons/fa-regular/PauseCircle\"\r\nimport { colors, hexToRGBA, host } from \"../../constants\"\r\nimport { CarSport } from \"@styled-icons/ionicons-sharp/CarSport\"\r\nimport { Speedometer2 } from \"@styled-icons/bootstrap/Speedometer2\"\r\nimport { Loading } from \"../Loading\"\r\nimport api from \"../../api\";\r\nvar CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup')\r\n\r\n\r\n\r\ninterface ButtonProps {\r\n    clicked?: boolean\r\n}\r\ninterface ProgressProps {\r\n    width: number\r\n}\r\n\r\ninterface MenueProps {\r\n    show: boolean\r\n}\r\nconst ButtonClickAnimation = keyframes`\r\n    0% {\r\n        transform: scale(1);\r\n        filter: blur(0px);\r\n        opacity: 1;\r\n        color: ${colors.textPrimary}\r\n    }\r\n    100% {\r\n        transform: scale(0.8);\r\n        filter: blur(4px);\r\n       /* opacity: 0;*/\r\n        color:${colors.primary}\r\n    }\r\n`\r\n\r\n\r\nconst ButtonClickAnimation2 = keyframes`\r\n    0% {\r\n        transform: scale(1);\r\n        filter: blur(0px);\r\n        opacity: 1;\r\n        color: ${colors.textPrimary}\r\n    }\r\n    100% {\r\n        transform: scale(0.8);\r\n        filter: blur(5px);\r\n       /* opacity: 0;*/\r\n        color:${colors.primary}\r\n    }\r\n`\r\nconst MenueAnimation = keyframes`\r\n    0% {\r\n        transform: translateY(150px);\r\n        \r\n    }\r\n    100% {\r\n        transform: translateY(0);\r\n        \r\n    }\r\n`\r\nconst StyledLoading = styled(Loading)`\r\n    // \r\n    \r\n`\r\n\r\n\r\nconst Forward10Button = styled(Forward10) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst Replay10Button = styled(Replay10) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\n\r\nconst Forward2Button = styled(Forward2) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst BackwardButton = styled(Backward) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\n\r\nconst PlayCircleButton = styled(PlayCircle) <ButtonProps>`\r\n    width: 5rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst PauseCircleButton = styled(PauseCircle) <ButtonProps>`\r\n    width: 5rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst MenueContainer = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 15vh;\r\n    background-color:  ${hexToRGBA(colors.bgPrimary, 0.7)};\r\n    &.category-enter.category-enter-active {   \r\n        animation: ${MenueAnimation}  0.4s ease-in-out ;            \r\n      }     \r\n      &.category-leave.category-leave-active {   \r\n          animation: ${MenueAnimation}  0.5s ease-in-out reverse;     \r\n      }\r\n    \r\n\r\n`\r\nconst ProgressContainer = styled.div`\r\n    width: 90%;\r\n`\r\n\r\nconst StyledCarSport = styled(CarSport) <ProgressProps>`\r\n    width: 3rem;\r\n    transform: translate(-5px, -35px); \r\n    margin-left: ${props => props.width}%;\r\n    color: ${colors.primary}\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    height: 100%;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\nconst StyledVideo = styled.video`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center  ;   \r\n`\r\nconst TimeContainer = styled.div`\r\n    width: 6rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    font-size: 2rem;\r\n`\r\nconst CurrentTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst SpeedBox = styled.div`\r\n    position: absolute;\r\n    left: 20%;\r\n    top: 40%;\r\n    font-size: 2rem;\r\n`\r\nconst ProgressBox = styled.div`   \r\n    height: 100%\r\n    width:100%;\r\n    background-color: ${colors.textPrimary};\r\n    border-radius: 10px;\r\n    margin-top:1rem;\r\n    height:1rem;\r\n    position: relative;\r\n\r\n`\r\nconst ProgressElement = styled.div<ProgressProps>`\r\n    height:100%;\r\n    width: ${props => props.width}%;\r\n    background-color: ${colors.primary};\r\n    border-radius: 10px 0px 0px 10px;\r\n    text-align: right;\r\n    \r\n`\r\nconst StyledSpeedometer2 = styled(Speedometer2)`\r\n    width: 2.5rem;\r\n    /*color: ${colors.primary};*/\r\n    margin-left: 0.5rem;\r\n    transform: translateY(-5px);\r\n`\r\n\r\n\r\n\r\n\r\n\r\ntype VideoProps = {\r\n    url: string,\r\n    closeVideo: () => void,\r\n    play_pause: boolean,\r\n    speedUp: boolean,\r\n    speedDown: boolean,\r\n    plus10s: boolean,\r\n    minus10s: boolean,\r\n    showVideoMenue: boolean,\r\n    userId: string,\r\n    videoId: string,\r\n    keyId: string,\r\n    magpieReportCall: boolean\r\n}\r\n\r\ntype TimeType = {\r\n    hours: number\r\n    minutes: number\r\n    seconds: number\r\n}\r\ntype PrevSessionType = {\r\n    user: string,\r\n    stream: string,\r\n    position: number,\r\n    watched: number,\r\n    volume: number,\r\n    version: string\r\n}\r\n\r\nconst VideoPlayer: React.FC<VideoProps> = ({ url, closeVideo, play_pause, speedUp, speedDown, plus10s, minus10s, showVideoMenue, userId, videoId, keyId, magpieReportCall }) => {\r\n    const video = useRef<HTMLVideoElement>(null)\r\n    //const progress = useRef<HTMLProgressElement>(null)\r\n    const [playing, setPlaying] = useState<boolean>(true)\r\n    const [backSpeed, setBackSpeed] = useState<boolean>(true)\r\n    const [forwardSpeed, setForwardSpeed] = useState<boolean>(true)\r\n    const [plus10Sec, setPlus10Sec] = useState<boolean>(true)\r\n    const [minus10Sec, setMinus10Sec] = useState<boolean>(true)\r\n    const [currentTime, setCurrentTime] = useState<TimeType>({ hours: 0, minutes: 0, seconds: 0 })\r\n    const [videoDuration, setVideoDuration] = useState<TimeType>({ hours: 0, minutes: 0, seconds: 0 })\r\n    const [speed, setSpeed] = useState<1 | 2 | 3 | 4>(1)\r\n    const [progress, setProgress] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [videoReady, setVideoReady] = useState<boolean>(false)\r\n    const [hideMenue, setHideMenue] = useState<boolean>(true)\r\n    const [magpieResset, setMagpieResset] = useState<boolean>(false)\r\n    const [magpieCounter, setMagpieCounter] = useState<any>(Date.now())\r\n    let magpieLoop: any\r\n    //let magpieCounter = \r\n    // let prevSession = {\r\n    //     user: userId,\r\n    //     stream: videoId,\r\n    //     position: video.current ? video.current?.currentTime:0,\r\n    //     watched: new Date().getSeconds(),\r\n    //     volume: video.current ? video.current.volume * 100 : 0,\r\n    //     version: \"FireTV 2.0.0\"\r\n    // }\r\n\r\n\r\n    const usePrevious = (value: VideoProps) => {\r\n        const ref = useRef<VideoProps>();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    const previousProps = usePrevious({ url, play_pause, speedUp, speedDown, plus10s, minus10s, closeVideo, showVideoMenue,  userId, videoId, keyId, magpieReportCall })\r\n    \r\n    //Magpie Loop\r\n    useEffect(() => {\r\n        magpieApiReport()\r\n        magpieLoop = setTimeout(() => { setMagpieResset(!magpieResset) }, 60000);\r\n        return () => clearTimeout(magpieLoop)\r\n    }, [magpieResset, magpieReportCall])\r\n\r\n\r\n    //check which button ckicked\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            if (previousProps?.play_pause !== play_pause) playPauseHandle()\r\n            if (previousProps?.speedUp !== speedUp) fastForward()\r\n            if (previousProps?.speedDown !== speedDown) fastBack()\r\n            if (previousProps?.plus10s !== plus10s) moveUp10Sec()\r\n            if (previousProps?.minus10s !== minus10s) moveDown10Sec()\r\n            if (previousProps?.showVideoMenue !== showVideoMenue) {\r\n                console.log(\"showVideoMenue\",showVideoMenue)\r\n                 //setHideMenue(!hideMenue)\r\n                }\r\n            //if (previousProps?.showVideoMenue !== showVideoMenue) setHideMenue(!hideMenue)\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }, [play_pause, speedUp, speedDown, plus10s, minus10s, loading])\r\n\r\n    //Timor session loop\r\n    useEffect(() => {\r\n        var timorSessionLoop = setInterval(() => {\r\n            // const nowSeconds = new Date().getSeconds()\r\n            // const time = nowSeconds < prevSession.watched ? (nowSeconds+60)-prevSession.watched : nowSeconds-prevSession.watched\r\n            const data = {\r\n                user: userId,\r\n                stream: videoId,\r\n                position: video.current ? Math.round(video.current.currentTime) : 0,\r\n                watched: 15,\r\n                volume: video.current ? video.current.volume * 100 : 0,\r\n                version: \"FireTV 2.0.0\"\r\n            }\r\n            //console.log(\"data to session\", data,)\r\n            api.timorSession(userId, videoId, video.current ? Math.round(video.current.currentTime) : 0, 15, video.current ? video.current.volume * 100 : 0, \"FireTV 2.0.0\")\r\n                .catch((err) => console.log(err.message))\r\n            // prevSession = data\r\n        }, 15000)\r\n        return () => clearInterval(timorSessionLoop)\r\n    }, [])\r\n\r\n\r\n    //Events \r\n    useEffect(() => {\r\n        video.current?.addEventListener(\"canplay\", canPlayHandler) //1\r\n        video.current?.addEventListener(\"ended\", videoEndedHandler)//9\r\n        video.current?.addEventListener(\"error\", (e) => errorHandler(e))\r\n        video.current?.addEventListener(\"pause\", pauseEventHandler); //5/8\r\n        video.current?.addEventListener(\"play\", playEventHandler);//2/6\r\n        video.current?.addEventListener(\"timeupdate\", timeUpdateHandler)//4 ........\r\n        video.current?.addEventListener(\"waiting\", waitingEventHandler)\r\n        video.current?.addEventListener(\"stalled\", stalledHandler)\r\n        // video.current?.addEventListener(\"playing\", playingHandler)//3/7\r\n        return () => {\r\n            video.current?.removeEventListener(\"canplay\", canPlayHandler)\r\n            video.current?.removeEventListener(\"ended\", videoEndedHandler)\r\n            video.current?.removeEventListener(\"error\", errorHandler)\r\n            video.current?.removeEventListener(\"pause\", pauseEventHandler);\r\n            video.current?.removeEventListener(\"play\", playEventHandler);\r\n            video.current?.removeEventListener(\"timeupdate\", timeUpdateHandler)\r\n            video.current?.removeEventListener(\"waiting\", waitingEventHandler)\r\n            video.current?.removeEventListener(\"stalled\", stalledHandler)\r\n            // video.current?.removeEventListener(\"playing\", playingHandler)\r\n        }\r\n    })\r\n\r\n    //progress loop\r\n    useEffect(() => {\r\n        let intervalLoop = setInterval(() => {\r\n            let prog\r\n            if (video.current) {\r\n                //setVideoDuration(video.current?.duration)\r\n                prog = Math.round((video.current?.currentTime / video.current?.duration) * 100)\r\n                setProgress(prog)\r\n                const time: TimeType = {\r\n                    hours: Math.floor(Math.floor(video.current?.currentTime / 60) / 60),\r\n                    minutes: Math.floor(video.current?.currentTime / 60) - Math.floor(Math.floor(video.current?.currentTime / 60) / 60) * 60,\r\n                    seconds: Math.round(video.current?.currentTime - (Math.floor(video.current?.currentTime / 60) * 60))\r\n                }\r\n                // setCurrentTime(Math.round(video.current?.currentTime))\r\n                setCurrentTime(time)\r\n                if (prog === 100) setPlaying(false)\r\n            }\r\n        }, 100)\r\n        return () => clearInterval(intervalLoop)\r\n    })\r\n    //Speed loop\r\n    useEffect(() => {\r\n        let speedLoop = setInterval(() => {\r\n            console.log(\"Speed \", speed)\r\n            if (speed === 1) clearInterval(speedLoop)\r\n            if (speed === 2) if (video.current) video.current.currentTime += 10.0\r\n            if (speed === 3) if (video.current) video.current.currentTime += 60.0\r\n            if (speed === 4) if (video.current) video.current.currentTime += 120.0\r\n        }, 1000)\r\n        return () => clearInterval(speedLoop)\r\n    }, [speed])\r\n\r\n    //Event handlers\r\n    const canPlayHandler = () => {\r\n        console.log(\"canPlayHandler\")\r\n        if (video.current) {\r\n            const time: TimeType = {\r\n                hours: Math.floor(Math.floor(video.current?.duration / 60) / 60),\r\n                minutes: Math.floor(video.current?.duration / 60) - Math.floor(Math.floor(video.current?.duration / 60) / 60) * 60,\r\n                seconds: Math.round(video.current?.duration - (Math.floor(video.current?.duration / 60) * 60))\r\n            }\r\n            setVideoDuration(time)\r\n            setVideoReady(true)\r\n        }\r\n    }\r\n\r\n    const magpieApiReport = () => {\r\n        const report = {\r\n            key: keyId,\r\n            email: userId,\r\n            host: host,\r\n            video_id: videoId,\r\n            captured: new Date().toISOString(),\r\n            seconds: Math.floor((Date.now() - magpieCounter) / 1000)\r\n        }\r\n        setMagpieCounter(Date.now())\r\n        api.magpieReport(report).catch((err) => console.log(err.message))\r\n        console.log(\"magpieLoop\", report)\r\n    }\r\n\r\n    const videoEndedHandler = () => {\r\n        console.log(\"videoEndedHandler\")\r\n        magpieApiReport()\r\n        closeVideo()\r\n    }\r\n    const errorHandler = (err: ErrorEvent) => {\r\n        console.log(\"errorHandler\")\r\n        api.timorLogs(userId, videoId, \"error\", err.message).catch((err) => console.log(err.message))\r\n    }\r\n    const pauseEventHandler = () => {\r\n        console.log(\"pauseEventHandler\",)\r\n        api.timorLogs(userId, videoId, \"control\", \"Video paused\").catch((err) => console.log(err.message))\r\n    }\r\n    const playEventHandler = () => {\r\n        console.log(\"playEventHandler\")\r\n        api.timorLogs(userId, videoId, \"control\", \"Video start playing\").catch((err) => console.log(err.message))\r\n    }\r\n    const timeUpdateHandler = () => {\r\n        //loop 15s //session api\r\n        console.log(\"timeUpdateHandler\")\r\n    }\r\n    const waitingEventHandler = () => {\r\n        //buffering +\"\"\r\n        console.log(\"waitingEventHandler\")\r\n        api.timorLogs(userId, videoId, \"buffering\", \"\").catch((err) => console.log(err.message))\r\n    }\r\n    const stalledHandler = () => {\r\n        console.log(\"stalledHandler\")\r\n        api.timorLogs(userId, videoId, \"info\", \"Video stall\").catch((err) => console.log(err.message))\r\n    }\r\n    // const playingHandler = () => {\r\n    //     //clear it\r\n    //     console.log(\"playingHandler\")\r\n    // }\r\n\r\n    //Speed icons\r\n    const Speed = () => {\r\n        let SpeedX = []\r\n        for (let i = 0; i < speed; i++) {\r\n            SpeedX.push(<StyledSpeedometer2 key={i} />)\r\n        }\r\n        return SpeedX\r\n    }\r\n\r\n    const playPauseHandle = () => {\r\n        clearTimeout(magpieLoop)\r\n        if (playing) { //pause\r\n            video.current?.pause()\r\n            setPlaying(false)\r\n            setSpeed(1)\r\n            magpieApiReport()\r\n            //setSpeed(1)\r\n        }\r\n        else { //play\r\n            video.current?.play()\r\n            setPlaying(true)\r\n            setSpeed(1)\r\n            setMagpieCounter(Date.now())\r\n            setMagpieResset(!magpieResset)\r\n        }\r\n    }\r\n    const fastForward = () => {\r\n        console.log(\"Speed up\")\r\n        clearTimeout(magpieLoop)\r\n        magpieApiReport()\r\n        if (video.current) {\r\n            if (speed === 1) setSpeed(2)\r\n            if (speed === 2) setSpeed(3)\r\n            if (speed === 3) setSpeed(4)\r\n            setForwardSpeed(!forwardSpeed)\r\n        }\r\n\r\n    }\r\n    const fastBack = () => {\r\n        clearTimeout(magpieLoop)\r\n        magpieApiReport()\r\n        if (video.current) {\r\n            if (video.current) {\r\n                if (speed === 2) setSpeed(1)\r\n                if (speed === 3) setSpeed(2)\r\n                if (speed === 4) setSpeed(3)\r\n                setBackSpeed(!backSpeed)\r\n            }\r\n        }\r\n    }\r\n    const moveUp10Sec = () => {\r\n        if (video.current) video.current.currentTime += 10.0\r\n        setPlus10Sec(!plus10Sec)\r\n    }\r\n    const moveDown10Sec = () => {\r\n        if (video.current) video.current.currentTime -= 10.0\r\n        setMinus10Sec(!minus10Sec)\r\n    }\r\n\r\n    //return progress\r\n\r\n    //progressLoop()\r\n\r\n    return (\r\n        <div>\r\n            {!videoReady ? <StyledLoading /> : \"\"}\r\n            <StyledVideo ref={video} autoPlay id=\"video\">\r\n                <source src={url} type=\"application/x-mpegURL\" />\r\n                {/* <source src={url} type=\"video/mp4\" /> */}\r\n            </StyledVideo>\r\n            <CSSTransitionGroup\r\n                //component={AnimeBox}\r\n                transitionName=\"category\"\r\n                transitionEnterTimeout={400}\r\n                transitionLeaveTimeout={400}>\r\n                {showVideoMenue\r\n                    ? <MenueContainer>\r\n                        <ProgressContainer>\r\n                            <ProgressBox>\r\n                                {/* <StyledFlagCheckered />\r\n                        <StyledToriiGate/> */}\r\n                                <ProgressElement width={progress}> </ProgressElement><StyledCarSport width={progress} />\r\n                            </ProgressBox>\r\n                            {/* <Progress ref={progress} max=\"100\" value=\"0\" /> */}\r\n                        </ProgressContainer>\r\n                        <ButtonContainer>\r\n                            <SpeedBox>\r\n                                Speed:{Speed()}\r\n                            </SpeedBox>\r\n                            <CurrentTimeBox>\r\n                                <TimeContainer>\r\n                                    {/* {Math.floor(currentTime / 60) > 0 ? `${Math.floor(currentTime / 60)}:` : \"\"}\r\n                                {currentTime - (Math.floor(currentTime / 60) * 60)} */}\r\n                                    {currentTime?.hours > 0 ? `${currentTime?.hours}:` : \"\"}\r\n                                    {currentTime?.minutes > 0 ? `${currentTime?.minutes}:` : \"\"}\r\n                                    {currentTime?.seconds}s\r\n                            </TimeContainer>\r\n                            </CurrentTimeBox>\r\n                            <div>\r\n                                {backSpeed ? <BackwardButton clicked={true} onClick={fastBack} /> : <BackwardButton clicked={false} onClick={fastBack} />}\r\n                                {minus10Sec ? <Replay10Button clicked={true} onClick={moveDown10Sec} /> : <Replay10Button clicked={false} onClick={moveDown10Sec} />}\r\n                                {playing ? <PauseCircleButton clicked={play_pause} onClick={playPauseHandle} /> : <PlayCircleButton clicked={play_pause} onClick={playPauseHandle} />}\r\n                                {plus10Sec ? <Forward10Button clicked={true} onClick={moveUp10Sec} /> : <Forward10Button clicked={false} onClick={moveUp10Sec} />}\r\n                                {forwardSpeed ? <Forward2Button clicked={true} onClick={fastForward} /> : <Forward2Button clicked={false} onClick={fastForward} />}\r\n                            </div>\r\n                            <TimeContainer>\r\n                                {/* {Math.floor(Math.floor(videoDuration / 60) / 60) > 0 ? `${Math.floor(Math.floor(videoDuration / 60) / 60)}:` : \"\"}\r\n                            {Math.floor(videoDuration / 60) > 0 ? `${Math.floor(videoDuration / 60) - Math.floor(Math.floor(videoDuration / 60) / 60) * 60}:` : \"\"}\r\n                            {(videoDuration - (Math.floor(videoDuration / 60) * 60)).toFixed(0)} */}\r\n                                {videoDuration?.hours > 0 ? `${videoDuration?.hours}:` : \"\"}\r\n                                {videoDuration?.minutes > 0 ? `${videoDuration?.minutes}:` : \"\"}\r\n                                {videoDuration?.seconds}s\r\n\r\n                        </TimeContainer>\r\n                        </ButtonContainer>\r\n                    </MenueContainer>\r\n                    : \"\"}\r\n            </CSSTransitionGroup>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\More.tsx",["125","126","127"],"import React, { useEffect, useState } from \"react\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { page } from \"./index\"\r\nimport { colors, hexToRGBA } from \"../../constants\"\r\nimport {ArrowWithCircleDown} from\"@styled-icons/entypo/ArrowWithCircleDown\"\r\nimport {ArrowWithCircleUp} from \"@styled-icons/entypo/ArrowWithCircleUp\"\r\n\r\nconst moreList = keyframes`\r\n  0% {\r\n    transform: translateZ(0) rotateY(0);\r\n    opacity: 1;\r\n  }\r\n  54% {\r\n    transform: translateZ(-160px) rotateY(87deg);\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: translateZ(-800px) rotateY(90deg);\r\n    opacity: 0;\r\n  }\r\n`\r\nconst SelentedItem = keyframes`\r\n    0% {\r\n        \r\n        opacity: 0.5;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\n\r\nconst MoreList = styled.div`\r\n    position: absolute;\r\n    top: 30%;\r\n    left: 30%;\r\n    background: ${hexToRGBA(colors.bgPrimary, 0.9)};\r\n    min-width: 40vw;\r\n    height: 40vh;\r\n    z-index: 5;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-size: 2.5rem;\r\n    overflow: hidden;\r\n    padding: 1rem;\r\n    justify-content: start;\r\n    border: solid 2px ${colors.textPrimary};\r\n    border-radius: 5px;    \r\n    &.more-enter.more-enter-active {   \r\n        animation: ${moreList}  0.5s ease-in-out reverse;            \r\n    }     \r\n    &.more-leave.more-leave-active {   \r\n        animation: ${moreList}  0.6s ease-in-out ;     \r\n    }\r\n`\r\nconst PagesElement = styled.div`\r\n    margin: 0.3rem 0;\r\n    font-weight: bold;\r\n`\r\nconst SelectedPagesElement = styled(PagesElement)`\r\n    color: ${colors.primary};\r\n    width: 80%;\r\n    text-align: center;\r\n    border: solid 1px;\r\n    border-radius: 8px;\r\n    animation: ${SelentedItem} 0.4s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n`\r\nconst StyledH2 = styled.div`\r\n    font-size: 3rem;\r\n    /*position: absolute;*/\r\n    top: 0;\r\n    border-bottom: 2px solid;\r\n    width: 90%;\r\n    text-align: center;\r\n`\r\nconst ElementsContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n`\r\nconst ArrowUp = styled(ArrowWithCircleUp)`\r\n    width: 3rem;\r\n    margin: 0.5rem 4rem;\r\n`\r\nconst ArrowDown = styled(ArrowWithCircleDown)`\r\n    width: 3rem;\r\n    margin: 0.5rem 4rem;\r\n`\r\n\r\ninterface MorePagesProps {\r\n    pages: page[],\r\n    selected: number\r\n}\r\nconst MorePages = ({ pages, selected }: MorePagesProps) => {\r\n    // console.log(\"Pages\",pages)\r\n\r\n    return (\r\n        <MoreList>\r\n            <StyledH2><ArrowUp/>Select page<ArrowDown/></StyledH2>\r\n            <ElementsContainer>\r\n                {pages.map((page, pagesIndex) => {\r\n                    //console.log(\"PageNAme\", page.name)\r\n                    if (pagesIndex > selected - 3 && pagesIndex < selected + 3) {\r\n                        if (pagesIndex === selected) return <SelectedPagesElement>{page.name}</SelectedPagesElement>\r\n                        else return <PagesElement>{page.name}</PagesElement>\r\n                    }\r\n\r\n                })}\r\n            </ElementsContainer>\r\n\r\n        </MoreList>\r\n    )\r\n}\r\n\r\nexport default MorePages",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":309,"column":23,"nodeType":"134","endLine":318,"endColumn":19},{"ruleId":"132","severity":1,"message":"135","line":325,"column":24,"nodeType":"134","endLine":333,"endColumn":18},{"ruleId":"132","severity":1,"message":"136","line":385,"column":8,"nodeType":"137","endLine":385,"endColumn":92,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":629,"column":56,"nodeType":"141","messageId":"142","endLine":629,"endColumn":58},{"ruleId":"128","replacedBy":"143"},{"ruleId":"130","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":25,"column":11,"nodeType":"147","messageId":"148","endLine":25,"endColumn":21},{"ruleId":"145","severity":1,"message":"149","line":218,"column":6,"nodeType":"147","messageId":"148","endLine":218,"endColumn":21},{"ruleId":"145","severity":1,"message":"150","line":241,"column":12,"nodeType":"147","messageId":"148","endLine":241,"endColumn":21},{"ruleId":"145","severity":1,"message":"151","line":241,"column":23,"nodeType":"147","messageId":"148","endLine":241,"endColumn":35},{"ruleId":"132","severity":1,"message":"152","line":269,"column":22,"nodeType":"134","endLine":269,"endColumn":81},{"ruleId":"132","severity":1,"message":"153","line":290,"column":8,"nodeType":"137","endLine":290,"endColumn":68,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":297,"column":19,"nodeType":"147","messageId":"148","endLine":297,"endColumn":23},{"ruleId":"132","severity":1,"message":"156","line":311,"column":8,"nodeType":"137","endLine":311,"endColumn":10,"suggestions":"157"},{"ruleId":"132","severity":1,"message":"158","line":333,"column":19,"nodeType":"147","endLine":333,"endColumn":26},{"ruleId":"145","severity":1,"message":"159","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"160","line":1,"column":28,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"161","severity":1,"message":"162","line":105,"column":47,"nodeType":"163","messageId":"164","endLine":105,"endColumn":49},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","Assignments to the 'timeOut5min' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timeOut15sec' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'videoDis?.startTime'. Either include it or remove the dependency array.","ArrayExpression",["167"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["165"],["166"],"@typescript-eslint/no-unused-vars","'MenueProps' is defined but never used.","Identifier","unusedVar","'PrevSessionType' is defined but never used.","'hideMenue' is assigned a value but never used.","'setHideMenue' is assigned a value but never used.","Assignments to the 'magpieLoop' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'fastBack', 'fastForward', 'moveDown10Sec', 'moveUp10Sec', 'playPauseHandle', 'previousProps?.minus10s', 'previousProps?.play_pause', 'previousProps?.plus10s', 'previousProps?.showVideoMenue', 'previousProps?.speedDown', 'previousProps?.speedUp', and 'showVideoMenue'. Either include them or remove the dependency array.",["168"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userId' and 'videoId'. Either include them or remove the dependency array.",["169"],"The ref value 'video.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'video.current' to a variable inside the effect, and use that variable in the cleanup function.","'useEffect' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [liveIn, videoDisRedux.metadata.start_time, videoDis.metadata.timezone, showPlay, videoDis?.startTime]",{"range":"176","text":"177"},"Update the dependencies array to be: [play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, previousProps?.showVideoMenue, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec, showVideoMenue]",{"range":"178","text":"179"},"Update the dependencies array to be: [userId, videoId]",{"range":"180","text":"181"},[13185,13269],"[liveIn, videoDisRedux.metadata.start_time, videoDis.metadata.timezone, showPlay, videoDis?.startTime]",[9087,9147],"[play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, previousProps?.showVideoMenue, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec, showVideoMenue]",[10184,10186],"[userId, videoId]"]