[{"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx":"1","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts":"2","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts":"3","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx":"4","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts":"5","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts":"6","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts":"7","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx":"8","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx":"9","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx":"10","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx":"11","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx":"12","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx":"13","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx":"14","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts":"15","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts":"16","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx":"17","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx":"18","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx":"19","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx":"20","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx":"21","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx":"22","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx":"23","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx":"24"},{"size":748,"mtime":1613504667833,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1613504624495,"results":"27","hashOfConfig":"26"},{"size":442,"mtime":1613504667836,"results":"28","hashOfConfig":"26"},{"size":1272,"mtime":1613759281206,"results":"29","hashOfConfig":"26"},{"size":613,"mtime":1614808079304,"results":"30","hashOfConfig":"26"},{"size":813,"mtime":1614807697417,"results":"31","hashOfConfig":"26"},{"size":2376,"mtime":1614360871571,"results":"32","hashOfConfig":"26"},{"size":6956,"mtime":1613504667826,"results":"33","hashOfConfig":"26"},{"size":12596,"mtime":1613504667828,"results":"34","hashOfConfig":"26"},{"size":4425,"mtime":1614823579400,"results":"35","hashOfConfig":"26"},{"size":28905,"mtime":1614822985906,"results":"36","hashOfConfig":"26"},{"size":570,"mtime":1613504667827,"results":"37","hashOfConfig":"26"},{"size":140,"mtime":1613504624491,"results":"38","hashOfConfig":"26"},{"size":4865,"mtime":1614814995895,"results":"39","hashOfConfig":"26"},{"size":4636,"mtime":1614647717621,"results":"40","hashOfConfig":"26"},{"size":645,"mtime":1614808080550,"results":"41","hashOfConfig":"26"},{"size":2855,"mtime":1613504667822,"results":"42","hashOfConfig":"26"},{"size":20829,"mtime":1614823665938,"results":"43","hashOfConfig":"26"},{"size":2475,"mtime":1613504667830,"results":"44","hashOfConfig":"26"},{"size":1089,"mtime":1614125299211,"results":"45","hashOfConfig":"26"},{"size":5613,"mtime":1614112167206,"results":"46","hashOfConfig":"26"},{"size":3866,"mtime":1613504667823,"results":"47","hashOfConfig":"26"},{"size":4442,"mtime":1613504667823,"results":"48","hashOfConfig":"26"},{"size":19885,"mtime":1614703906882,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"11q4qkh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx",[],["100","101"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx",["102","103","104","105"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx",["106"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx",["107","108","109","110","111","112"],"import React, { useRef, useState, useEffect } from \"react\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Forward10 } from \"@styled-icons/material/Forward10\"\r\nimport { Replay10 } from \"@styled-icons/material/Replay10\"\r\nimport { Forward2 } from \"@styled-icons/icomoon/Forward2\"\r\nimport { Backward } from \"@styled-icons/icomoon/Backward\"\r\nimport { PlayCircle } from \"@styled-icons/fa-regular/PlayCircle\"\r\nimport { PauseCircle } from \"@styled-icons/fa-regular/PauseCircle\"\r\nimport { colors, hexToRGBA, host } from \"../../constants\"\r\nimport { CarSport } from \"@styled-icons/ionicons-sharp/CarSport\"\r\nimport { Speedometer2 } from \"@styled-icons/bootstrap/Speedometer2\"\r\nimport { Loading } from \"../Loading\"\r\nimport api from \"../../api\";\r\n\r\n\r\n\r\n\r\ninterface ButtonProps {\r\n    clicked?: boolean\r\n}\r\ninterface ProgressProps {\r\n    width: number\r\n}\r\n\r\ninterface MenueProps {\r\n    show: boolean\r\n}\r\nconst ButtonClickAnimation = keyframes`\r\n    0% {\r\n        transform: scale(1);\r\n        filter: blur(0px);\r\n        opacity: 1;\r\n        color: ${colors.textPrimary}\r\n    }\r\n    100% {\r\n        transform: scale(0.8);\r\n        filter: blur(4px);\r\n       /* opacity: 0;*/\r\n        color:${colors.primary}\r\n    }\r\n`\r\nconst ButtonClickAnimation2 = keyframes`\r\n    0% {\r\n        transform: scale(1);\r\n        filter: blur(0px);\r\n        opacity: 1;\r\n        color: ${colors.textPrimary}\r\n    }\r\n    100% {\r\n        transform: scale(0.8);\r\n        filter: blur(5px);\r\n       /* opacity: 0;*/\r\n        color:${colors.primary}\r\n    }\r\n`\r\nconst StyledLoading = styled(Loading)`\r\n    // \r\n    \r\n`\r\n\r\n\r\nconst Forward10Button = styled(Forward10) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst Replay10Button = styled(Replay10) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\n\r\nconst Forward2Button = styled(Forward2) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst BackwardButton = styled(Backward) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\n\r\nconst PlayCircleButton = styled(PlayCircle) <ButtonProps>`\r\n    width: 5rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst PauseCircleButton = styled(PauseCircle) <ButtonProps>`\r\n    width: 5rem;\r\n    margin: 0 0.5rem;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst MenueContainer = styled.div<MenueProps>`\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 15vh;\r\n    background-color:  ${hexToRGBA(colors.bgPrimary, 0.7)};\r\n    transform: translateY( ${props => !props.show ? 200 : 0}px);\r\n\r\n`\r\nconst ProgressContainer = styled.div`\r\n    width: 90%;\r\n`\r\n\r\nconst StyledCarSport = styled(CarSport) <ProgressProps>`\r\n    width: 3rem;\r\n    transform: translate(-5px, -35px); \r\n    margin-left: ${props => props.width}%;\r\n    color: ${colors.primary}\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    height: 100%;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\nconst StyledVideo = styled.video`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center  ;   \r\n`\r\nconst TimeContainer = styled.div`\r\n    width: 6rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst CurrentTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst SpeedBox = styled.div`\r\n    position: absolute;\r\n    left: 20%;\r\n    top: 40%;\r\n`\r\nconst ProgressBox = styled.div`   \r\n    height: 100%\r\n    width:100%;\r\n    background-color: ${colors.textPrimary};\r\n    border-radius: 10px;\r\n    margin-top:1rem;\r\n    height:1rem;\r\n    position: relative;\r\n\r\n`\r\nconst ProgressElement = styled.div<ProgressProps>`\r\n    height:100%;\r\n    width: ${props => props.width}%;\r\n    background-color: ${colors.primary};\r\n    border-radius: 10px 0px 0px 10px;\r\n    text-align: right;\r\n    \r\n`\r\nconst StyledSpeedometer2 = styled(Speedometer2)`\r\n    width: 2rem;\r\n    color: ${colors.primary};\r\n    margin-left: 0.5rem;\r\n    transform: translateY(-5px);\r\n`\r\n\r\n\r\n\r\ntype VideoProps = {\r\n    url: string,\r\n    closeVideo: () => void,\r\n    play_pause: boolean,\r\n    speedUp: boolean,\r\n    speedDown: boolean,\r\n    plus10s: boolean,\r\n    minus10s: boolean,\r\n    up: boolean,\r\n    down: boolean,\r\n    userId: string,\r\n    videoId: string,\r\n    keyId: string,\r\n    magpieReportCall: boolean\r\n}\r\n\r\ntype TimeType = {\r\n    hours: number\r\n    minutes: number\r\n    seconds: number\r\n}\r\ntype PrevSessionType = {\r\n    user: string,\r\n    stream: string,\r\n    position: number,\r\n    watched: number,\r\n    volume: number,\r\n    version: string\r\n}\r\n\r\nconst VideoPlayer: React.FC<VideoProps> = ({ url, closeVideo, play_pause, speedUp, speedDown, plus10s, minus10s, up, down, userId, videoId, keyId, magpieReportCall }) => {\r\n    const video = useRef<HTMLVideoElement>(null)\r\n    //const progress = useRef<HTMLProgressElement>(null)\r\n    const [playing, setPlaying] = useState<boolean>(true)\r\n    const [backSpeed, setBackSpeed] = useState<boolean>(true)\r\n    const [forwardSpeed, setForwardSpeed] = useState<boolean>(true)\r\n    const [plus10Sec, setPlus10Sec] = useState<boolean>(true)\r\n    const [minus10Sec, setMinus10Sec] = useState<boolean>(true)\r\n    const [currentTime, setCurrentTime] = useState<TimeType>({ hours: 0, minutes: 0, seconds: 0 })\r\n    const [videoDuration, setVideoDuration] = useState<TimeType>({ hours: 0, minutes: 0, seconds: 0 })\r\n    const [speed, setSpeed] = useState<1 | 2 | 3 | 4>(1)\r\n    const [progress, setProgress] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [videoReady, setVideoReady] = useState<boolean>(false)\r\n    const [hideMenue, setHideMenue] = useState<boolean>(true)\r\n    const [magpieResset, setMagpieResset] = useState<boolean>(false)\r\n    const [magpieCounter, setMagpieCounter] = useState<any>(Date.now())\r\n    let magpieLoop: any\r\n    //let magpieCounter = \r\n    // let prevSession = {\r\n    //     user: userId,\r\n    //     stream: videoId,\r\n    //     position: video.current ? video.current?.currentTime:0,\r\n    //     watched: new Date().getSeconds(),\r\n    //     volume: video.current ? video.current.volume * 100 : 0,\r\n    //     version: \"FireTV 2.0.0\"\r\n    // }\r\n\r\n\r\n    const usePrevious = (value: VideoProps) => {\r\n        const ref = useRef<VideoProps>();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    const previousProps = usePrevious({ url, play_pause, speedUp, speedDown, plus10s, minus10s, closeVideo, up, down, userId, videoId, keyId, magpieReportCall })\r\n\r\n    //Magpie Loop\r\n    useEffect(() => {\r\n        magpieApiReport()\r\n        magpieLoop = setTimeout(() => { setMagpieResset(!magpieResset) }, 60000);\r\n        return () => clearTimeout(magpieLoop)\r\n    }, [magpieResset, magpieReportCall])\r\n\r\n\r\n    //check which button ckicked\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            if (previousProps?.play_pause !== play_pause) playPauseHandle()\r\n            if (previousProps?.speedUp !== speedUp) fastForward()\r\n            if (previousProps?.speedDown !== speedDown) fastBack()\r\n            if (previousProps?.plus10s !== plus10s) moveUp10Sec()\r\n            if (previousProps?.minus10s !== minus10s) moveDown10Sec()\r\n            if (previousProps?.up !== up) setHideMenue(true)\r\n            if (previousProps?.down !== down) setHideMenue(false)\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }, [play_pause, speedUp, speedDown, plus10s, minus10s, loading])\r\n\r\n    //Timor session loop\r\n    useEffect(() => {\r\n        var timorSessionLoop = setInterval(() => {\r\n            // const nowSeconds = new Date().getSeconds()\r\n            // const time = nowSeconds < prevSession.watched ? (nowSeconds+60)-prevSession.watched : nowSeconds-prevSession.watched\r\n            const data = {\r\n                user: userId,\r\n                stream: videoId,\r\n                position: video.current ? Math.round(video.current.currentTime) : 0,\r\n                watched: 15,\r\n                volume: video.current ? video.current.volume * 100 : 0,\r\n                version: \"FireTV 2.0.0\"\r\n            }\r\n            //console.log(\"data to session\", data,)\r\n            api.timorSession(userId, videoId, video.current ? Math.round(video.current.currentTime) : 0, 15, video.current ? video.current.volume * 100 : 0, \"FireTV 2.0.0\")\r\n                .catch((err) => console.log(err.message))\r\n            // prevSession = data\r\n        }, 15000)\r\n        return () => clearInterval(timorSessionLoop)\r\n    }, [])\r\n\r\n\r\n    //Events \r\n    useEffect(() => {\r\n        video.current?.addEventListener(\"canplay\", canPlayHandler) //1\r\n        video.current?.addEventListener(\"ended\", videoEndedHandler)//9\r\n        video.current?.addEventListener(\"error\", (e) => errorHandler(e))\r\n        video.current?.addEventListener(\"pause\", pauseEventHandler); //5/8\r\n        video.current?.addEventListener(\"play\", playEventHandler);//2/6\r\n        video.current?.addEventListener(\"timeupdate\", timeUpdateHandler)//4 ........\r\n        video.current?.addEventListener(\"waiting\", waitingEventHandler)\r\n        video.current?.addEventListener(\"stalled\", stalledHandler)\r\n        // video.current?.addEventListener(\"playing\", playingHandler)//3/7\r\n        return () => {\r\n            video.current?.removeEventListener(\"canplay\", canPlayHandler)\r\n            video.current?.removeEventListener(\"ended\", videoEndedHandler)\r\n            video.current?.removeEventListener(\"error\", errorHandler)\r\n            video.current?.removeEventListener(\"pause\", pauseEventHandler);\r\n            video.current?.removeEventListener(\"play\", playEventHandler);\r\n            video.current?.removeEventListener(\"timeupdate\", timeUpdateHandler)\r\n            video.current?.removeEventListener(\"waiting\", waitingEventHandler)\r\n            video.current?.removeEventListener(\"stalled\", stalledHandler)\r\n            // video.current?.removeEventListener(\"playing\", playingHandler)\r\n        }\r\n    })\r\n\r\n    //progress loop\r\n    useEffect(() => {\r\n        let intervalLoop = setInterval(() => {\r\n            let prog\r\n            if (video.current) {\r\n                //setVideoDuration(video.current?.duration)\r\n                prog = Math.round((video.current?.currentTime / video.current?.duration) * 100)\r\n                setProgress(prog)\r\n                const time: TimeType = {\r\n                    hours: Math.floor(Math.floor(video.current?.currentTime / 60) / 60),\r\n                    minutes: Math.floor(video.current?.currentTime / 60) - Math.floor(Math.floor(video.current?.currentTime / 60) / 60) * 60,\r\n                    seconds: Math.round(video.current?.currentTime - (Math.floor(video.current?.currentTime / 60) * 60))\r\n                }\r\n                // setCurrentTime(Math.round(video.current?.currentTime))\r\n                setCurrentTime(time)\r\n                if (prog === 100) setPlaying(false)\r\n            }\r\n        }, 100)\r\n        return () => clearInterval(intervalLoop)\r\n    })\r\n    //Speed loop\r\n    useEffect(() => {\r\n        let speedLoop = setInterval(() => {\r\n            console.log(\"Speed \", speed)\r\n            if (speed === 1) clearInterval(speedLoop)\r\n            if (speed === 2) if (video.current) video.current.currentTime += 10.0\r\n            if (speed === 3) if (video.current) video.current.currentTime += 60.0\r\n            if (speed === 4) if (video.current) video.current.currentTime += 120.0\r\n        }, 1000)\r\n        return () => clearInterval(speedLoop)\r\n    }, [speed])\r\n\r\n    //Event handlers\r\n    const canPlayHandler = () => {\r\n        console.log(\"canPlayHandler\")\r\n        if (video.current) {\r\n            const time: TimeType = {\r\n                hours: Math.floor(Math.floor(video.current?.duration / 60) / 60),\r\n                minutes: Math.floor(video.current?.duration / 60) - Math.floor(Math.floor(video.current?.duration / 60) / 60) * 60,\r\n                seconds: Math.round(video.current?.duration - (Math.floor(video.current?.duration / 60) * 60))\r\n            }\r\n            setVideoDuration(time)\r\n            setVideoReady(true)\r\n        }\r\n    }\r\n\r\n    const magpieApiReport = () => {\r\n        const report = {\r\n            key: keyId,\r\n            email: userId,\r\n            host: host,\r\n            video_id: videoId,\r\n            captured: new Date().toISOString(),\r\n            seconds: Math.floor((Date.now() - magpieCounter) / 1000)\r\n        }\r\n        setMagpieCounter(Date.now())\r\n        api.magpieReport(report).catch((err) => console.log(err.message))\r\n        console.log(\"magpieLoop\", report)\r\n    }\r\n\r\n    const videoEndedHandler = () => {\r\n        console.log(\"videoEndedHandler\")\r\n        magpieApiReport()\r\n        closeVideo()\r\n    }\r\n    const errorHandler = (err: ErrorEvent) => {\r\n        console.log(\"errorHandler\")\r\n        api.timorLogs(userId, videoId, \"error\", err.message).catch((err) => console.log(err.message))\r\n    }\r\n    const pauseEventHandler = () => {\r\n        console.log(\"pauseEventHandler\",)\r\n        api.timorLogs(userId, videoId, \"control\", \"Video paused\").catch((err) => console.log(err.message))\r\n    }\r\n    const playEventHandler = () => {\r\n        console.log(\"playEventHandler\")\r\n        api.timorLogs(userId, videoId, \"control\", \"Video start playing\").catch((err) => console.log(err.message))\r\n    }\r\n    const timeUpdateHandler = () => {\r\n        //loop 15s //session api\r\n        console.log(\"timeUpdateHandler\")\r\n    }\r\n    const waitingEventHandler = () => {\r\n        //buffering +\"\"\r\n        console.log(\"waitingEventHandler\")\r\n        api.timorLogs(userId, videoId, \"buffering\", \"\").catch((err) => console.log(err.message))\r\n    }\r\n    const stalledHandler = () => {\r\n        console.log(\"stalledHandler\")\r\n        api.timorLogs(userId, videoId, \"info\", \"Video stall\").catch((err) => console.log(err.message))\r\n    }\r\n    // const playingHandler = () => {\r\n    //     //clear it\r\n    //     console.log(\"playingHandler\")\r\n    // }\r\n\r\n    //Speed icons\r\n    const Speed = () => {\r\n        let SpeedX = []\r\n        for (let i = 0; i < speed; i++) {\r\n            SpeedX.push(<StyledSpeedometer2 key={i} />)\r\n        }\r\n        return SpeedX\r\n    }\r\n\r\n    const playPauseHandle = () => {\r\n        clearTimeout(magpieLoop)\r\n        if (playing) { //pause\r\n            video.current?.pause()\r\n            setPlaying(false)\r\n            setSpeed(1)\r\n            magpieApiReport()\r\n            //setSpeed(1)\r\n        }\r\n        else { //play\r\n            video.current?.play()\r\n            setPlaying(true)\r\n            setSpeed(1)\r\n            setMagpieCounter(Date.now())\r\n            setMagpieResset(!magpieResset)\r\n        }\r\n    }\r\n    const fastForward = () => {\r\n        console.log(\"Speed up\")\r\n        clearTimeout(magpieLoop)\r\n        magpieApiReport()\r\n        if (video.current) {\r\n            if (speed === 1) setSpeed(2)\r\n            if (speed === 2) setSpeed(3)\r\n            if (speed === 3) setSpeed(4)\r\n            setForwardSpeed(!forwardSpeed)\r\n        }\r\n\r\n    }\r\n    const fastBack = () => {\r\n        clearTimeout(magpieLoop)\r\n        magpieApiReport()       \r\n        if (video.current) {\r\n            if (video.current) {\r\n                if (speed === 2) setSpeed(1)\r\n                if (speed === 3) setSpeed(2)\r\n                if (speed === 4) setSpeed(3)\r\n                setBackSpeed(!backSpeed)\r\n            }\r\n        }\r\n    }\r\n    const moveUp10Sec = () => {\r\n        if (video.current) video.current.currentTime += 10.0\r\n        setPlus10Sec(!plus10Sec)\r\n    }\r\n    const moveDown10Sec = () => {\r\n        if (video.current) video.current.currentTime -= 10.0\r\n        setMinus10Sec(!minus10Sec)\r\n    }\r\n\r\n    //return progress\r\n\r\n    //progressLoop()\r\n\r\n    return (\r\n        <div>\r\n            {!videoReady ? <StyledLoading /> : \"\"}\r\n            <StyledVideo ref={video} autoPlay id=\"video\">\r\n                {/* <source src={url} type=\"application/x-mpegURL\" /> */}\r\n                <source src={url} type=\"video/mp4\" />\r\n            </StyledVideo>\r\n            <MenueContainer show={hideMenue}>\r\n                <ProgressContainer>\r\n                    <ProgressBox>\r\n                        {/* <StyledFlagCheckered />\r\n                        <StyledToriiGate/> */}\r\n                        <ProgressElement width={progress}> </ProgressElement><StyledCarSport width={progress} />\r\n                    </ProgressBox>\r\n                    {/* <Progress ref={progress} max=\"100\" value=\"0\" /> */}\r\n                </ProgressContainer>\r\n                <ButtonContainer>\r\n                    <SpeedBox>\r\n                        Speed:{Speed()}\r\n                    </SpeedBox>\r\n                    <CurrentTimeBox>\r\n                        <TimeContainer>\r\n                            {/* {Math.floor(currentTime / 60) > 0 ? `${Math.floor(currentTime / 60)}:` : \"\"}\r\n                                {currentTime - (Math.floor(currentTime / 60) * 60)} */}\r\n                            {currentTime?.hours > 0 ? `${currentTime?.hours}:` : \"\"}\r\n                            {currentTime?.minutes > 0 ? `${currentTime?.minutes}:` : \"\"}\r\n                            {currentTime?.seconds}s\r\n                            </TimeContainer>\r\n                    </CurrentTimeBox>\r\n                    <div>\r\n                        {backSpeed ? <BackwardButton clicked={true} onClick={fastBack} /> : <BackwardButton clicked={false} onClick={fastBack} />}\r\n                        {minus10Sec ? <Replay10Button clicked={true} onClick={moveDown10Sec} /> : <Replay10Button clicked={false} onClick={moveDown10Sec} />}\r\n                        {playing ? <PauseCircleButton clicked={play_pause} onClick={playPauseHandle} /> : <PlayCircleButton clicked={play_pause} onClick={playPauseHandle} />}\r\n                        {plus10Sec ? <Forward10Button clicked={true} onClick={moveUp10Sec} /> : <Forward10Button clicked={false} onClick={moveUp10Sec} />}\r\n                        {forwardSpeed ? <Forward2Button clicked={true} onClick={fastForward} /> : <Forward2Button clicked={false} onClick={fastForward} />}\r\n                    </div>\r\n                    <TimeContainer>\r\n                        {/* {Math.floor(Math.floor(videoDuration / 60) / 60) > 0 ? `${Math.floor(Math.floor(videoDuration / 60) / 60)}:` : \"\"}\r\n                            {Math.floor(videoDuration / 60) > 0 ? `${Math.floor(videoDuration / 60) - Math.floor(Math.floor(videoDuration / 60) / 60) * 60}:` : \"\"}\r\n                            {(videoDuration - (Math.floor(videoDuration / 60) * 60)).toFixed(0)} */}\r\n                        {videoDuration?.hours > 0 ? `${videoDuration?.hours}:` : \"\"}\r\n                        {videoDuration?.minutes > 0 ? `${videoDuration?.minutes}:` : \"\"}\r\n                        {videoDuration?.seconds}s\r\n\r\n                        </TimeContainer>\r\n                </ButtonContainer>\r\n            </MenueContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":185,"column":7,"nodeType":"119","messageId":"120","endLine":185,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":304,"column":23,"nodeType":"123","endLine":313,"endColumn":19},{"ruleId":"121","severity":1,"message":"124","line":320,"column":24,"nodeType":"123","endLine":328,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":380,"column":8,"nodeType":"126","endLine":380,"endColumn":92,"suggestions":"127"},{"ruleId":"117","severity":1,"message":"128","line":142,"column":7,"nodeType":"119","messageId":"120","endLine":142,"endColumn":12},{"ruleId":"117","severity":1,"message":"129","line":197,"column":6,"nodeType":"119","messageId":"120","endLine":197,"endColumn":21},{"ruleId":"121","severity":1,"message":"130","line":248,"column":22,"nodeType":"123","endLine":248,"endColumn":81},{"ruleId":"121","severity":1,"message":"131","line":266,"column":8,"nodeType":"126","endLine":266,"endColumn":68,"suggestions":"132"},{"ruleId":"117","severity":1,"message":"133","line":273,"column":19,"nodeType":"119","messageId":"120","endLine":273,"endColumn":23},{"ruleId":"121","severity":1,"message":"134","line":287,"column":8,"nodeType":"126","endLine":287,"endColumn":10,"suggestions":"135"},{"ruleId":"121","severity":1,"message":"136","line":309,"column":19,"nodeType":"119","endLine":309,"endColumn":26},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'WeatingMessageBox' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'timeOut5min' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timeOut15sec' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'videoDis?.startTime'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'Image' is assigned a value but never used.","'PrevSessionType' is defined but never used.","Assignments to the 'magpieLoop' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'down', 'fastBack', 'fastForward', 'moveDown10Sec', 'moveUp10Sec', 'playPauseHandle', 'previousProps?.down', 'previousProps?.minus10s', 'previousProps?.play_pause', 'previousProps?.plus10s', 'previousProps?.speedDown', 'previousProps?.speedUp', 'previousProps?.up', and 'up'. Either include them or remove the dependency array.",["140"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userId' and 'videoId'. Either include them or remove the dependency array.",["141"],"The ref value 'video.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'video.current' to a variable inside the effect, and use that variable in the cleanup function.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [liveIn, videoDisRedux.metadata.start_time, videoDis?.metadata.timezone, showPlay, videoDis?.startTime]",{"range":"148","text":"149"},"Update the dependencies array to be: [play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, previousProps?.up, previousProps?.down, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec, up, down]",{"range":"150","text":"151"},"Update the dependencies array to be: [userId, videoId]",{"range":"152","text":"153"},[13072,13156],"[liveIn, videoDisRedux.metadata.start_time, videoDis?.metadata.timezone, showPlay, videoDis?.startTime]",[8422,8482],"[play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, previousProps?.up, previousProps?.down, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec, up, down]",[9519,9521],"[userId, videoId]"]