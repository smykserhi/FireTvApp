[{"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx":"1","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts":"2","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts":"3","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx":"4","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts":"5","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts":"6","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts":"7","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx":"8","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx":"9","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx":"10","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx":"11","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx":"12","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx":"13","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx":"14","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts":"15","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts":"16","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx":"17","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx":"18","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx":"19","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx":"20","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx":"21","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx":"22","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx":"23","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx":"24","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\More.tsx":"25"},{"size":772,"mtime":1616010342734,"results":"26","hashOfConfig":"27"},{"size":440,"mtime":1613504624495,"results":"28","hashOfConfig":"27"},{"size":442,"mtime":1613504667836,"results":"29","hashOfConfig":"27"},{"size":1234,"mtime":1615860760728,"results":"30","hashOfConfig":"27"},{"size":939,"mtime":1615487017787,"results":"31","hashOfConfig":"27"},{"size":691,"mtime":1615860679755,"results":"32","hashOfConfig":"27"},{"size":2282,"mtime":1615349496426,"results":"33","hashOfConfig":"27"},{"size":7545,"mtime":1615854964939,"results":"34","hashOfConfig":"27"},{"size":20329,"mtime":1616454475398,"results":"35","hashOfConfig":"27"},{"size":6751,"mtime":1616010342733,"results":"36","hashOfConfig":"27"},{"size":27789,"mtime":1616359496338,"results":"37","hashOfConfig":"27"},{"size":559,"mtime":1614882172001,"results":"38","hashOfConfig":"27"},{"size":343,"mtime":1615855943103,"results":"39","hashOfConfig":"27"},{"size":5064,"mtime":1615859091139,"results":"40","hashOfConfig":"27"},{"size":6019,"mtime":1616445988340,"results":"41","hashOfConfig":"27"},{"size":906,"mtime":1615487110141,"results":"42","hashOfConfig":"27"},{"size":2835,"mtime":1615843001687,"results":"43","hashOfConfig":"27"},{"size":24059,"mtime":1616359190151,"results":"44","hashOfConfig":"27"},{"size":2952,"mtime":1615859088523,"results":"45","hashOfConfig":"27"},{"size":1124,"mtime":1615852829680,"results":"46","hashOfConfig":"27"},{"size":6364,"mtime":1616010342729,"results":"47","hashOfConfig":"27"},{"size":4654,"mtime":1616010342731,"results":"48","hashOfConfig":"27"},{"size":4911,"mtime":1616010342731,"results":"49","hashOfConfig":"27"},{"size":17498,"mtime":1616359508354,"results":"50","hashOfConfig":"27"},{"size":3059,"mtime":1616010342730,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"11q4qkh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx",[],["107","108"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts",[],["109","110"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx",["111"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx",["112","113","114"],"import React, { useState, useEffect } from \"react\"\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logOut, clearData } from \"../../store/actions\"\r\nimport { StorageType } from \"../../store/types\"\r\nimport { LOGIN, colors, hexToRGBA } from \"../../constants\"\r\nimport { Loading } from \"../Loading\"\r\nimport api from \"../../api\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { AddCircleOutline } from \"@styled-icons/material/AddCircleOutline\"\r\nimport { RemoveCircleOutline } from \"@styled-icons/material/RemoveCircleOutline\"\r\nimport { Play } from \"@styled-icons/ionicons-solid/Play\"\r\nimport { VideoCamera } from \"@styled-icons/heroicons-solid/VideoCamera\"\r\nimport { LocationPin } from \"@styled-icons/entypo/LocationPin\"\r\nimport { metadataType } from \"../Home\"\r\nimport moment from 'moment';\r\nimport VideoPlayer from \"./VideoPlayer\"\r\nimport { ArrowBack } from \"@styled-icons/ionicons-sharp/ArrowBack\"\r\n\r\n\r\ninterface MainProps {\r\n    bgImage: string\r\n}\r\ninterface ButtonProps {\r\n    selected: boolean\r\n}\r\n\r\ninterface NumberProps {\r\n    anime?: boolean\r\n}\r\n\r\nconst ShowItemAnime = keyframes`\r\n    0% {\r\n      transform: rotateX(0deg);\r\n      background: ${colors.counterColour};\r\n    }   \r\n    50% {\r\n        transform: rotateX(90deg);\r\n        background: ${colors.primary};\r\n    }\r\n    100% {\r\n        transform: rotateX(0deg);\r\n        background: ${colors.counterColour};\r\n    }  \r\n`\r\nconst MainBox = styled.div<MainProps>`\r\n    background: url(\"${props => props.bgImage}\") no-repeat center center fixed ;        \r\n    background-size: cover;    \r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    z-index:-1;\r\n`\r\nconst MenuBox = styled.div`    \r\n    position: absolute;\r\n    top: 30%;\r\n    width: 17vw;\r\n    padding-left: 10rem;\r\n`\r\nconst DisBox = styled.div`\r\n    background-color: ${hexToRGBA(colors.bgPrimary, 0.9)};\r\n    height: 35%;\r\n    position: absolute;\r\n    top: 65%;\r\n    width: 100vw;      \r\n`\r\nconst TitleBox = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 10rem;\r\n    opacity: 1;\r\n    width: 85%;\r\n`\r\nconst Dis = styled.div`\r\n    margin: 0 10rem;\r\n    opacity: 1;\r\n    width: 85%;\r\n`\r\nconst Buttons = styled.div<ButtonProps>`\r\n    width: 100%;\r\n    height: 2.5rem;\r\n    background-color: ${props => props.selected ? colors.bgPrimary : colors.textPrimary};\r\n    color: ${props => props.selected ? colors.textPrimary : \"black\"};\r\n    border: ${props => props.selected ? `solid ${colors.textPrimary} 2px` : \"\"} ;\r\n    border-radius: 5px;\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 0.5rem;\r\n    font-weight: 700;\r\n`\r\nconst StyledAdd = styled(AddCircleOutline)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledRemove = styled(RemoveCircleOutline)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledPlay = styled(Play)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledCameraMovie = styled(VideoCamera)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledLocation = styled(LocationPin)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledArrowBack = styled(ArrowBack)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst LiveBox = styled.div`\r\n    position: absolute;\r\n    left: 40%;\r\n    top: 30%;\r\n    background-color: ${hexToRGBA(colors.bgPrimary, 0.7)};    \r\n    padding: 0 10px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n`\r\nconst LiveH1 = styled.h1`\r\n    color: ${colors.primary};\r\n    font-size: xxx-large;\r\n`\r\nconst DisTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst StyledTime = styled.h2`\r\n    color: ${colors.primary};\r\n    margin-right: 1rem;\r\n`\r\nconst Counter = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst NumberContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\nconst NumberBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0 7px\r\n`\r\nconst NumbersElement = styled.div<NumberProps>`    \r\n    background: ${colors.counterColour};\r\n    margin: 0 2px;\r\n    font-weight: 700;\r\n    display: flex;\r\n    font-size: xxx-large;\r\n    justify-content: center;\r\n    border-radius: 5px;\r\n    padding: 0 8px;\r\n    align-items: center; \r\n    animation: ${ShowItemAnime} 0.5s ease-in-out both reverse  ;\r\n`\r\n\r\nconst AnimeNumber = styled(NumbersElement)`\r\n    animation: ${ShowItemAnime} 0.5s ease-in-out both  ;\r\n`\r\n\r\nconst NumberText = styled.div`\r\n    font-size: larger;\r\n    font-weight: 700;\r\n    margin-bottom: 2rem;\r\n`\r\nconst MessageBox = styled(LiveBox)`\r\n    top: 3%;   \r\n`\r\nconst SupportMessageBox = styled(MessageBox)`\r\n    top: 15%;\r\n`\r\n\r\nconst Span = styled.span`\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n`\r\nconst VideoBox = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n`\r\n\r\ninterface matchParamsType {\r\n    id: string\r\n}\r\n\r\ninterface VideoDosType {\r\n    viewerState: string,\r\n    videoState: string,\r\n    startTime: string,\r\n    videoID: string,\r\n    key: string,\r\n    url: string,\r\n    message: null | string,\r\n    supportMessage: string,\r\n    saved: boolean,\r\n    description: string,\r\n    id: number,\r\n    image: string,\r\n    mediumImage: string,\r\n    metadata: metadataType,\r\n    smallImage: string,\r\n    title: string,\r\n    type: string,\r\n}\r\n\r\ntype MenuItemType = \"play\" | \"list\" | \"location\" | \"producer\" | \"back\"\r\ninterface Timer {\r\n    days: number,\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number\r\n}\r\n\r\n\r\nconst Video: React.FC<RouteComponentProps<matchParamsType>> = ({ history, match }) => {\r\n    //redux\r\n    const selectToken = (state: StorageType) => state.logIn.token\r\n    const selectUserId = (state: StorageType) => state.logIn.userName\r\n    const selectVideo = (state: StorageType) => state.data.videoDetails\r\n    const dispatch = useDispatch()\r\n    const videoDisRedux = useSelector(selectVideo)\r\n    const Token = useSelector(selectToken) //token \r\n    const userId = useSelector(selectUserId) // user Id \r\n\r\n    //main variables\r\n    const videoId = match.params.id // video ID\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [videoDis, setVideoDis] = useState<VideoDosType>()\r\n    const [menuItem, setMenuItem] = useState<MenuItemType>(\"play\")\r\n    const [timer, setTimer] = useState<Timer>({ days: 0, hours: 0, minutes: 0, seconds: 0 })\r\n    const [liveIn, setLiveIn] = useState<boolean>(false)\r\n    const [showPlay, setShowPlay] = useState<boolean>(false)\r\n    const [min5Loop, setMin5Loop] = useState<boolean>(true)\r\n    const [min5LoopCounter, setmin5LoopCounter] = useState<number>(0)\r\n    const [sec15Loop, setSec15Loop] = useState<boolean>(false)\r\n    const [sec15LoopCounter, setSec15LoopCounter] = useState<number>(0)\r\n    const [videoPlay, setVideoPlay] = useState<boolean>(false)\r\n    const [eventWaitingMesage, setEwentWeatingMessage] = useState<string>(\"\")\r\n    const [magpieReportCall, setMagpieReportCall] = useState<boolean>(false)\r\n    let timeOut5min: any\r\n    let timeOut15sec: any\r\n    let menueInterval: any\r\n\r\n    //buttons\r\n    const [play_pause, setPlay_pause] = useState<boolean>(false)\r\n    const [speedUp, setSpeedup] = useState<boolean>(true)\r\n    const [speedDown, setSpeedDown] = useState<boolean>(true)\r\n    const [plus10s, setPlus10s] = useState<boolean>(true)\r\n    const [minus10s, setMinus10s] = useState<boolean>(true)\r\n    const [showVideoMenue, setShowVideoMenue] = useState<boolean>(true)\r\n\r\n    //animations \r\n    const [animateSec, setAnimateSec] = useState<number>(0)\r\n    const [animateMin, setAnimateMin] = useState<number>(0)\r\n    const [animateHour, setAnimateHour] = useState<number>(0)\r\n    const [animateDays, setAnimateDays] = useState<number>(0)\r\n    const [animateSecS, setAnimateSecS] = useState<number>(0)\r\n    const [animateMinS, setAnimateMinS] = useState<number>(0)\r\n    const [animateHourS, setAnimateHourS] = useState<number>(0)\r\n    const [animateDaysS, setAnimateDaysS] = useState<number>(0)\r\n    \r\n\r\n\r\n\r\n    //keyboard  events\r\n    useEffect(() => {\r\n        addListeners()\r\n        //if (timer.hours === 0) setSatrtUpdatingLoop(true)\r\n        return () => {\r\n            removeListeners()\r\n        }\r\n    })\r\n    //timet animarion triger\r\n    useEffect(() => {\r\n        if (Math.floor(timer.days / 10) !== animateDays) setAnimateDays(Math.floor(timer.days / 10))\r\n        if (timer.days % 10 !== animateDaysS) setAnimateDaysS(timer.days % 10)\r\n\r\n        if (Math.floor(timer.hours / 10) !== animateHour) setAnimateHour(Math.floor(timer.hours / 10))\r\n        if (timer.hours % 10 !== animateHourS) setAnimateHourS(timer.hours % 10)\r\n\r\n        if (Math.floor(timer.minutes / 10) !== animateMin) setAnimateMin(Math.floor(timer.minutes / 10))\r\n        if (timer.minutes % 10 !== animateMinS) setAnimateMinS(timer.minutes % 10)\r\n\r\n        if (Math.floor(timer.seconds / 10) !== animateSec) setAnimateSec(Math.floor(timer.seconds / 10))\r\n        if (timer.seconds % 10 !== animateSecS) setAnimateSecS(timer.seconds % 10)\r\n    }, [timer, animateDays, animateDaysS, animateHour, animateHourS, animateMin, animateMinS, animateSec, animateSecS])\r\n\r\n    //update data every 5 min\r\n    useEffect(() => {        \r\n        clearTimeout(timeOut5min)\r\n        timeOut5min = setTimeout(function () {\r\n            if (!min5Loop) {\r\n                clearTimeout(timeOut5min)\r\n            } else {\r\n                reloadData()\r\n                setmin5LoopCounter(min5LoopCounter + 1)\r\n            }\r\n        }, 300000)\r\n        return () => clearTimeout(timeOut5min)\r\n    }, [min5Loop, min5LoopCounter])\r\n\r\n    //Update data every 15sec\r\n    useEffect(() => {        \r\n        clearTimeout(timeOut15sec)\r\n        timeOut15sec = setTimeout(function () {\r\n            if (!sec15Loop) {\r\n                clearTimeout(timeOut15sec)\r\n            } else {\r\n                reloadData()\r\n                setSec15LoopCounter(sec15LoopCounter + 1)\r\n            }\r\n        }, 15000)\r\n        return () => clearTimeout(timeOut15sec)\r\n    }, [sec15Loop, sec15LoopCounter])\r\n\r\n    //timer\r\n    useEffect(() => {\r\n        if (liveIn) {            \r\n            const countDownDate = moment(videoDis?.startTime)            \r\n            var timerLoop = setInterval(function () {\r\n                const now = moment()\r\n                // Find the distance between now and the count down date            \r\n                let distance = countDownDate.diff(now) //- (timeOfset * 60000)\r\n                // Time calculations for days, hours, minutes and seconds\r\n                const time = {\r\n                    days: Math.floor(distance / (1000 * 60 * 60 * 24)),\r\n                    hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                    minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\r\n                    seconds: Math.floor((distance % (1000 * 60)) / 1000),\r\n                }               \r\n                if (time.hours === 0) {\r\n                    setMin5Loop(false) //stop updating very 5min\r\n                    setSec15Loop(true) //start updating every 15sec\r\n                }\r\n                if (distance < 0) {\r\n                    clearInterval(timerLoop)                    \r\n                    if (liveIn) setLiveIn(false)\r\n                    setShowPlay(true)\r\n                    setEwentWeatingMessage(\"Event will start soon\")\r\n                }\r\n                setTimer(time)\r\n            }, 1000)\r\n        }\r\n\r\n        return () => clearInterval(timerLoop);\r\n    }, [liveIn, videoDisRedux?.metadata?.start_time, videoDis?.metadata.timezone, showPlay])\r\n\r\n\r\n\r\n    //main content loading\r\n    useEffect(() => {\r\n        if (!Token) history.push(LOGIN)\r\n        else if (loading) {\r\n            api.getVideoItemNoLock(Token, videoDisRedux.id)\r\n                .then(res => {\r\n                    //  res.supportMessage = \"Support Message Test\"\r\n                    //  res.message = \"Message Test \"\r\n                    console.log(videoDisRedux, res)\r\n                    setVideoDis({ ...videoDisRedux, ...res })\r\n                    if (res.viewerState === \"watch\") {\r\n                        //if starts in the future                    \r\n                        if (((new Date(videoDisRedux.metadata.start_time).getTime()) - (new Date().getTime()) > 0) && (res.videoState === \"scheduled\" || res.videoState === \"upcoming\")) {\r\n                            setLiveIn(true) //start counter\r\n                            setMenuItem(\"list\") //selevt list item in menue\r\n                        } else if (res.videoState === \"available\") setShowPlay(true) // show play button\r\n                    }\r\n                    if (res.videoState === \"delist\") {                        \r\n                        history.goBack()\r\n                    }\r\n                    setLoading(false)\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }, [Token, history, loading, videoDisRedux])\r\n\r\n    const handleLogOut = () => {\r\n        api.logout(Token)\r\n        dispatch(logOut())\r\n        dispatch(clearData())\r\n        localStorage.clear()\r\n        history.push(LOGIN)\r\n    }\r\n\r\n    //update data after add or remove from myList\r\n    const reloadData = () => {        \r\n        const apiCall = videoPlay ? api.getVideoItemState(Token, videoDisRedux.id) : api.getVideoItemNoLock(Token, videoDisRedux.id)\r\n        apiCall.then(res => {            \r\n            if (videoDis) setVideoDis({ ...videoDisRedux, ...res })\r\n            if (res.viewerState === \"watch\") {\r\n                if (res.videoState === \"live\") { // show paly                     \r\n                    if (liveIn) setLiveIn(false) // hide counter and show play mutton\r\n                    if (showPlay) setShowPlay(true) //show play button\r\n                    if (setMenuItem) setMenuItem(\"play\") //select play button\r\n                }\r\n            } else if (res.viewerState === \"logout\") { //invalid token\r\n                handleLogOut()\r\n            } else {\r\n                setVideoPlay(false) //close video \r\n                setShowPlay(false) //hide play button\r\n            }\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n//show menue when video is playing and hide it in 10s\r\n    const setMenueHideInterwal = ()=>{\r\n        clearTimeout(menueInterval)\r\n        setShowVideoMenue(true)\r\n        menueInterval = setTimeout(()=>{setShowVideoMenue(false)},15000)\r\n    }\r\n\r\n    const addListeners = () => {\r\n        //document.addEventListener(\"keydown\", handleKeyUp, true);\r\n        document.addEventListener(\"keyup\", handleKeyUp, true);\r\n    }\r\n\r\n    const removeListeners = () => {\r\n        //document.removeEventListener(\"keydown\", handleKeyUp, true);\r\n        document.removeEventListener(\"keyup\", handleKeyUp, true);\r\n    }\r\n\r\n    const handleKeyUp = (e: KeyboardEvent) => {\r\n        removeListeners();        \r\n        switch (e.key) {\r\n            case 'Enter':\r\n                handleEnter()\r\n                break;\r\n            case 'ArrowUp':\r\n                handleArrowUp()\r\n                break;\r\n            case 'ArrowDown':\r\n                handleArrowDown()\r\n                break;\r\n            case 'ArrowRight':\r\n                handleArrowRight()\r\n                break;\r\n            case 'ArrowLeft':\r\n                hendleArrowLeft()\r\n                break;\r\n            case 'MediaPlayPause':\r\n                hendMediaPlayPause()\r\n                break;\r\n            case 'MediaFastForward':\r\n                hendleMediaFastForward()\r\n                break;\r\n            case 'MediaRewind':\r\n                hendleMediaRewind()\r\n                break;            \r\n            case 'GoBack':\r\n            case 'Backspace':\r\n                hendleBack()\r\n                break;\r\n            default:\r\n                addListeners()\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const hendleBack = () => {        \r\n        if (videoPlay) {            \r\n            handleCloseVideo()\r\n            setMagpieReportCall(!magpieReportCall)            \r\n        } else {            \r\n            history.goBack()\r\n        }\r\n    }\r\n    const hendleMediaFastForward = () => {        \r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setSpeedup(!speedUp)\r\n        } else addListeners()\r\n    }\r\n    const hendleMediaRewind = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setSpeedDown(!speedDown)\r\n        } else addListeners()\r\n    }\r\n\r\n    const handleCloseVideo = () => {        \r\n        setVideoPlay(false)\r\n    }\r\n    const hendMediaPlayPause = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setPlay_pause(!play_pause)\r\n        } else addListeners()\r\n    }\r\n    const handleArrowRight = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setPlus10s(!plus10s)\r\n        } else {\r\n            addListeners()\r\n        }\r\n\r\n    }\r\n\r\n    const hendleArrowLeft = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n            setMinus10s(!minus10s)\r\n        } else {\r\n            addListeners()\r\n        }\r\n    }\r\n    const handleArrowUp = () => {\r\n        if (videoPlay) {            \r\n            setMenueHideInterwal()\r\n        } else {\r\n            if (menuItem === \"back\") setMenuItem(\"producer\")\r\n            else if (menuItem === \"producer\") setMenuItem(\"location\")\r\n            else if (menuItem === \"location\") setMenuItem(\"list\")\r\n            else if (menuItem === \"list\" && (!liveIn || showPlay)) setMenuItem(\"play\")\r\n            else addListeners()\r\n        }\r\n\r\n    }\r\n    const handleArrowDown = () => {\r\n        if (videoPlay) {\r\n            setMenueHideInterwal()\r\n        } else {\r\n            if (menuItem === \"play\") setMenuItem(\"list\")\r\n            else if (menuItem === \"list\") setMenuItem(\"location\")\r\n            else if (menuItem === \"location\") setMenuItem(\"producer\")\r\n            else if (menuItem === \"producer\") setMenuItem(\"back\")\r\n            else addListeners()\r\n        }\r\n    }\r\n    const handleEnter = () => {\r\n        if (videoPlay) { //playing video \r\n            setMenueHideInterwal() \r\n            setPlay_pause(!play_pause)\r\n        } else { //in details mode\r\n            if (menuItem === \"play\") {               \r\n                clearTimeout(timeOut5min)\r\n                clearTimeout(timeOut15sec)\r\n                setMin5Loop(false) //stop updating very 5min\r\n                setSec15Loop(false) //stop updating every 15sec          \r\n                api.getVideoItem(Token, videoDisRedux.id)\r\n                    .then(res => {                        \r\n                        api.timorLogs(userId, videoId, \"info\", `${res.url}`).catch((err) => console.log(err.message))\r\n                        if (videoDis) setVideoDis({ ...videoDisRedux, ...res })\r\n                        if (res.videoState === \"live\") { // show palay  \r\n                            setLiveIn(false) // hide counter and show play mutton\r\n                            if (setMenuItem) setMenuItem(\"play\")\r\n                        } else if (res.viewerState === \"logout\") { //invalid token\r\n                            handleLogOut()\r\n                        }\r\n                        removeListeners();\r\n                        setVideoPlay(true)// start playing  \r\n                        setSec15Loop(true)  //start update every 15s\r\n                        setMenueHideInterwal()// hide menue\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            }\r\n            else if (menuItem === \"list\") {\r\n                if (videoDis?.saved) {                   \r\n                    api.removeFromMyList(Token, videoId)\r\n                        .then(() => reloadData())\r\n                        .catch(error => console.log(error));\r\n                }\r\n                else {\r\n                    api.addToMyList(Token, videoId)\r\n                        .then(() => reloadData())\r\n                        .catch(error => console.log(error));\r\n                }\r\n            }\r\n            else if (menuItem === \"location\") {\r\n                console.log(\"Need add Location api call\") // Need Add API CALL Ti show Locations\r\n            }\r\n            else if (menuItem === \"producer\") {\r\n                console.log(\"Need add producer api call\") // Need add API CALL with prodisers\r\n            }\r\n            else if (menuItem === \"back\") {\r\n                hendleBack()\r\n            }\r\n            addListeners()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {loading ? <Loading /> :\r\n                <>\r\n                    {videoPlay\r\n                        ?\r\n                        <VideoBox>\r\n                            <VideoPlayer\r\n                                closeVideo={handleCloseVideo}\r\n                                url=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\r\n                                // url={videoDis ? videoDis.url : \"\"}\r\n                                play_pause={play_pause}\r\n                                speedUp={speedUp}\r\n                                speedDown={speedDown}\r\n                                plus10s={plus10s}\r\n                                minus10s={minus10s}\r\n                                showVideoMenue={showVideoMenue}\r\n                                userId={userId}\r\n                                videoId={videoDis ? videoDis.videoID : \"0\"}\r\n                                keyId={videoDis ? videoDis.key : \"0\"}\r\n                                magpieReportCall={magpieReportCall}\r\n                            />\r\n                        </VideoBox>\r\n                        :\r\n                        <MainBox bgImage={videoDisRedux.mediumImage}>\r\n                            <MenuBox>\r\n                                {showPlay ? <Buttons selected={menuItem === \"play\"} ><StyledPlay /> Play</Buttons> : \"\"}\r\n                                <Buttons selected={menuItem === \"list\"} > {videoDis?.saved ? <><StyledRemove />Remove from My List </> : <><StyledAdd /> Add to My List</>}</Buttons>\r\n                                <Buttons selected={menuItem === \"location\"}><StyledLocation /> <Span>{videoDis?.metadata.facility.name}</Span></Buttons>\r\n                                <Buttons selected={menuItem === \"producer\"}><StyledCameraMovie /> <Span>{videoDis?.metadata.producer.name}</Span></Buttons>\r\n                                <Buttons selected={menuItem === \"back\"}><StyledArrowBack /> Go Back</Buttons>\r\n                            </MenuBox>\r\n                            {eventWaitingMesage !== \"\" ?\r\n                                <SupportMessageBox>\r\n                                    <h2>{eventWaitingMesage}</h2>\r\n                                </SupportMessageBox>\r\n                                : \"\"}\r\n                            {videoDis?.supportMessage ?\r\n                                <SupportMessageBox>\r\n                                    <h2>{videoDis.supportMessage}</h2>\r\n                                </SupportMessageBox>\r\n                                : \"\"}\r\n                            {videoDis?.message ?\r\n                                <MessageBox>\r\n                                    <h2>{videoDis.message}</h2>\r\n                                </MessageBox>\r\n                                : \"\"}\r\n                            {liveIn\r\n                                ? <LiveBox>\r\n                                    {videoDis?.metadata.live && <LiveH1>Live In</LiveH1>}\r\n                                    <Counter>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {Math.floor(timer.days / 100) > 0 ? animateDays !== Math.floor(timer.days / 100) ? <NumbersElement >{Math.floor(timer.days / 100)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.days / 100)}</AnimeNumber> : \"\"}\r\n                                                {animateDays !== Math.floor(timer.days / 10) ? <NumbersElement >{Math.floor(timer.days / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.days / 10)}</AnimeNumber>}\r\n                                                {animateDaysS !== timer.days % 10 ? <NumbersElement >{timer.days % 10}</NumbersElement> : <AnimeNumber >{timer.days % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Days</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateHour !== Math.floor(timer.hours / 10) ? <NumbersElement >{Math.floor(timer.hours / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.hours / 10)}</AnimeNumber>}\r\n                                                {animateHourS !== timer.hours % 10 ? <NumbersElement >{timer.hours % 10}</NumbersElement> : <AnimeNumber >{timer.hours % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Hours</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateMin !== Math.floor(timer.minutes / 10) ? <NumbersElement >{Math.floor(timer.minutes / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.minutes / 10)}</AnimeNumber>}\r\n                                                {animateMinS !== timer.minutes % 10 ? <NumbersElement >{timer.minutes % 10}</NumbersElement> : <AnimeNumber >{timer.minutes % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Minutes</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateSec !== Math.floor(timer.seconds / 10) ? <NumbersElement >{Math.floor(timer.seconds / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.seconds / 10)}</AnimeNumber>}\r\n                                                {animateSecS !== timer.seconds % 10 ? <NumbersElement >{timer.seconds % 10}</NumbersElement> : <AnimeNumber >{timer.seconds % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Seconds</NumberText>\r\n                                        </NumberContainer>\r\n                                    </Counter>\r\n                                </LiveBox> : \"\"}\r\n                            <DisBox>\r\n                                <TitleBox>\r\n                                    <h2>{videoDis?.title}</h2>\r\n                                    <DisTimeBox>\r\n                                        <StyledTime>{moment.parseZone(videoDis?.metadata.start_time).format(\"hh:mm a\")} {videoDis?.metadata.timezone}</StyledTime>\r\n                                        <h2>{moment(videoDis?.startTime).format(\"ll\")}</h2>\r\n                                    </DisTimeBox>\r\n                                </TitleBox>\r\n                                <Dis>\r\n                                    <h2>{videoDis?.description}</h2>\r\n                                </Dis>\r\n                            </DisBox>\r\n                        </MainBox>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Video)","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx",["115"],"import styled, { keyframes } from 'styled-components';\r\nimport { videoDisListType, ListProps } from \"./index\"\r\nimport moment from 'moment';\r\nimport { colors } from \"../../constants\"\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nconst jelloHorizontal = keyframes`\r\n    0% {\r\n        transform: scale3d(1, 1, 1);\r\n    }\r\n    30% {\r\n        transform: scale3d(1.25, 0.75, 1);\r\n    }\r\n    40% {\r\n        transform: scale3d(0.75, 1.25, 1);\r\n    }\r\n    50% {\r\n        transform: scale3d(1.15, 0.85, 1);\r\n    }\r\n    65% {\r\n        transform: scale3d(0.95, 1.05, 1);\r\n    }\r\n    75% {\r\n        transform: scale3d(1.05, 0.95, 1);\r\n    }\r\n    100% {\r\n        transform: scale3d(1, 1, 1);\r\n    }\r\n`\r\nconst selectedCategory = keyframes`\r\n    from{\r\n        transform: scale(1) ; \r\n        opacity: 1;\r\n    }\r\n    to{\r\n        transform: scale(0.4) ; \r\n        margin-top: -170px;\r\n        opacity: 0;\r\n    }    \r\n`\r\nconst MainBox = styled.div`\r\n    z-index:1;\r\n    width: 90%;\r\n`\r\nconst CategorRow = styled.div`\r\n    display: flex;\r\n    color: ${colors.textPrimary};\r\n    background-color: ${colors.bgSecondary};\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    width: 100%;\r\n    margin: 20px 0;\r\n    min-height: 150px;\r\n    height: 15vh;    \r\n`\r\nconst SelectedCategorRow = styled(CategorRow)`\r\n    border: solid ${colors.borderPrimary} 2px;\r\n    box-shadow: 0px 0px 50px 5px ${colors.borderPrimary};\r\n    &.category-enter.category-enter-active {   \r\n        animation: ${selectedCategory}  0.4s ease-in-out reverse;            \r\n    }     \r\n    &.category-exit.category-exit-active {   \r\n        animation: ${selectedCategory}  0.4s ease-in-out ;     \r\n    }\r\n`\r\n\r\nconst DateBox = styled.div`    \r\n    flex-grow: 1;\r\n    font-size: 2em;\r\n    background-color: ${colors.primary};\r\n    /*color: ${colors.textSecondary};*/\r\n    flex-basis: 15%;\r\n    min-width: 150px;    \r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`\r\nconst TimeBox = styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 1.8em;\r\n    flex-basis: 15%;\r\n    min-width: 150px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    text-align: center;\r\n`\r\nconst ImageBox = styled.div`    \r\n    flex-grow: 1;\r\n    flex-basis: 15%;\r\n    min-width: 150px;    \r\n    height : 100%;    \r\n`\r\nconst DiscriptionBox = styled.div`    \r\n    flex-grow: 4;\r\n    flex-basis: 55%;\r\n    display: block;\r\n    padding: 15px;\r\n`\r\n\r\nconst Image = styled.img`    \r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 5px;    \r\n`\r\nconst DisTitleBox = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nconst DisTitle = styled.div`\r\n    font-size: 1.1em;\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n    color: ${colors.textSecondary};\r\n`\r\nconst DisLife = styled.div`\r\n    color: ${colors.textPrimary};\r\n    background-color: ${colors.bgAtention};    \r\n    padding: 0.25em;\r\n    font-weight: 700;\r\n    text-align: center;\r\n    border-radius: 0.25rem;\r\n    height: 1.5rem;\r\n    text-shadow: 2px 2px #130f10;\r\n`\r\nconst DisLifeAnime = styled(DisLife)`    \r\n    animation: ${jelloHorizontal}  0.9s both;\r\n`\r\n\r\nconst DisFacility = styled.div`\r\n    font-size: 1.3rem;\r\n    color: gray;\r\n    margin: 10px 0;\r\n`\r\nconst DisDiscription = styled.div`\r\n    max-height: 40px;\r\n    overflow: hidden;\r\n`\r\n\r\nconst Guide = ({ sellIndex, categoriesContent, selectedCol, selectedRow }: ListProps) => {\r\n    const CategoryData = (el: videoDisListType, anime: boolean) => {\r\n        return (\r\n            <>\r\n                <DateBox>\r\n                    <div>{moment(el.metadata.start_time).format(\"D\")}</div>\r\n                    <div>{moment(el.metadata.start_time).format(\"MMM\")}</div>\r\n                </DateBox>\r\n                <TimeBox>\r\n                    <div>{moment.parseZone(el.metadata.start_time).format(\"hh:mm a\")}</div>\r\n                    <div>{el.metadata.timezone}</div>\r\n                </TimeBox>\r\n                <ImageBox><Image src={el.smallImage} alt=\"Imag\"></Image></ImageBox>\r\n                <DiscriptionBox>\r\n                    <DisTitleBox>\r\n                        <DisTitle>{el.title}</DisTitle>\r\n                        {el.metadata.live ? anime ? <DisLifeAnime>LIVE</DisLifeAnime> : <DisLife>LIVE</DisLife> : \"\"}\r\n                    </DisTitleBox>\r\n                    <DisFacility>{el.metadata.facility.name}</DisFacility>\r\n                    <DisDiscription>{el.description}</DisDiscription>\r\n                </DiscriptionBox>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <MainBox>\r\n            <TransitionGroup\r\n                component={null}>                   \r\n                {categoriesContent[sellIndex].list.map((el, colIndex) => {\r\n                    if (selectedRow === sellIndex) {\r\n                        if (colIndex >= selectedCol) {\r\n                            if (colIndex === selectedCol) {\r\n                                return (\r\n                                    <CSSTransition timeout={300} classNames=\"category\"  key={colIndex} >\r\n                                        <SelectedCategorRow >\r\n                                            {CategoryData(el, true)}\r\n                                        </SelectedCategorRow>\r\n                                    </CSSTransition>)\r\n                            } else {\r\n                                return (\r\n                                    <CSSTransition timeout={300} classNames=\"category\" key={colIndex} >\r\n                                        <CategorRow  >\r\n                                            {CategoryData(el, false)}\r\n                                        </CategorRow>\r\n                                    </CSSTransition>\r\n                                )\r\n                            }\r\n                        } //else return <div></div>\r\n                    } else return (\r\n                        <CSSTransition timeout={200} classNames=\"category\" key={colIndex} >\r\n                            <CategorRow  >\r\n                                {CategoryData(el, false)}\r\n                            </CategorRow>\r\n                        </CSSTransition>\r\n                    )\r\n                })}\r\n            </TransitionGroup>\r\n        </MainBox>\r\n    )\r\n}\r\n\r\nexport default Guide","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx",["116","117","118","119"],"import React, { useRef, useState, useEffect } from \"react\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Forward10 } from \"@styled-icons/material/Forward10\"\r\nimport { Replay10 } from \"@styled-icons/material/Replay10\"\r\nimport { Forward2 } from \"@styled-icons/icomoon/Forward2\"\r\nimport { Backward } from \"@styled-icons/icomoon/Backward\"\r\nimport { PlayCircle } from \"@styled-icons/fa-regular/PlayCircle\"\r\nimport { PauseCircle } from \"@styled-icons/fa-regular/PauseCircle\"\r\nimport { colors, hexToRGBA, host } from \"../../constants\"\r\nimport { CarSport } from \"@styled-icons/ionicons-sharp/CarSport\"\r\nimport { Speedometer2 } from \"@styled-icons/bootstrap/Speedometer2\"\r\nimport { Loading } from \"../Loading\"\r\nimport api from \"../../api\";\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\ninterface ButtonProps {\r\n    clicked?: boolean\r\n}\r\ninterface ProgressProps {\r\n    width: number\r\n}\r\n\r\nconst ButtonClickAnimation = keyframes`\r\n    0% {\r\n        transform: scale(1);\r\n        filter: blur(0px);\r\n        opacity: 1;\r\n        color: ${colors.textPrimary}\r\n    }\r\n    100% {\r\n        transform: scale(0.8);\r\n        filter: blur(4px);       \r\n        color:${colors.primary}\r\n    }\r\n`\r\n\r\nconst ButtonClickAnimation2 = keyframes`\r\n    0% {\r\n        transform: scale(1);\r\n        filter: blur(0px);\r\n        opacity: 1;\r\n        color: ${colors.textPrimary}\r\n    }\r\n    100% {\r\n        transform: scale(0.8);\r\n        filter: blur(5px);       \r\n        color:${colors.primary}\r\n    }\r\n`\r\nconst MenueAnimation = keyframes`\r\n    0% {\r\n        transform: translateY(150px);        \r\n    }\r\n    100% {\r\n        transform: translateY(0);        \r\n    }\r\n`\r\n\r\nconst Forward10Button = styled(Forward10) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    outline: 0;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst Replay10Button = styled(Replay10) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    outline: 0;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\n\r\nconst Forward2Button = styled(Forward2) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    outline: 0;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst BackwardButton = styled(Backward) <ButtonProps>`\r\n    width: 3rem;\r\n    margin: 0 0.5rem;\r\n    outline: 0;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\n\r\nconst PlayCircleButton = styled(PlayCircle) <ButtonProps>`\r\n    width: 5rem;\r\n    margin: 0 0.5rem;\r\n    outline: 0;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst PauseCircleButton = styled(PauseCircle) <ButtonProps>`\r\n    width: 5rem;\r\n    margin: 0 0.5rem;\r\n    outline: 0;\r\n    animation: ${props => props.clicked ? ButtonClickAnimation : ButtonClickAnimation2} 0.1s cubic-bezier(0.165, 0.840, 0.440, 1.000) both reverse;\r\n`\r\nconst MenueContainer = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 100vw;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 20vh;\r\n    background-color:  ${hexToRGBA(colors.bgPrimary, 0.7)};\r\n    &.category-enter.category-enter-active {   \r\n        animation: ${MenueAnimation}  0.4s ease-in-out ;            \r\n      }     \r\n      &.category-exit.category-exit-active {   \r\n          animation: ${MenueAnimation}  0.5s ease-in-out reverse;     \r\n      }\r\n`\r\nconst ProgressContainer = styled.div`\r\n    width: 90%;\r\n`\r\n\r\nconst StyledCarSport = styled(CarSport) <ProgressProps>`\r\n    width: 3rem;\r\n    transform: translate(-5px, -35px); \r\n    margin-left: ${props => props.width}%;\r\n    color: ${colors.primary}\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    height: 100%;\r\n    align-items: center;\r\n    position: relative;\r\n`\r\nconst StyledVideo = styled.video`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center  ;   \r\n`\r\nconst TimeContainer = styled.div`\r\n    width: 6rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    font-size: 2rem;\r\n`\r\nconst CurrentTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n`\r\nconst SpeedBox = styled.div`\r\n    position: absolute;\r\n    left: 20%;\r\n    top: 40%;\r\n    font-size: 2rem;\r\n`\r\nconst ProgressBox = styled.div`   \r\n    height: 100%\r\n    width:100%;\r\n    background-color: ${colors.textPrimary};\r\n    border-radius: 10px;\r\n    margin-top:1rem;\r\n    height:1rem;\r\n    position: relative;\r\n`\r\nconst ProgressElement = styled.div<ProgressProps>`\r\n    height:100%;\r\n    width: ${props => props.width}%;\r\n    background-color: ${colors.primary};\r\n    border-radius: 10px 0px 0px 10px;\r\n    text-align: right;    \r\n`\r\nconst StyledSpeedometer2 = styled(Speedometer2)`\r\n    width: 2.5rem;    \r\n    margin-left: 0.5rem;\r\n    transform: translateY(-5px);\r\n`\r\n\r\n\r\ntype VideoProps = {\r\n    url: string,\r\n    closeVideo: () => void,\r\n    play_pause: boolean,\r\n    speedUp: boolean,\r\n    speedDown: boolean,\r\n    plus10s: boolean,\r\n    minus10s: boolean,\r\n    showVideoMenue: boolean,\r\n    userId: string,\r\n    videoId: string,\r\n    keyId: string,\r\n    magpieReportCall: boolean\r\n}\r\n\r\ntype TimeType = {\r\n    hours: number\r\n    minutes: number\r\n    seconds: number\r\n}\r\n\r\n\r\nconst VideoPlayer: React.FC<VideoProps> = ({ url, closeVideo, play_pause, speedUp, speedDown, plus10s, minus10s, showVideoMenue, userId, videoId, keyId, magpieReportCall }) => {\r\n    const video = useRef<HTMLVideoElement>(null)\r\n    const [playing, setPlaying] = useState<boolean>(true)\r\n    const [backSpeed, setBackSpeed] = useState<boolean>(true)\r\n    const [forwardSpeed, setForwardSpeed] = useState<boolean>(true)\r\n    const [plus10Sec, setPlus10Sec] = useState<boolean>(true)\r\n    const [minus10Sec, setMinus10Sec] = useState<boolean>(true)\r\n    const [currentTime, setCurrentTime] = useState<TimeType>({ hours: 0, minutes: 0, seconds: 0 })\r\n    const [videoDuration, setVideoDuration] = useState<TimeType>({ hours: 0, minutes: 0, seconds: 0 })\r\n    const [speed, setSpeed] = useState<1 | 2 | 3 | 4>(1)\r\n    const [progress, setProgress] = useState<number>(0)\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [videoReady, setVideoReady] = useState<boolean>(false)\r\n    const [magpieResset, setMagpieResset] = useState<boolean>(false)\r\n    const [magpieCounter, setMagpieCounter] = useState<any>(Date.now())\r\n    let magpieLoop: any\r\n\r\n    const usePrevious = (value: VideoProps) => {\r\n        const ref = useRef<VideoProps>();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    const previousProps = usePrevious({ url, play_pause, speedUp, speedDown, plus10s, minus10s, closeVideo, showVideoMenue, userId, videoId, keyId, magpieReportCall })\r\n\r\n    //Magpie Loop\r\n    useEffect(() => {\r\n        magpieApiReport()\r\n        magpieLoop = setTimeout(() => { setMagpieResset(!magpieResset) }, 60000);\r\n        return () => clearTimeout(magpieLoop)\r\n    }, [magpieResset, magpieReportCall])\r\n\r\n\r\n    //check which button ckicked\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            if (previousProps?.play_pause !== play_pause) playPauseHandle()\r\n            if (previousProps?.speedUp !== speedUp) fastForward()\r\n            if (previousProps?.speedDown !== speedDown) fastBack()\r\n            if (previousProps?.plus10s !== plus10s) moveUp10Sec()\r\n            if (previousProps?.minus10s !== minus10s) moveDown10Sec()\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }, [play_pause, speedUp, speedDown, plus10s, minus10s, loading])\r\n\r\n    //Timor session loop\r\n    useEffect(() => {\r\n        var timorSessionLoop = setInterval(() => {\r\n            api.timorSession(userId, videoId, video.current ? Math.round(video.current.currentTime) : 0, 15, video.current ? video.current.volume * 100 : 0, \"FireTV 2.0.0\")\r\n                .catch((err) => console.log(err.message))\r\n        }, 15000)\r\n        return () => clearInterval(timorSessionLoop)\r\n    }, [])\r\n\r\n\r\n    //Events \r\n    useEffect(() => {\r\n        video.current?.addEventListener(\"canplay\", canPlayHandler)\r\n        video.current?.addEventListener(\"ended\", videoEndedHandler)\r\n        video.current?.addEventListener(\"error\", (e) => errorHandler(e))\r\n        video.current?.addEventListener(\"pause\", pauseEventHandler);\r\n        video.current?.addEventListener(\"play\", playEventHandler);\r\n        // video.current?.addEventListener(\"timeupdate\", timeUpdateHandler)\r\n        video.current?.addEventListener(\"waiting\", waitingEventHandler)\r\n        video.current?.addEventListener(\"stalled\", stalledHandler)\r\n        return () => {\r\n            video.current?.removeEventListener(\"canplay\", canPlayHandler)\r\n            video.current?.removeEventListener(\"ended\", videoEndedHandler)\r\n            video.current?.removeEventListener(\"error\", errorHandler)\r\n            video.current?.removeEventListener(\"pause\", pauseEventHandler);\r\n            video.current?.removeEventListener(\"play\", playEventHandler);\r\n            // video.current?.removeEventListener(\"timeupdate\", timeUpdateHandler)\r\n            video.current?.removeEventListener(\"waiting\", waitingEventHandler)\r\n            video.current?.removeEventListener(\"stalled\", stalledHandler)\r\n        }\r\n    })\r\n\r\n    //progress loop update\r\n    useEffect(() => {\r\n        let intervalLoop = setInterval(() => {\r\n            let prog\r\n            if (video.current) {\r\n                prog = Math.round((video.current?.currentTime / video.current?.duration) * 100)\r\n                setProgress(prog)\r\n                const time: TimeType = {\r\n                    hours: Math.floor(Math.floor(video.current?.currentTime / 60) / 60),\r\n                    minutes: Math.floor(video.current?.currentTime / 60) - Math.floor(Math.floor(video.current?.currentTime / 60) / 60) * 60,\r\n                    seconds: Math.round(video.current?.currentTime - (Math.floor(video.current?.currentTime / 60) * 60))\r\n                }\r\n                setCurrentTime(time)\r\n                if (prog === 100) setPlaying(false)\r\n            }\r\n        }, 100)\r\n        return () => clearInterval(intervalLoop)\r\n    })\r\n\r\n    //Speed loop\r\n    useEffect(() => {\r\n        let speedLoop = setInterval(() => {\r\n            if (speed === 1) clearInterval(speedLoop)\r\n            if (speed === 2) if (video.current) video.current.currentTime += 10.0\r\n            if (speed === 3) if (video.current) video.current.currentTime += 60.0\r\n            if (speed === 4) if (video.current) video.current.currentTime += 120.0\r\n        }, 1000)\r\n        return () => clearInterval(speedLoop)\r\n    }, [speed])\r\n\r\n    //Event handlers\r\n    const canPlayHandler = () => {\r\n        if (video.current) {\r\n            const time: TimeType = {\r\n                hours: Math.floor(Math.floor(video.current?.duration / 60) / 60),\r\n                minutes: Math.floor(video.current?.duration / 60) - Math.floor(Math.floor(video.current?.duration / 60) / 60) * 60,\r\n                seconds: Math.round(video.current?.duration - (Math.floor(video.current?.duration / 60) * 60))\r\n            }\r\n            setVideoDuration(time)\r\n            setVideoReady(true)\r\n        }\r\n    }\r\n\r\n    const magpieApiReport = () => {\r\n        const report = {\r\n            key: keyId,\r\n            email: userId,\r\n            host: host,\r\n            video_id: videoId,\r\n            captured: new Date().toISOString(),\r\n            seconds: Math.floor((Date.now() - magpieCounter) / 1000)\r\n        }\r\n        setMagpieCounter(Date.now())\r\n        api.magpieReport(report).catch((err) => console.log(err.message))\r\n    }\r\n\r\n    const videoEndedHandler = () => {\r\n        magpieApiReport()\r\n        closeVideo()\r\n    }\r\n    const errorHandler = (err: ErrorEvent) => {\r\n        api.timorLogs(userId, videoId, \"error\", err.message).catch((err) => console.log(err.message))\r\n    }\r\n    const pauseEventHandler = () => {\r\n        api.timorLogs(userId, videoId, \"control\", \"Video paused\").catch((err) => console.log(err.message))\r\n    }\r\n    const playEventHandler = () => {\r\n        api.timorLogs(userId, videoId, \"control\", \"Video start playing\").catch((err) => console.log(err.message))\r\n    }\r\n    // const timeUpdateHandler = () => {\r\n    //     //loop 15s //session api\r\n    //     console.log(\"timeUpdateHandler\")\r\n    // }\r\n    const waitingEventHandler = () => {\r\n        api.timorLogs(userId, videoId, \"buffering\", \"\").catch((err) => console.log(err.message))\r\n    }\r\n    const stalledHandler = () => {\r\n        api.timorLogs(userId, videoId, \"info\", \"Video stall\").catch((err) => console.log(err.message))\r\n    }\r\n\r\n\r\n    //Speed icons\r\n    const Speed = () => {\r\n        let SpeedX = []\r\n        for (let i = 0; i < speed; i++) {\r\n            SpeedX.push(<StyledSpeedometer2 key={i} />)\r\n        }\r\n        return SpeedX\r\n    }\r\n\r\n    const playPauseHandle = () => {\r\n        clearTimeout(magpieLoop)\r\n        if (playing) { //pause\r\n            video.current?.pause()\r\n            setPlaying(false)\r\n            setSpeed(1)\r\n            magpieApiReport()\r\n        }\r\n        else { //play\r\n            video.current?.play()\r\n            setPlaying(true)\r\n            setSpeed(1)\r\n            setMagpieCounter(Date.now())\r\n            setMagpieResset(!magpieResset)\r\n        }\r\n    }\r\n    const fastForward = () => {\r\n        clearTimeout(magpieLoop)\r\n        magpieApiReport()\r\n        if (video.current) {\r\n            if (speed === 1) setSpeed(2)\r\n            if (speed === 2) setSpeed(3)\r\n            if (speed === 3) setSpeed(4)\r\n            setForwardSpeed(!forwardSpeed)\r\n        }\r\n    }\r\n    const fastBack = () => {\r\n        clearTimeout(magpieLoop)\r\n        magpieApiReport()\r\n        if (video.current) {\r\n            if (video.current) {\r\n                if (speed === 2) setSpeed(1)\r\n                if (speed === 3) setSpeed(2)\r\n                if (speed === 4) setSpeed(3)\r\n                setBackSpeed(!backSpeed)\r\n            }\r\n        }\r\n    }\r\n    const moveUp10Sec = () => {\r\n        if (video.current) video.current.currentTime += 10.0\r\n        setPlus10Sec(!plus10Sec)\r\n    }\r\n    const moveDown10Sec = () => {\r\n        if (video.current) video.current.currentTime -= 10.0\r\n        setMinus10Sec(!minus10Sec)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!videoReady ? <Loading /> : \"\"}\r\n            <StyledVideo ref={video} autoPlay id=\"video\">\r\n                {/* <source src={url} type=\"application/x-mpegURL\" /> */}\r\n                <source src={url} type=\"video/mp4\" />\r\n            </StyledVideo>\r\n            <CSSTransition\r\n                in={showVideoMenue}\r\n                timeout={400}\r\n                classNames=\"category\"\r\n                unmountOnExit\r\n            >\r\n                <MenueContainer>\r\n                    <ProgressContainer>\r\n                        <ProgressBox>\r\n                            <ProgressElement width={progress}> </ProgressElement><StyledCarSport width={progress} />\r\n                        </ProgressBox>\r\n                    </ProgressContainer>\r\n                    <ButtonContainer>\r\n                        <SpeedBox>\r\n                            Speed:{Speed()}\r\n                        </SpeedBox>\r\n                        <CurrentTimeBox>\r\n                            <TimeContainer>\r\n                                {currentTime?.hours > 0 ? `${currentTime?.hours}h:` : \"\"}\r\n                                {currentTime?.minutes > 0 ? `${currentTime?.minutes}m:` : \"\"}\r\n                                {currentTime?.seconds}s\r\n                            </TimeContainer>\r\n                        </CurrentTimeBox>\r\n                        <div>\r\n                            {backSpeed ? <BackwardButton clicked={true} onClick={fastBack} /> : <BackwardButton clicked={false} onClick={fastBack} />}\r\n                            {minus10Sec ? <Replay10Button clicked={true} onClick={moveDown10Sec} /> : <Replay10Button clicked={false} onClick={moveDown10Sec} />}\r\n                            {playing ? <PauseCircleButton clicked={play_pause} onClick={playPauseHandle} /> : <PlayCircleButton clicked={play_pause} onClick={playPauseHandle} />}\r\n                            {plus10Sec ? <Forward10Button clicked={true} onClick={moveUp10Sec} /> : <Forward10Button clicked={false} onClick={moveUp10Sec} />}\r\n                            {forwardSpeed ? <Forward2Button clicked={true} onClick={fastForward} /> : <Forward2Button clicked={false} onClick={fastForward} />}\r\n                        </div>\r\n                        <TimeContainer>\r\n                            {videoDuration?.hours > 0 ? `${videoDuration?.hours}h:` : \"\"}\r\n                            {videoDuration?.minutes > 0 ? `${videoDuration?.minutes}m:` : \"\"}\r\n                            {videoDuration?.seconds}s\r\n                        </TimeContainer>\r\n                    </ButtonContainer>\r\n                </MenueContainer>\r\n            </CSSTransition>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoPlayer","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\More.tsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":226,"column":8,"nodeType":"128","endLine":226,"endColumn":16,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":299,"column":23,"nodeType":"131","endLine":306,"endColumn":19},{"ruleId":"126","severity":1,"message":"132","line":313,"column":24,"nodeType":"131","endLine":320,"endColumn":18},{"ruleId":"126","severity":1,"message":"133","line":354,"column":8,"nodeType":"128","endLine":354,"endColumn":92,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":171,"column":71,"nodeType":"137","messageId":"138","endLine":171,"endColumn":73},{"ruleId":"126","severity":1,"message":"139","line":233,"column":22,"nodeType":"131","endLine":233,"endColumn":81},{"ruleId":"126","severity":1,"message":"140","line":249,"column":8,"nodeType":"128","endLine":249,"endColumn":68,"suggestions":"141"},{"ruleId":"126","severity":1,"message":"142","line":258,"column":8,"nodeType":"128","endLine":258,"endColumn":10,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":279,"column":19,"nodeType":"145","endLine":279,"endColumn":26},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],["146"],["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'localStorageSavedSearch'. Either include it or remove the dependency array.","ArrayExpression",["148"],"Assignments to the 'timeOut5min' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timeOut15sec' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'videoDis?.startTime'. Either include it or remove the dependency array.",["149"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Assignments to the 'magpieLoop' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'fastBack', 'fastForward', 'moveDown10Sec', 'moveUp10Sec', 'playPauseHandle', 'previousProps?.minus10s', 'previousProps?.play_pause', 'previousProps?.plus10s', 'previousProps?.speedDown', and 'previousProps?.speedUp'. Either include them or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'userId' and 'videoId'. Either include them or remove the dependency array.",["151"],"The ref value 'video.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'video.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [localStorageSavedSearch, search]",{"range":"160","text":"161"},"Update the dependencies array to be: [liveIn, videoDisRedux.metadata.start_time, videoDis.metadata.timezone, showPlay, videoDis?.startTime]",{"range":"162","text":"163"},"Update the dependencies array to be: [play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec]",{"range":"164","text":"165"},"Update the dependencies array to be: [userId, videoId]",{"range":"166","text":"167"},[6684,6692],"[localStorageSavedSearch, search]",[11584,11668],"[liveIn, videoDisRedux.metadata.start_time, videoDis.metadata.timezone, showPlay, videoDis?.startTime]",[8053,8113],"[play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec]",[8532,8534],"[userId, videoId]"]