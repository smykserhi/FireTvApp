[{"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx":"1","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts":"2","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts":"3","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx":"4","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts":"5","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts":"6","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts":"7","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx":"8","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx":"9","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx":"10","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx":"11","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx":"12","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx":"13","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx":"14","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts":"15","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts":"16","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx":"17","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx":"18","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx":"19","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx":"20","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx":"21","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx":"22","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx":"23","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx":"24"},{"size":748,"mtime":1613504667833,"results":"25","hashOfConfig":"26"},{"size":440,"mtime":1613504624495,"results":"27","hashOfConfig":"26"},{"size":442,"mtime":1613504667836,"results":"28","hashOfConfig":"26"},{"size":1272,"mtime":1613759281206,"results":"29","hashOfConfig":"26"},{"size":466,"mtime":1613504667835,"results":"30","hashOfConfig":"26"},{"size":658,"mtime":1613504667835,"results":"31","hashOfConfig":"26"},{"size":2376,"mtime":1614360871571,"results":"32","hashOfConfig":"26"},{"size":6956,"mtime":1613504667826,"results":"33","hashOfConfig":"26"},{"size":12596,"mtime":1613504667828,"results":"34","hashOfConfig":"26"},{"size":4472,"mtime":1614049246705,"results":"35","hashOfConfig":"26"},{"size":27886,"mtime":1614647475182,"results":"36","hashOfConfig":"26"},{"size":570,"mtime":1613504667827,"results":"37","hashOfConfig":"26"},{"size":140,"mtime":1613504624491,"results":"38","hashOfConfig":"26"},{"size":4862,"mtime":1613758653479,"results":"39","hashOfConfig":"26"},{"size":4636,"mtime":1614647717621,"results":"40","hashOfConfig":"26"},{"size":534,"mtime":1613504667834,"results":"41","hashOfConfig":"26"},{"size":2855,"mtime":1613504667822,"results":"42","hashOfConfig":"26"},{"size":20291,"mtime":1614664072438,"results":"43","hashOfConfig":"26"},{"size":2475,"mtime":1613504667830,"results":"44","hashOfConfig":"26"},{"size":1089,"mtime":1614125299211,"results":"45","hashOfConfig":"26"},{"size":5613,"mtime":1614112167206,"results":"46","hashOfConfig":"26"},{"size":3866,"mtime":1613504667823,"results":"47","hashOfConfig":"26"},{"size":4442,"mtime":1613504667823,"results":"48","hashOfConfig":"26"},{"size":19885,"mtime":1614703906882,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"11q4qkh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\index.tsx",[],["100","101"],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\reportWebVitals.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\store.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\App.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\dataReducer.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\logInReduser.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\constants.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\MyList\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Search\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\LogIn\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\index.tsx",["102","103","104","105"],"import React, { useState, useEffect } from \"react\"\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\nimport { StorageType } from \"../../store/types\"\r\nimport { LOGIN, colors, hexToRGBA } from \"../../constants\"\r\nimport { Loading } from \"../Loading\"\r\nimport api from \"../../api\"\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { AddCircleOutline } from \"@styled-icons/material/AddCircleOutline\"\r\nimport { RemoveCircleOutline } from \"@styled-icons/material/RemoveCircleOutline\"\r\nimport { Play } from \"@styled-icons/ionicons-solid/Play\"\r\nimport { VideoCamera } from \"@styled-icons/heroicons-solid/VideoCamera\"\r\nimport { LocationPin } from \"@styled-icons/entypo/LocationPin\"\r\nimport { metadataType } from \"../Home\"\r\nimport moment from 'moment';\r\nimport VideoPlayer from \"./VideoPlayer\"\r\nimport { ArrowBack } from \"@styled-icons/ionicons-sharp/ArrowBack\"\r\n\r\n\r\ninterface MainProps {\r\n    bgImage: string\r\n}\r\ninterface ButtonProps {\r\n    selected: boolean\r\n}\r\n\r\ninterface NumberProps {\r\n    anime?: boolean\r\n}\r\n\r\nconst ShowItemAnime = keyframes`\r\n\r\n    0% {\r\n      transform: rotateX(0deg);\r\n      background: ${colors.counterColour};\r\n    }   \r\n    50% {\r\n        transform: rotateX(90deg);\r\n        background: ${colors.primary};\r\n    }\r\n    100% {\r\n        transform: rotateX(0deg);\r\n        background: ${colors.counterColour};\r\n    }  \r\n`\r\nconst MainBox = styled.div<MainProps>`\r\n    background: url(\"${props => props.bgImage}\") no-repeat ;    \r\n    /*mask-image: linear-gradient(90deg, rgba(255,255,255,0) 10%, ${colors.bgPrimary} 25%) ;    */\r\n    background-size: 100% 100%;\r\n    background-position: 100%;    \r\n    width: 100%;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n    z-index:-1;\r\n`\r\nconst MenuBox = styled.div`    \r\n    position: absolute;\r\n    top: 40%;\r\n    width: 17vw;\r\n    padding-left: 4rem;\r\n`\r\nconst DisBox = styled.div`\r\n    background-color: ${hexToRGBA(colors.bgPrimary, 0.7)};\r\n    height: 30vh;\r\n    position: absolute;\r\n    top: 70%;\r\n    width: 100vw;  \r\n    \r\n`\r\nconst TitleBox = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 0 4rem;\r\n    opacity: 1;\r\n`\r\nconst Dis = styled.div`\r\n    margin: 0 4rem;\r\n    opacity: 1;\r\n`\r\nconst Buttons = styled.div<ButtonProps>`\r\n    width: 100%;\r\n    height: 2.5rem;\r\n    background-color: ${props => props.selected ? colors.bgPrimary : colors.textPrimary};\r\n    color: ${props => props.selected ? colors.textPrimary : \"black\"};\r\n    border: ${props => props.selected ? `solid ${colors.textPrimary} 2px` : \"\"} ;\r\n    border-radius: 5px;\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 0.5rem;\r\n    font-weight: 700;\r\n    /*animation: ${ShowItemAnime} 0.4s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;    */\r\n`\r\nconst StyledAdd = styled(AddCircleOutline)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n\r\n`\r\nconst StyledRemove = styled(RemoveCircleOutline)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledPlay = styled(Play)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledCameraMovie = styled(VideoCamera)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledLocation = styled(LocationPin)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst StyledArrowBack = styled(ArrowBack)`\r\n    height: 80%;\r\n    margin-right: 10px;\r\n`\r\nconst LiveBox = styled.div`\r\n    position: absolute;\r\n    left: 40%;\r\n    top: 40%;\r\n    background-color: ${hexToRGBA(colors.bgPrimary, 0.7)};\r\n    /*width: 20vw;*/\r\n    /*height: 4rem;*/\r\n    padding: 0 10px;\r\n    border-radius: 10px;\r\n    text-align: center;\r\n`\r\nconst LiveH1 = styled.h1`\r\n    color: ${colors.primary};\r\n    font-size: xxx-large;\r\n`\r\nconst DisTimeBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst StyledTime = styled.h2`\r\n    color: ${colors.primary};\r\n    margin-right: 1rem;\r\n`\r\nconst Counter = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst NumberContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\nconst NumberBox = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0 7px\r\n`\r\nconst NumbersElement = styled.div<NumberProps>`    \r\n    background: ${colors.counterColour};\r\n    margin: 0 2px;\r\n    font-weight: 700;\r\n    display: flex;\r\n    font-size: xxx-large;\r\n    justify-content: center;\r\n    border-radius: 5px;\r\n    padding: 0 8px;\r\n    align-items: center; \r\n    animation: ${ShowItemAnime} 0.5s ease-in-out both reverse  ;\r\n`\r\n\r\nconst AnimeNumber = styled(NumbersElement)`\r\n    animation: ${ShowItemAnime} 0.5s ease-in-out both  ;\r\n`\r\n\r\nconst NumberText = styled.div`\r\n    font-size: larger;\r\n    font-weight: 700;\r\n    margin-bottom: 2rem;\r\n`\r\nconst MessageBox = styled(LiveBox)`\r\n    top: 15%;   \r\n`\r\nconst SupportMessageBox = styled(MessageBox)`\r\n    top: 25%;\r\n`\r\nconst WeatingMessageBox = styled(LiveBox)`\r\n    top:40%   \r\n`\r\nconst Span = styled.span`\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n`\r\nconst VideoBox = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n`\r\n\r\ninterface matchParamsType {\r\n    id: string\r\n}\r\n\r\ninterface VideoDosType {\r\n    viewerState: string,\r\n    videoState: string,\r\n    startTime: string,\r\n    videoID: string,\r\n    key: string,\r\n    url: string,\r\n    message: null | string,\r\n    supportMessage: string,\r\n    saved: boolean,\r\n    description: string,\r\n    id: number,\r\n    image: string,\r\n    mediumImage: string,\r\n    metadata: metadataType,\r\n    smallImage: string,\r\n    title: string,\r\n    type: string,\r\n}\r\n\r\ntype MenuItemType = \"play\" | \"list\" | \"location\" | \"producer\" | \"back\"\r\ninterface Timer {\r\n    days: number,\r\n    hours: number,\r\n    minutes: number,\r\n    seconds: number\r\n}\r\n\r\n\r\nconst Video: React.FC<RouteComponentProps<matchParamsType>> = ({ history, match }) => {\r\n    const selectToken = (state: StorageType) => state.logIn.token\r\n    const selectUserId = (state: StorageType) => state.logIn.userName\r\n    const selectVideo = (state: StorageType) => state.data.videoDetails\r\n    const videoDisRedux = useSelector(selectVideo)\r\n    const Token = useSelector(selectToken) //token \r\n    const userId = useSelector(selectUserId) // user Id \r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [videoDis, setVideoDis] = useState<VideoDosType>()\r\n    const [menuItem, setMenuItem] = useState<MenuItemType>(\"play\")\r\n    const [timer, setTimer] = useState<Timer>({ days: 365, hours: 59, minutes: 59, seconds: 59 })\r\n    const [liveIn, setLiveIn] = useState<boolean>(false)\r\n    const [showPlay, setShowPlay] = useState<boolean>(false)\r\n    const [min5Loop, setMin5Loop] = useState<boolean>(true)\r\n    const [min5LoopCounter, setmin5LoopCounter] = useState<number>(0)\r\n    const [sec15Loop, setSec15Loop] = useState<boolean>(false)\r\n    const [sec15LoopCounter, setSec15LoopCounter] = useState<number>(0)\r\n    const [videoPlay, setVideoPlay] = useState<boolean>(false)\r\n    const [eventWaitingMesage, setEwentWeatingMessage] = useState<string>(\"\")\r\n    const [magpieReportCall, setMagpieReportCall] = useState<boolean>(false)\r\n    let timeOut5min: any\r\n    let timeOut15sec: any\r\n\r\n    //buttons\r\n    const [play_pause, setPlay_pause] = useState<boolean>(false)\r\n    const [speedUp, setSpeedup] = useState<boolean>(true)\r\n    const [speedDown, setSpeedDown] = useState<boolean>(true)\r\n    const [plus10s, setPlus10s] = useState<boolean>(true)\r\n    const [minus10s, setMinus10s] = useState<boolean>(true)\r\n    const [up, setUp] = useState<boolean>(true)\r\n    const [down, setDown] = useState<boolean>(true)\r\n\r\n    //animations \r\n    const [animateSec, setAnimateSec] = useState<number>(0)\r\n    const [animateMin, setAnimateMin] = useState<number>(0)\r\n    const [animateHour, setAnimateHour] = useState<number>(0)\r\n    const [animateDays, setAnimateDays] = useState<number>(0)\r\n    const [animateSecS, setAnimateSecS] = useState<number>(0)\r\n    const [animateMinS, setAnimateMinS] = useState<number>(0)\r\n    const [animateHourS, setAnimateHourS] = useState<number>(0)\r\n    const [animateDaysS, setAnimateDaysS] = useState<number>(0)\r\n    const videoId = match.params.id\r\n\r\n\r\n\r\n    //keyboard  events\r\n    useEffect(() => {\r\n        addListeners()\r\n        //if (timer.hours === 0) setSatrtUpdatingLoop(true)\r\n        return () => {\r\n            removeListeners()\r\n        }\r\n    })\r\n    //timet animarion triger\r\n    useEffect(() => {\r\n        if (Math.floor(timer.days / 10) !== animateDays) setAnimateDays(Math.floor(timer.days / 10))\r\n        if (timer.days % 10 !== animateDaysS) setAnimateDaysS(timer.days % 10)\r\n\r\n        if (Math.floor(timer.hours / 10) !== animateHour) setAnimateHour(Math.floor(timer.hours / 10))\r\n        if (timer.hours % 10 !== animateHourS) setAnimateHourS(timer.hours % 10)\r\n\r\n        if (Math.floor(timer.minutes / 10) !== animateMin) setAnimateMin(Math.floor(timer.minutes / 10))\r\n        if (timer.minutes % 10 !== animateMinS) setAnimateMinS(timer.minutes % 10)\r\n\r\n        if (Math.floor(timer.seconds / 10) !== animateSec) setAnimateSec(Math.floor(timer.seconds / 10))\r\n        if (timer.seconds % 10 !== animateSecS) setAnimateSecS(timer.seconds % 10)\r\n    }, [timer, animateDays, animateDaysS, animateHour, animateHourS, animateMin, animateMinS, animateSec, animateSecS])\r\n\r\n    //update data every 5 min\r\n    useEffect(() => {\r\n        //console.log(\"Start 5min loop\", min5Loop)\r\n        clearTimeout(timeOut5min)\r\n        timeOut5min = setTimeout(function () {\r\n            if (!min5Loop) {\r\n                clearTimeout(timeOut5min)\r\n            } else {\r\n                reloadData()\r\n                setmin5LoopCounter(min5LoopCounter + 1)\r\n            }\r\n\r\n\r\n        }, 300000)\r\n        return () => clearTimeout(timeOut5min)\r\n    }, [min5Loop, min5LoopCounter])\r\n    //Update data every 15sec\r\n    useEffect(() => {\r\n        //console.log(\"Start 15s loop\", sec15Loop,)\r\n        clearTimeout(timeOut15sec)\r\n        timeOut15sec = setTimeout(function () {\r\n            if (!sec15Loop) {\r\n                clearTimeout(timeOut15sec)\r\n            } else {\r\n                reloadData()\r\n                setSec15LoopCounter(sec15LoopCounter + 1)\r\n            }\r\n\r\n        }, 15000)\r\n        return () => clearTimeout(timeOut15sec)\r\n    }, [sec15Loop, sec15LoopCounter])\r\n    //timer\r\n    useEffect(() => {\r\n        if (liveIn) {\r\n            // const countDownDate = moment(videoDisRedux?.metadata?.start_time)\r\n            const countDownDate = moment(videoDis?.startTime)\r\n            const locationTimeOfset = (): number => {\r\n                const daylySavingTime = moment().isDST() ? -60 : 0 //if DST subtract 60min\r\n                if (videoDis?.metadata.timezone === \"Eastern\") return -300 - daylySavingTime\r\n                else if (videoDis?.metadata.timezone === \"Central\") return -360 - daylySavingTime\r\n                else if (videoDis?.metadata.timezone === \"Mountian\") return -420 - daylySavingTime\r\n                else return -480 - daylySavingTime\r\n            }\r\n            const timeOfset = new Date().getTimezoneOffset() + locationTimeOfset()\r\n            var timerLoop = setInterval(function () {\r\n                const now = moment()\r\n                // Find the distance between now and the count down date            \r\n                let distance = countDownDate.diff(now) - (timeOfset * 60000)\r\n                // Time calculations for days, hours, minutes and seconds\r\n                const time = {\r\n                    days: Math.floor(distance / (1000 * 60 * 60 * 24)),\r\n                    hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n                    minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\r\n                    seconds: Math.floor((distance % (1000 * 60)) / 1000),\r\n                }\r\n                time.hours = 0\r\n                distance = -1\r\n                if (time.hours === 0) {\r\n                    setMin5Loop(false) //stop updating very 5min\r\n                    setSec15Loop(true) //start updating every 15sec\r\n                }\r\n                if (distance < 0) {\r\n                    clearInterval(timerLoop)\r\n                    //console.log(\"Stop Timer\")\r\n                    if (liveIn) setLiveIn(false)\r\n                    setShowPlay(true)\r\n                    setEwentWeatingMessage(\"Event will start soon\")\r\n                }\r\n                setTimer(time)\r\n            }, 1000)\r\n        }\r\n\r\n        return () => clearInterval(timerLoop);\r\n    }, [liveIn, videoDisRedux?.metadata?.start_time, videoDis?.metadata.timezone, showPlay])\r\n\r\n    //main content loading\r\n    useEffect(() => {\r\n        if (!Token) history.push(LOGIN)\r\n        else if (loading) {\r\n            api.getVideoItemNoLock(Token, videoDisRedux.id)\r\n                .then(res => {\r\n                    // res.supportMessage = \"Support Message Test\"\r\n                    // res.message = \"Test MEssage\"\r\n                    //console.log(videoDisRedux, res)\r\n                    setVideoDis({ ...videoDisRedux, ...res })\r\n                    if (res.viewerState === \"watch\") {\r\n                        //if starts in the future                    \r\n                        if (((new Date(videoDisRedux.metadata.start_time).getTime()) - (new Date().getTime()) > 0) && (res.videoState === \"scheduled\" || res.videoState === \"upcoming\")) {\r\n                            setLiveIn(true) //start counter\r\n                            setMenuItem(\"list\") //selevt list item in menue\r\n                        } else if (res.videoState === \"available\") setShowPlay(true) // show play button\r\n                    }\r\n                    if (res.videoState === \"delist\") {\r\n                        //console.log(\"Go Back !!! videoState:\", res.videoState)\r\n                        history.goBack()\r\n                    }\r\n                    if (loading) setLoading(false)\r\n                })\r\n                .catch(error => console.log(error));\r\n        }\r\n    }, [Token, history, loading, videoDisRedux])\r\n\r\n    //update data after add ar remove from myList\r\n    const reloadData = () => {\r\n        //console.log(\"Updating data...\", videoPlay)\r\n        //change api depend on playing video or not\r\n        const apiCall = videoPlay ? api.getVideoItemState(Token, videoDisRedux.id) : api.getVideoItemNoLock(Token, videoDisRedux.id)\r\n        apiCall.then(res => {\r\n            //console.log(\"new data: \", videoDis, res)\r\n            if (videoDis) setVideoDis({ ...videoDisRedux, ...res })\r\n            if (res.viewerState === \"watch\") {\r\n                if (res.videoState === \"live\") { // show paly \r\n                    //if (showPlay) setShowPlay(true)\r\n                    if (liveIn) setLiveIn(false) // hide counter and show play mutton\r\n                    if (showPlay) setShowPlay(true) //show play button\r\n                    if (setMenuItem) setMenuItem(\"play\") //select play button\r\n                }\r\n            } else {\r\n                setVideoPlay(false) //close video \r\n                if (showPlay) setShowPlay(false) //hide play button\r\n            }\r\n        })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    const addListeners = () => {\r\n        //document.addEventListener(\"keydown\", handleKeyUp, true);\r\n        document.addEventListener(\"keyup\", handleKeyUp, true);\r\n    }\r\n\r\n    const removeListeners = () => {\r\n        //document.removeEventListener(\"keydown\", handleKeyUp, true);\r\n        document.removeEventListener(\"keyup\", handleKeyUp, true);\r\n    }\r\n\r\n    const handleKeyUp = (e: KeyboardEvent) => {\r\n        removeListeners();\r\n        switch (e.key) {\r\n            case 'Enter':\r\n                handleEnter()\r\n                break;\r\n            case 'ArrowUp':\r\n                handleArrowUp()\r\n                break;\r\n            case 'ArrowDown':\r\n                handleArrowDown()\r\n                break;\r\n            case 'ArrowRight':\r\n                handleArrowRight()\r\n                break;\r\n            case 'ArrowLeft':\r\n                hendleArrowLeft()\r\n                break;\r\n            case 'MediaPlayPause':\r\n                hendMediaPlayPause()\r\n                break;\r\n            case 'MediaFastForward':\r\n                hendleMediaFastForward()\r\n                break;\r\n            case 'MediaRewind':\r\n                hendleMediaRewind()\r\n                break;\r\n            case 'GoBack':\r\n            case 'Backspace':\r\n                hendleBack()\r\n                break;\r\n            default:\r\n                addListeners()\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    const hendleBack = () => {\r\n        if (videoPlay) {\r\n            setMagpieReportCall(!magpieReportCall)\r\n            handleCloseVideo()\r\n        } else history.goBack()\r\n    }\r\n    const hendleMediaFastForward = () => {\r\n        console.log(\"Hendled\")\r\n        if (videoPlay) {\r\n            setSpeedup(!speedUp)\r\n        } else addListeners()\r\n    }\r\n    const hendleMediaRewind = () => {\r\n        if (videoPlay) {\r\n            setSpeedDown(!speedDown)\r\n        } else addListeners()\r\n    }\r\n\r\n    const handleCloseVideo = () => {\r\n        console.log(\"close\")\r\n        setVideoPlay(false)\r\n    }\r\n    const hendMediaPlayPause = () => {\r\n        if (videoPlay) {\r\n            setPlay_pause(!play_pause)\r\n        } else addListeners()\r\n    }\r\n    const handleArrowRight = () => {\r\n        if (videoPlay) {\r\n            setPlus10s(!plus10s)\r\n        } else {\r\n            addListeners()\r\n        }\r\n\r\n    }\r\n\r\n    const hendleArrowLeft = () => {\r\n        if (videoPlay) {\r\n            setMinus10s(!minus10s)\r\n        } else {\r\n            addListeners()\r\n        }\r\n    }\r\n    const handleArrowUp = () => {\r\n        if (videoPlay) {\r\n            setUp(!up)\r\n        } else {\r\n            if (menuItem === \"back\") setMenuItem(\"producer\")\r\n            else if (menuItem === \"producer\") setMenuItem(\"location\")\r\n            else if (menuItem === \"location\") setMenuItem(\"list\")\r\n            else if (menuItem === \"list\" && (!liveIn || showPlay)) setMenuItem(\"play\")\r\n            else addListeners()\r\n        }\r\n\r\n    }\r\n    const handleArrowDown = () => {\r\n        if (videoPlay) {\r\n            setDown(!down)\r\n        } else {\r\n            if (menuItem === \"play\") setMenuItem(\"list\")\r\n            else if (menuItem === \"list\") setMenuItem(\"location\")\r\n            else if (menuItem === \"location\") setMenuItem(\"producer\")\r\n            else if (menuItem === \"producer\") setMenuItem(\"back\")\r\n            else addListeners()\r\n        }\r\n    }\r\n    const handleEnter = () => {\r\n        if (videoPlay) { //playing video  \r\n            setPlay_pause(!play_pause)\r\n        } else { //in details mode\r\n            if (menuItem === \"play\") {\r\n                console.log(\"play\")\r\n                clearTimeout(timeOut5min)\r\n                clearTimeout(timeOut15sec)\r\n                setMin5Loop(false) //stop updating very 5min\r\n                setSec15Loop(false) //stop updating every 15sec          \r\n                api.getVideoItem(Token, videoDisRedux.id)\r\n                    .then(res => {\r\n                        if (videoDis) setVideoDis({ ...videoDisRedux, ...res })\r\n                        if (res.videoState === \"live\") { // show paly                             \r\n                            api.timorLogs(userId, videoId, \"info\", `${res.url}`).catch((err) => console.log(err.message))\r\n                            setLiveIn(false) // hide counter and show play mutton\r\n                            if (setMenuItem) setMenuItem(\"play\")\r\n                        }\r\n                        setVideoPlay(true)// start playing  \r\n                        setSec15Loop(true)  //start update every 15s\r\n\r\n                    })\r\n                    .catch(error => console.log(error));\r\n            }\r\n            else if (menuItem === \"list\") {\r\n                if (videoDis?.saved) {\r\n                    //console.log(\"remove\")\r\n                    api.removeFromMyList(Token, videoId)\r\n                        .then(() => reloadData())\r\n                        .catch(error => console.log(error));\r\n                }\r\n                else {\r\n                    api.addToMyList(Token, videoId)\r\n                        .then(() => reloadData())\r\n                        .catch(error => console.log(error));\r\n                }\r\n            }\r\n            else if (menuItem === \"location\") {\r\n                console.log(\"Location\")\r\n            }\r\n            else if (menuItem === \"producer\") {\r\n                console.log(\"producer\")\r\n            }\r\n            else if (menuItem === \"back\") {\r\n                hendleBack()\r\n            }\r\n            addListeners()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {loading ? <Loading /> :\r\n                <>\r\n                    {videoPlay\r\n                        ?\r\n                        <VideoBox>\r\n                            <VideoPlayer\r\n                                closeVideo={handleCloseVideo}\r\n                                url=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\r\n                                // url={videoDis ? videoDis.url : \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"}\r\n                                play_pause={play_pause}\r\n                                speedUp={speedUp}\r\n                                speedDown={speedDown}\r\n                                plus10s={plus10s}\r\n                                minus10s={minus10s}\r\n                                up={up}\r\n                                down={down}\r\n                                userId={userId}\r\n                                videoId={videoDis ? videoDis.videoID : \"0\"}\r\n                                keyId={videoDis ? videoDis.key : \"0\"}\r\n                                magpieReportCall = {magpieReportCall}\r\n                            />\r\n                        </VideoBox>\r\n                        :\r\n                        <MainBox bgImage={videoDisRedux.mediumImage}>\r\n                            <MenuBox>\r\n                                {showPlay ? <Buttons selected={menuItem === \"play\"} ><StyledPlay /> Play</Buttons> : \"\"}\r\n                                <Buttons selected={menuItem === \"list\"} > {videoDis?.saved ? <><StyledRemove />Remove from My List </> : <><StyledAdd /> Add to My List</>}</Buttons>\r\n                                <Buttons selected={menuItem === \"location\"}><StyledLocation /> <Span>{videoDis?.metadata.facility.name}</Span></Buttons>\r\n                                <Buttons selected={menuItem === \"producer\"}><StyledCameraMovie /> <Span>{videoDis?.metadata.producer.name}</Span></Buttons>\r\n                                <Buttons selected={menuItem === \"back\"}><StyledArrowBack /> Go Back</Buttons>\r\n                            </MenuBox>\r\n                            {eventWaitingMesage !== \"\" ?\r\n                                <SupportMessageBox>\r\n                                    <h2>{eventWaitingMesage}</h2>\r\n                                </SupportMessageBox>\r\n                                : \"\"}\r\n                            {videoDis?.supportMessage ?\r\n                                <SupportMessageBox>\r\n                                    <h2>{videoDis.supportMessage}</h2>\r\n                                </SupportMessageBox>\r\n                                : \"\"}\r\n                            {videoDis?.message ?\r\n                                <MessageBox>\r\n                                    <h2>{videoDis.message}</h2>\r\n                                </MessageBox>\r\n                                : \"\"}\r\n                            {liveIn\r\n                                ? <LiveBox>\r\n                                    {videoDis?.metadata.live && <LiveH1>Live In</LiveH1>}\r\n                                    <Counter>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {Math.floor(timer.days / 100) > 0 ? animateDays !== Math.floor(timer.days / 100) ? <NumbersElement >{Math.floor(timer.days / 100)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.days / 100)}</AnimeNumber> : \"\"}\r\n                                                {animateDays !== Math.floor(timer.days / 10) ? <NumbersElement >{Math.floor(timer.days / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.days / 10)}</AnimeNumber>}\r\n                                                {animateDaysS !== timer.days % 10 ? <NumbersElement >{timer.days % 10}</NumbersElement> : <AnimeNumber >{timer.days % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Days</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateHour !== Math.floor(timer.hours / 10) ? <NumbersElement >{Math.floor(timer.hours / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.hours / 10)}</AnimeNumber>}\r\n                                                {animateHourS !== timer.hours % 10 ? <NumbersElement >{timer.hours % 10}</NumbersElement> : <AnimeNumber >{timer.hours % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Hours</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateMin !== Math.floor(timer.minutes / 10) ? <NumbersElement >{Math.floor(timer.minutes / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.minutes / 10)}</AnimeNumber>}\r\n                                                {animateMinS !== timer.minutes % 10 ? <NumbersElement >{timer.minutes % 10}</NumbersElement> : <AnimeNumber >{timer.minutes % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Minutes</NumberText>\r\n                                        </NumberContainer>\r\n                                        <NumberContainer>\r\n                                            <NumberBox>\r\n                                                {animateSec !== Math.floor(timer.seconds / 10) ? <NumbersElement >{Math.floor(timer.seconds / 10)}</NumbersElement> : <AnimeNumber >{Math.floor(timer.seconds / 10)}</AnimeNumber>}\r\n                                                {animateSecS !== timer.seconds % 10 ? <NumbersElement >{timer.seconds % 10}</NumbersElement> : <AnimeNumber >{timer.seconds % 10}</AnimeNumber>}\r\n                                            </NumberBox>\r\n                                            <NumberText>Seconds</NumberText>\r\n                                        </NumberContainer>\r\n                                    </Counter>\r\n                                </LiveBox> : \"\"}\r\n                            <DisBox>\r\n                                <TitleBox>\r\n                                    <h2>{videoDis?.title}</h2>\r\n                                    <DisTimeBox>\r\n                                        <StyledTime>{moment(videoDis?.startTime).format(\"LT\")} </StyledTime>\r\n                                        <h2>{moment(videoDis?.startTime).format(\"ll\")}</h2>\r\n                                    </DisTimeBox>\r\n                                </TitleBox>\r\n                                <Dis>\r\n                                    <h2>{videoDis?.description}</h2>\r\n                                </Dis>\r\n                            </DisBox>\r\n                        </MainBox>\r\n                    }\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Video)","C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Pages\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\NotFound\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Settings\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\api.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\store\\actions.ts",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Full.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\SideMenu\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Loading\\index.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Guide.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Showcase.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Home\\Normal.tsx",[],"C:\\Users\\asmyc\\Desktop\\Dev\\riivet\\firetv-2.0\\src\\componets\\Video\\VideoPlayer.tsx",["106","107","108","109","110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":184,"column":7,"nodeType":"118","messageId":"119","endLine":184,"endColumn":24},{"ruleId":"120","severity":1,"message":"121","line":302,"column":23,"nodeType":"122","endLine":311,"endColumn":19},{"ruleId":"120","severity":1,"message":"123","line":318,"column":24,"nodeType":"122","endLine":326,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":371,"column":8,"nodeType":"125","endLine":371,"endColumn":92,"suggestions":"126"},{"ruleId":"116","severity":1,"message":"127","line":197,"column":6,"nodeType":"118","messageId":"119","endLine":197,"endColumn":21},{"ruleId":"120","severity":1,"message":"128","line":248,"column":22,"nodeType":"122","endLine":248,"endColumn":81},{"ruleId":"120","severity":1,"message":"129","line":266,"column":8,"nodeType":"125","endLine":266,"endColumn":68,"suggestions":"130"},{"ruleId":"116","severity":1,"message":"131","line":273,"column":19,"nodeType":"118","messageId":"119","endLine":273,"endColumn":23},{"ruleId":"120","severity":1,"message":"132","line":287,"column":8,"nodeType":"125","endLine":287,"endColumn":10,"suggestions":"133"},{"ruleId":"120","severity":1,"message":"134","line":309,"column":19,"nodeType":"118","endLine":309,"endColumn":26},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'WeatingMessageBox' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'timeOut5min' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'timeOut15sec' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'videoDis?.startTime'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'PrevSessionType' is defined but never used.","Assignments to the 'magpieLoop' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'down', 'fastBack', 'fastForward', 'moveDown10Sec', 'moveUp10Sec', 'playPauseHandle', 'previousProps?.down', 'previousProps?.minus10s', 'previousProps?.play_pause', 'previousProps?.plus10s', 'previousProps?.speedDown', 'previousProps?.speedUp', 'previousProps?.up', and 'up'. Either include them or remove the dependency array.",["138"],"'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userId' and 'videoId'. Either include them or remove the dependency array.",["139"],"The ref value 'video.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'video.current' to a variable inside the effect, and use that variable in the cleanup function.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [liveIn, videoDisRedux.metadata.start_time, videoDis?.metadata.timezone, showPlay, videoDis?.startTime]",{"range":"146","text":"147"},"Update the dependencies array to be: [play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, previousProps?.up, previousProps?.down, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec, up, down]",{"range":"148","text":"149"},"Update the dependencies array to be: [userId, videoId]",{"range":"150","text":"151"},[12522,12606],"[liveIn, videoDisRedux.metadata.start_time, videoDis?.metadata.timezone, showPlay, videoDis?.startTime]",[8422,8482],"[play_pause, speedUp, speedDown, plus10s, minus10s, loading, previousProps?.play_pause, previousProps?.speedUp, previousProps?.speedDown, previousProps?.plus10s, previousProps?.minus10s, previousProps?.up, previousProps?.down, playPauseHandle, fastForward, fastBack, moveUp10Sec, moveDown10Sec, up, down]",[9519,9521],"[userId, videoId]"]